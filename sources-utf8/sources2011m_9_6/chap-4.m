#*************************************************************************************************************************
#
#Copyright or © or Copr.[DGFIP][2017]
#
#Ce logiciel a été initialement développé par la Direction Générale des 
#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2012 
#au titre des revenus percus en 2011. La présente version a permis la 
#génération du moteur de calcul des chaînes de taxation des rôles d'impôt 
#sur le revenu de ce millésime.
#
#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français 
#et respectant les principes de diffusion des logiciels libres. Vous pouvez 
#utiliser, modifier et/ou redistribuer ce programme sous les conditions de 
#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur 
#le site "http://www.cecill.info".
#
#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris 
#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.
#
#**************************************************************************************************************************

 #
                                                                
  ####   #    #    ##    #####      #     #####  #####   ######      #    
 #    #  #    #   #  #   #    #     #       #    #    #  #           #    #
 #       ######  #    #  #    #     #       #    #    #  #####       #    #
 #       #    #  ######  #####      #       #    #####   #           ######
 #    #  #    #  #    #  #          #       #    #   #   #                #
  ####   #    #  #    #  #          #       #    #    #  ######           #
 #
 #
 #
 #
 #
 #
 #                      CALCUL DE L'IMPOT BRUT
 #
 #
 #
 #
 #
 #
 #
regle 401:
application : pro , oceans , bareme, iliad , batch  ;
IRB = IAMD2; 
IRB2 = IAMD2 + TAXASSUR + IPCAPTAXT + IHAUTREVT;
regle 40101:
application : pro , oceans , iliad , batch  ;
KIR =   IAMD3 ;
regle 4011:
application : pro , oceans , bareme , iliad , batch  ;
IAMD1 = IBM13 ;
IAMD2 = IBM23 ;
IAMD2TH = positif_ou_nul(IBM23 - SEUIL_PERCEP)*IBM23;
regle 40110:
application : pro , oceans , bareme , iliad , batch  ;
IAMD3 = IBM33 - min(ACP3, IMPIM3);
regle 402112:
application : pro , oceans , iliad , batch  ;
ANG3 = IAD32 - IAD31;
regle 40220:
application : pro , oceans , iliad , batch  ;
ACP3 = max (0 ,
 somme (a=1..4: min(arr(CHENFa * TX_DPAEAV/100) , SEUIL_AVMAXETU)) - ANG3)
        * (1 - positif(V_CR2 + IPVLOC)) * positif(ANG3) * positif(IMPIM3);
regle 403:
application : pro , oceans , bareme ,iliad , batch  ;

IBM13 = IAD11 + ITP + REI + TAXASSUR + IPCAPTAXT  + IHAUTREVT + AVFISCOPTER ;

IBM23 = IAD11 + ITP + REI + AUTOVERSSUP + AVFISCOPTER ;

regle 404:
application : pro , oceans , bareme , iliad , batch  ;
IBM33 = IAD31 + ITP + REI;
regle 4041:
application : pro , oceans , iliad , batch  ;
TX_RED0 =  inf ( (100 - ((TX_RABGUY * V_EAG) + (TX_RABDOM * V_EAD))
	     ) * TXGAIN0  / 100 * positif(V_EAD + V_EAG)
	   );
TX_RED1 =  inf ( (100 - ((TX_RABGUY * V_EAG) + (TX_RABDOM * V_EAD))
	     ) * TXGAIN1 / 100 * positif(V_EAD + V_EAG)
	   );
DOMAVTO = arr(BN1 + SPEPV + BI12F + BA1) * ((TXGAIN0 - TX_RED0)/100) * positif(V_EAD)
          + arr(BN1 + SPEPV + BI12F + BA1) * ((TXGAIN0 - TX_RED0)/100) * positif(V_EAG);
DOMABDB = max(PLAF_RABDOM - ABADO , 0) * positif(V_EAD)
          + max(PLAF_RABGUY - ABAGU , 0) * positif(V_EAG);
DOMDOM = max(DOMAVTO - DOMABDB , 0) * positif(V_EAD + V_EAG);

ITP = arr((BTP2 * TXGAIN2/100) + (BPTP4 * TXGAIN3/100) 
       + ((BN1 + SPEPV + BI12F + BA1) * positif(V_EAG+V_EAD) * TX_RED0/100) 
       + (BPVCESDOM * positif(V_EAG+V_EAD) * TX_RED1/100) 
       + (BTP40 * TXGAIN4/100)
       + DOMDOM * positif(V_EAD + V_EAG)
       + (BPV18 * TXGAIN5/100)
       + (BTP3G * TXGAIN1/100)
       + (BTP3N * TXGAIN1/100)
       + ((BN1 + SPEPV + BI12F + BA1) * (1-positif(V_EAG + V_EAD)) * TXGAIN0/100) 
       + (BPVCESDOM * (1-positif(V_EAG + V_EAD)) * TXGAIN1/100)
       + (BPTP5 * TXGAIN1/100) * (1 - positif(null(5 - V_REGCO)+null(6 - V_REGCO)))
       + (BPTP5 * TX11/100) * null(6 - V_REGCO)
       + (BPTP5 * TX13/100) * null(5 - V_REGCO)
	  )
       * (1-positif(IPVLOC)) * (1 - positif(present(TAX1649)+present(RE168))); 

regle 40413:
application : pro , oceans , iliad , batch  ;
BTP3A = (BN1 + SPEPV + BI12F + BA1) * (1 - positif( IPVLOC )); 
BTP3N = (BPVKRI) * (1 - positif( IPVLOC )); 
BTP3G = (BPVRCM) * (1 - positif( IPVLOC )); 
BTP2 = PEA * (1 - positif( IPVLOC )); 
BTP40 = BPV40 * (1 - positif( IPVLOC )); 
BTP18 = BPV18 * (1 - positif( IPVLOC )); 
BTP5 = PVIMPOS * (1 - positif( IPVLOC )); 

REVTP1 = max(0,BPVRCM + ABDETPLUS + ABIMPPV - DPVRCM - ABDETMOINS - ABIMPMV) + BPVCESDOM + BPV18 + BPV40 + BPCOPT + BPVKRI + PEA ;

regle 4042:
application : pro , oceans , iliad , batch  ;


REI = IPREP+IPPRICORSE;

regle 40421:
application : pro , oceans , iliad , batch  ;


PPERSATOT = RSAFOYER + RSAPAC1 + RSAPAC2 ;

PPERSA = min(PPETOT,PPERSATOT) * (1 - V_CNR) ;

PPEFINAL = PPETOT - PPERSA ;

regle 405:
application : pro , oceans , bareme , iliad , batch  ;


IAD11 = ( max(0,IDOM11-DEC11-RED) *(1-positif(V_CR2+IPVLOC))
        + positif(V_CR2+IPVLOC) *max(0 , IDOM11 - RED) )
                                * (1-positif(RE168+TAX1649))
        + positif(RE168+TAX1649) * IDOM16;

regle 406:
application : pro , oceans , bareme , iliad , batch  ;
IAD31 = ((IDOM31-DEC31)*(1-positif(V_CR2+IPVLOC)))
        +(positif(V_CR2+IPVLOC)*IDOM31);
IAD32 = ((IDOM32-DEC32)*(1-positif(V_CR2+IPVLOC)))
        +(positif(V_CR2+IPVLOC)*IDOM32);

regle 4052:
application : pro , oceans , bareme , iliad , batch  ;

IMPIM3 =  IAD31 ;

regle 4061:
application : pro , oceans , bareme , iliad , batch  ;
pour z = 1,2:
DEC1z = min (max( arr(SEUIL_DECOTE/2 - (IDOM1z/2)),0),IDOM1z) * (1 - V_CNR);

pour z = 1,2:
DEC3z = min (max( arr(SEUIL_DECOTE/2 - (IDOM3z/2)),0),IDOM3z) * (1 - V_CNR);

DEC6 = min (max( arr(SEUIL_DECOTE/2 - (IDOM16/2)),0),IDOM16) * (1 - V_CNR);
regle 407:
application : pro ,   oceans , iliad   , batch ;

RED =  RCOTFOR + RSURV + RCOMP + RHEBE + RREPA + RDIFAGRI + RDONS
       + RCELTOT
       + RSYND + RRESTIMO + RPECHE 
       + RFIPC + RFIPDOM + RAIDE + RNOUV 
       + RTOURNEUF + RTOURTRA + RTOURREP 
       + RTOUREPA + RTOURES + RTOUHOTR  
       + RLOGDOM + RLOGSOC + RDOMSOC1 + RLOCENT + RCOLENT
       + RRETU + RINNO + RRPRESCOMP + RFOR 
       + RSOUFIP + RRIRENOV + RSOCREPR + RRESIMEUB + RRESINEUV + RRESIVIEU
       + RREDMEUB + RREDREP + RINVRED + RMEUBLE + RPROREP + RREPNPRO + RREPMEU
       + RIDOMPROE3 + RIDOMPROE4 + RIDOMPROE5
       + RPATNAT1 + RPATNAT
       + RFORET + RTITPRISE + RCREAT + RCINE ;


REDTL = ASURV + ACOMP ;

CIMPTL = ATEC + ADEVDUR + BGERET ;

regle 4070:
application : bareme ;
RED = V_9UY;
regle 4025:
application : pro ,   oceans , iliad , batch  ;

PLAFDOMPRO1 = max(0 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
		      -RDONS-RNOUV-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RPATNAT1-RPATNAT
                 );
RIDOMPROE5 =  min(REPINVDOMPRO1,PLAFDOMPRO1) * (1 - V_CNR);

REPDOMENTR5 = positif (REPINVDOMPRO1- PLAFDOMPRO1)* (REPINVDOMPRO1 - PLAFDOMPRO1)* (1 -V_CNR);


PLAFDOMPRO2 = positif(PLAFDOMPRO1 - REPINVDOMPRO1)* (PLAFDOMPRO1 - REPINVDOMPRO1)* (1 -V_CNR); 
RIDOMPROE4 = min(REPINVDOMPRO2,PLAFDOMPRO2) * (1 - V_CNR);
REPDOMENTR4 = positif (REPINVDOMPRO2 - PLAFDOMPRO2)* (REPINVDOMPRO2 - PLAFDOMPRO2)* (1 -V_CNR);


PLAFDOMPRO3 = positif(PLAFDOMPRO2 - REPINVDOMPRO2)* (PLAFDOMPRO2 - REPINVDOMPRO2)* (1 -V_CNR); 
RIDOMPROE3 = min(REPINVDOMPRO3,PLAFDOMPRO3) * (1 - V_CNR);
REPDOMENTR3 = positif (REPINVDOMPRO3 - PLAFDOMPRO3)* (REPINVDOMPRO3 - PLAFDOMPRO3)* (1 -V_CNR);


RIDOMPROTOT = RIDOMPROE3 + RIDOMPROE4 + RIDOMPROE5;

RINVEST = RIDOMPROE3  + RIDOMPROE4 + RIDOMPROE5 ;
RIDOMPRO = REPINVDOMPRO1 + REPINVDOMPRO2 + REPINVDOMPRO3 ;

DIDOMPRO = RIDOMPRO * (1 - V_CNR) ;
regle 40749:
application : pro ,   oceans , iliad , batch  ;

DFORET = FORET ;

AFORET = max(min(DFORET,LIM_FORET),0) * (1-V_CNR) ;

RAFORET = arr(AFORET*TX_FORET/100) * (1-V_CNR) ;

RFORET =  max( min( RAFORET , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI) , 0 ) ;

regle 4075:
application : pro , oceans , iliad , batch ;

DFIPC = FIPCORSE ;

AFIPC = max( min(DFIPC , LIM_FIPCORSE * (1 + BOOL_0AM)) , 0) * (1 - V_CNR) ;

RFIPCORSE = arr(AFIPC * TX_FIPCORSE/100) * (1 - V_CNR) ;

RFIPC = max( min( RFIPCORSE , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET) , 0) ;

regle 40751:
application : pro , oceans , iliad , batch ;

DFIPDOM = FIPDOMCOM ;

AFIPDOM = max( min(DFIPDOM , LIMFIPDOM * (1 + BOOL_0AM)) , 0) * (1 - V_CNR) ;

RFIPDOMCOM = arr(AFIPDOM * TXFIPDOM/100) * (1 - V_CNR) ;

RFIPDOM = max( min( RFIPDOMCOM , IDOM11-DEC11-RCOTFOR-RREPA-RSYND) , 0) ;

regle 4076:
application : pro ,   oceans , iliad , batch  ;
BSURV = min( RDRESU , PLAF_RSURV + PLAF_COMPSURV * (EAC + V_0DN) + PLAF_COMPSURVQAR * (V_0CH + V_0DP) );
RRS = arr( BSURV * TX_REDSURV / 100 ) * (1 - V_CNR);
DSURV = RDRESU;
ASURV = BSURV * (1-V_CNR) ;
RSURV = max( min( RRS , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC
			-RCINE-RRESTIMO-RPECHE-RSOCREPR-RRPRESCOMP-RHEBE ) , 0 );

regle 4100:
application : pro , oceans , iliad , batch ;

RRCN = arr(  min( CINE1 , min( max(SOFIRNG,RNG) * TX_CINE3/100 , PLAF_CINE )) * TX_CINE1/100
        + min( CINE2 , max( min( max(SOFIRNG,RNG) * TX_CINE3/100 , PLAF_CINE ) - CINE1 , 0)) * TX_CINE2/100 
       ) * (1 - V_CNR) ;

DCINE = CINE1 + CINE2 ;

ACINE = max(0,min( CINE1 + CINE2 , min( arr(SOFIRNG * TX_CINE3/100) , PLAF_CINE ))) * (1 - V_CNR);

RCINE = max( min( RRCN , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC) , 0 ) ;
regle 4176:
application : pro ,   oceans , iliad , batch  ;
BSOUFIP = min( FFIP , LIM_SOUFIP * (1 + BOOL_0AM));
RFIP = arr( BSOUFIP * TX_REDFIP / 100 ) * (1 - V_CNR);
DSOUFIP = FFIP;
ASOUFIP = BSOUFIP * (1-V_CNR) ;
RSOUFIP = max( min( RFIP , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC
			   -RCINE-RRESTIMO-RPECHE-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RTITPRISE-RINNO) , 0 );

regle 4200:
application : pro ,   oceans , iliad , batch  ;

BRENOV = min(RIRENOV,PLAF_RENOV) ;
RENOV = arr( BRENOV * TX_RENOV / 100 ) * (1 - V_CNR) ;

DRIRENOV = RIRENOV ;
ARIRENOV = BRENOV * (1 - V_CNR) ;
RRIRENOV = max( min( RENOV , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC-RCINE
			     -RRESTIMO-RPECHE-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RTITPRISE-RINNO-RSOUFIP) , 0 );

regle 40771:
application : pro ,   oceans , iliad , batch  ;
RFC = min(RDCOM,PLAF_FRCOMPTA * max(1,NBACT)) * present(RDCOM)*(1-V_CNR);
NCOMP = max(1,NBACT)* present(RDCOM) * (1-V_CNR);
DCOMP = RDCOM;
ACOMP = RFC;
regle 10040771:
application : pro ,   oceans , iliad , batch  ;
RCOMP = max(min( RFC , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCREAT) , 0) ;

regle 4078:
application : pro ,   oceans , iliad , batch  ;

BCEL_2011 = arr( min(( CELLIERNA + CELLIERNC + CELLIERND + CELLIERNE + CELLIERNF + CELLIERNH
		     + CELLIERNI + CELLIERNJ + CELLIERNK + CELLIERNM + CELLIERNN + CELLIERNO  + 0 ), LIMCELLIER ) /9 );

BCELCOM2011 = arr( min(( CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT + 0 ), LIMCELLIER ) /5 );

BCEL_NBGL = arr( min(( CELLIERNB + CELLIERNG + CELLIERNL + 0), LIMCELLIER ) /9 );

BCEL_NQ = arr( min(( CELLIERNQ + 0), LIMCELLIER ) /5 );


BCEL_HNO = arr ( min ((CELLIERHN + CELLIERHO + 0 ), LIMCELLIER ) /9 );
BCEL_HJK = arr ( min ((CELLIERHJ + CELLIERHK + 0 ), LIMCELLIER ) /9 );

BCEL_HL = arr ( min ((CELLIERHL + 0 ), LIMCELLIER ) /9 );
BCEL_HM = arr ( min ((CELLIERHM + 0 ), LIMCELLIER ) /9 );


DCELRREDLA = CELRREDLA;
ACELRREDLA = CELRREDLA * (1 - V_CNR);


DCELRREDLB = CELRREDLB;
ACELRREDLB = CELRREDLB * (1 - V_CNR);


DCELRREDLC = CELRREDLC;
ACELRREDLC = CELRREDLC * (1 - V_CNR);


DCELREPHS = CELREPHS; 
ACELREPHS = DCELREPHS * (1 - V_CNR); 


DCELREPHR = CELREPHR ;    
ACELREPHR = DCELREPHR * (1 - V_CNR);


DCELREPHU = CELREPHU; 
ACELREPHU = DCELREPHU * (1 - V_CNR); 


DCELREPHT = CELREPHT; 
ACELREPHT = DCELREPHT * (1 - V_CNR); 


DCELREPHZ = CELREPHZ; 
ACELREPHZ = DCELREPHZ * (1 - V_CNR); 


DCELREPHX = CELREPHX; 
ACELREPHX = DCELREPHX * (1 - V_CNR); 


DCELREPHW = CELREPHW; 
ACELREPHW = DCELREPHW * (1 - V_CNR); 


DCELREPHV = CELREPHV; 
ACELREPHV = DCELREPHV * (1 - V_CNR); 


DCELHM = CELLIERHM ; 
ACELHM = (positif_ou_nul( CELLIERHM) * BCEL_HM) * (1-V_CNR); 


DCELHL = CELLIERHL ;    
ACELHL = (positif_ou_nul( CELLIERHL) * BCEL_HL) * (1-V_CNR); 


DCELHNO = CELLIERHN + CELLIERHO ;
ACELHNO = (positif_ou_nul( CELLIERHN + CELLIERHO ) * BCEL_HNO) * (1-V_CNR) ;


DCELHJK = CELLIERHJ + CELLIERHK ;
ACELHJK = (positif_ou_nul( CELLIERHJ + CELLIERHK ) * BCEL_HJK) * (1-V_CNR);


DCELNQ =   CELLIERNQ;
ACELNQ = (positif_ou_nul( CELLIERNQ) * BCEL_NQ) * (1-V_CNR);


DCELCOM =   CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT;
ACELCOM = (positif_ou_nul(CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT) * BCELCOM2011) * (1-V_CNR);


DCELNBGL =   CELLIERNB + CELLIERNG + CELLIERNL;
ACELNBGL = (positif_ou_nul( CELLIERNB + CELLIERNG + CELLIERNL ) * BCEL_NBGL) * (1-V_CNR);


CELSOMN = CELLIERNA+CELLIERNC+CELLIERND+CELLIERNE+CELLIERNF+CELLIERNH
	 +CELLIERNI+CELLIERNJ+CELLIERNK+CELLIERNM+CELLIERNN+CELLIERNO;  

DCEL = CELSOMN ; 

ACEL = (positif_ou_nul( CELSOMN ) * BCEL_2011) * (1-V_CNR);



RCEL_2011 = (  positif(CELLIERNA + CELLIERNE) * arr (ACEL * (TX22/100))
            + positif(CELLIERNC + CELLIERND + CELLIERNH) * arr (ACEL * (TX25/100))
            + positif(CELLIERNF + CELLIERNJ) * arr (ACEL * (TX13/100))
            + positif(CELLIERNI) * arr (ACEL * (TX15/100))
	    + positif(CELLIERNM + CELLIERNN) * arr (ACEL * (TX40/100))
	    + positif(CELLIERNK + CELLIERNO) * arr (ACEL * (TX36/100))
           ) * (1 - V_CNR);

RCEL_COM = (  positif(CELLIERNP + CELLIERNT) * arr (ACELCOM * (TX36/100))
               + positif(CELLIERNR + CELLIERNS) * arr (ACELCOM * (TX40/100)) 
              ) * (1 - V_CNR);

RCEL_NBGL = (  positif(CELLIERNB) * arr(ACELNBGL * (TX25/100))
	       + positif(CELLIERNG) * arr(ACELNBGL * (TX15/100))
	       + positif(CELLIERNL) * arr(ACELNBGL * (TX40/100))
              ) * (1 - V_CNR);

RCEL_NQ = ( positif(CELLIERNQ) * arr(ACELNQ * (TX40/100)) ) * (1 - V_CNR);


RCEL_HNO = (  positif(CELLIERHN) * arr(ACELHNO * (TX25/100))
	       + positif(CELLIERHO) * arr(ACELHNO * (TX40/100))
              ) * (1 - V_CNR);

RCEL_HJK = (  positif(CELLIERHJ) * arr(ACELHJK * (TX25/100))
	      + positif(CELLIERHK) * arr(ACELHJK * (TX40/100))
             ) * (1 - V_CNR);


RCELDOM = (positif(CELLIERHK + CELLIERHO) * arr (ACELDO * (TX40/100))) 
             * (1 - V_CNR);                           

RCELM = (positif( CELLIERHJ + CELLIERHN ) * arr (ACELMET * (TX25/100)))
             * (1 - V_CNR);                           


RCEL_HM = positif(CELLIERHM) * arr (ACELHM * (TX40/100)) 
             * (1 - V_CNR);                           

RCEL_HL = positif( CELLIERHL ) * arr (ACELHL * (TX25/100))
             * (1 - V_CNR);                           
RCELREP_HS = positif(CELREPHS) * arr (CELREPHS * (TX40/100)) * (1 - V_CNR);

RCELREP_HR = positif( CELREPHR ) * arr (CELREPHR * (TX25/100)) * (1 - V_CNR);

RCELREP_HU = positif( CELREPHU ) * arr (CELREPHU * (TX40/100)) * (1 - V_CNR);

RCELREP_HT = positif( CELREPHT ) * arr (CELREPHT * (TX25/100)) * (1 - V_CNR);

RCELREP_HZ = positif( CELREPHZ ) * arr (CELREPHZ * (TX40/100)) * (1 - V_CNR);

RCELREP_HX = positif( CELREPHX ) * arr (CELREPHX * (TX25/100)) * (1 - V_CNR);

RCELREP_HW = positif( CELREPHW ) * arr (CELREPHW * (TX40/100)) * (1 - V_CNR);

RCELREP_HV = positif( CELREPHV ) * arr (CELREPHV * (TX25/100)) * (1 - V_CNR);

regle 2004078:
application : pro ,   oceans , iliad , batch  ;


RCELRREDLA = (max( min( CELRREDLA , IDOM11-DEC11
           -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
	   -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	   -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	   -RCOMP-RCREAT-RRETU-RDONS-RNOUV) , 0 ))
	    * (1 - V_CNR);

RCELRREDLB = (max( min( CELRREDLB , IDOM11-DEC11
           -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
	   -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	   -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	   -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA ) , 0 ))
	    * (1 - V_CNR);

RCELRREDLC = (max( min( CELRREDLC , IDOM11-DEC11
           -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
	   -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	   -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	   -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB ) , 0 ))
	    * (1 - V_CNR);

RCELREPHS = (max( min( RCELREP_HS , IDOM11-DEC11
	    -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC ) , 0))
	    * (1 - V_CNR);

RCELREPHR = (max( min( RCELREP_HR , IDOM11-DEC11
	    -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS) , 0))
	    * (1 - V_CNR);

RCELREPHU = (max( min( RCELREP_HU, IDOM11-DEC11
            -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	    -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	    -RCELREPHR) , 0))
            * (1 - V_CNR);

RCELREPHT = (max( min( RCELREP_HT, IDOM11-DEC11
	    -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	    -RCELREPHR-RCELREPHU) , 0))
	    * (1 - V_CNR);

RCELREPHZ = (max( min( RCELREP_HZ, IDOM11-DEC11
	    -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	    -RCELREPHR-RCELREPHU-RCELREPHT) , 0))
	    * (1 - V_CNR);

RCELREPHX = (max( min( RCELREP_HX, IDOM11-DEC11
	    -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	    -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ) , 0))
	    * (1 - V_CNR);

RCELREPHW = (max( min( RCELREP_HW, IDOM11-DEC11
	    -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	    -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX) , 0))
	    * (1 - V_CNR);

RCELREPHV = (max( min( RCELREP_HV, IDOM11-DEC11
	    -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	    -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW) , 0))
	    * (1 - V_CNR);

RCELHM = (max( min( RCEL_HM, IDOM11-DEC11
	  -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	  -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	  -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV) , 0 ))
	   * (1 - V_CNR);

RCELHL = (max( min( RCEL_HL , IDOM11-DEC11
	  -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAD-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	  -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	  -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV
	  -RCELHM) , 0 ))
	   * (1 - V_CNR);

RCELHNO = (max( min( RCEL_HNO, IDOM11-DEC11
	  -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	  -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	  -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV
	  -RCELHM-RCELHL) , 0 ))
	   * (1 - V_CNR);

RCELHJK = (max( min( RCEL_HJK , IDOM11-DEC11
	  -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	  -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	  -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV
	  -RCELHM-RCELHL-RCELHNO) , 0 ))
	   * (1 - V_CNR);

RCELNQ = (max( min(RCEL_NQ, IDOM11-DEC11
	 -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
	 -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	 -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	 -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	 -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV
	 -RCELHM-RCELHL-RCELHNO-RCELHJK ) , 0 ))
	 * (1 - V_CNR);

RCELCOM = (max( min(RCEL_COM, IDOM11-DEC11
          -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
	  -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	  -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	  -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	  -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV
	  -RCELHM-RCELHL-RCELHNO-RCELHJK-RCELNQ ) , 0 ))
	  * (1 - V_CNR);

RCELNBGL = (max( min(RCEL_NBGL, IDOM11-DEC11
           -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
	   -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	   -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	   -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	   -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV
	   -RCELHM-RCELHL-RCELHNO-RCELHJK-RCELNQ-RCELCOM ) , 0 ))
	   * (1 - V_CNR);

RCEL = (max( min(RCEL_2011, IDOM11-DEC11
            -RCOTFOR-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RFIPDOM-RAIDE-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	    -RSURV-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	    -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELRREDLA-RCELRREDLB-RCELRREDLC-RCELREPHS
	    -RCELREPHR-RCELREPHU-RCELREPHT-RCELREPHZ-RCELREPHX-RCELREPHW-RCELREPHV
	    -RCELHM-RCELHL-RCELHNO-RCELHJK-RCELNQ-RCELCOM-RCELNBGL ) , 0 ))
	     * (1 - V_CNR);

RCELTOT = RCELRREDLA+RCELRREDLB+RCELRREDLC+RCELREPHS+RCELREPHR+RCELREPHU+RCELREPHT+RCELREPHZ
	+ RCELREPHX+RCELREPHW+RCELREPHV+RCELHM+RCELHL+RCELHNO+RCELHJK+RCELNQ+RCELCOM+RCELNBGL
	+ RCEL ;  



RIVCEL1 =  RCEL_2011 * positif(ACEL); 

RIVCEL2 = RIVCEL1;

RIVCEL3 = RIVCEL1;

RIVCEL4 = RIVCEL1;

RIVCEL5 = RIVCEL1;

RIVCEL6 = RIVCEL1;

RIVCEL7 = RIVCEL1;

RIVCEL8 = (arr((min (CELSOMN,LIMCELLIER) * positif(CELLIERNM+CELLIERNN) * (TX40/100))
          +(min (CELSOMN,LIMCELLIER) * positif(CELLIERNK+CELLIERNO) * (TX36/100))
	  +(min (CELSOMN,LIMCELLIER) * positif(CELLIERNC+CELLIERND+CELLIERNH) * (TX25/100))
	  +(min (CELSOMN,LIMCELLIER) * positif(CELLIERNA+CELLIERNE) * (TX22/100))
	  +(min (CELSOMN,LIMCELLIER) * positif(CELLIERNI) * (TX15/100))
	  +(min (CELSOMN,LIMCELLIER) * positif(CELLIERNF+CELLIERNJ) * (TX13/100)))
	  -( 8 * RIVCEL1))
	  * (1 - V_CNR);


RIVCELNBGL1 =  RCEL_NBGL * positif(ACELNBGL); 

RIVCELNBGL2 = RIVCELNBGL1;

RIVCELNBGL3 = RIVCELNBGL1;

RIVCELNBGL4 = RIVCELNBGL1;

RIVCELNBGL5 = RIVCELNBGL1;

RIVCELNBGL6 = RIVCELNBGL1;

RIVCELNBGL7 = RIVCELNBGL1;

RIVCELNBGL8 = (arr((min (CELLIERNB+CELLIERNG+CELLIERNL,LIMCELLIER) * positif(CELLIERNB) * (TX25/100))
          +(min (CELLIERNB+CELLIERNG+CELLIERNL,LIMCELLIER) * positif(CELLIERNG) * (TX15/100))
	  +(min (CELLIERNB+CELLIERNG+CELLIERNL,LIMCELLIER) * positif(CELLIERNL) * (TX40/100)))
	  -( 8 * RIVCELNBGL1))
	  * (1 - V_CNR);


RIVCELCOM1 =  RCEL_COM * positif(ACELCOM); 

RIVCELCOM2 = RIVCELCOM1;

RIVCELCOM3 = RIVCELCOM1;

RIVCELCOM4 = (arr((min (CELLIERNP+CELLIERNR+CELLIERNS+CELLIERNT, LIMCELLIER) * positif(CELLIERNP+CELLIERNT) * (TX36/100))
          +(min (CELLIERNP+CELLIERNR+CELLIERNS+CELLIERNT,LIMCELLIER) * positif(CELLIERNR+CELLIERNS) * (TX40/100)))
	  -( 4 * RIVCELCOM1))
	  * (1 - V_CNR);


RIVCELNQ1 =  RCEL_NQ * positif(ACELNQ); 

RIVCELNQ2 = RIVCELNQ1;

RIVCELNQ3 = RIVCELNQ1;

RIVCELNQ4 = (arr((min (CELLIERNQ, LIMCELLIER) * positif(CELLIERNQ) * (TX40/100)))
	  -( 4 * RIVCELNQ1))
	  * (1 - V_CNR);


RIVCELHJK1 = RCEL_HJK * positif(ACELHJK) ; 

RIVCELHJK2 = RIVCELHJK1;

RIVCELHJK3 = RIVCELHJK1;

RIVCELHJK4 = RIVCELHJK1;

RIVCELHJK5 = RIVCELHJK1;

RIVCELHJK6 = RIVCELHJK1;

RIVCELHJK7 = RIVCELHJK1;

RIVCELHJK8 = (arr((min ((CELLIERHK + CELLIERHJ + 0 ), LIMCELLIER ) * positif(CELLIERHJ) * (TX25/100))
	     + (min ((CELLIERHK + CELLIERHJ + 0 ), LIMCELLIER ) * positif(CELLIERHK) * (TX40/100)))  
	     - ( 8 * RIVCELHJK1))
	     * (1 - V_CNR);

RIVCELHNO1 = RCEL_HNO * positif(ACELHNO) ; 

RIVCELHNO2 = RIVCELHNO1;

RIVCELHNO3 = RIVCELHNO1;

RIVCELHNO4 = RIVCELHNO1;

RIVCELHNO5 = RIVCELHNO1;

RIVCELHNO6 = RIVCELHNO1;

RIVCELHNO7 = RIVCELHNO1;

RIVCELHNO8 = (arr((min ((CELLIERHN + CELLIERHO + 0 ), LIMCELLIER ) * positif(CELLIERHN) * (TX25/100))
	     + (min ((CELLIERHN + CELLIERHO + 0 ), LIMCELLIER ) * positif(CELLIERHO) * (TX40/100)))  
	     - ( 8 * RIVCELHNO1))
	     * (1 - V_CNR);

RIVCELHLM1 = RCEL_HL * positif(ACELHL) + RCEL_HM * positif(ACELHM); 

RIVCELHLM2 = RIVCELHLM1;

RIVCELHLM3 = RIVCELHLM1;

RIVCELHLM4 = RIVCELHLM1;

RIVCELHLM5 = RIVCELHLM1;

RIVCELHLM6 = RIVCELHLM1;

RIVCELHLM7 = RIVCELHLM1;

RIVCELHLM8 = (arr((min ((CELLIERHL + CELLIERHM + 0 ), LIMCELLIER ) * positif(CELLIERHL) * (TX25/100))
	     + (min ((CELLIERHL + CELLIERHM + 0 ), LIMCELLIER ) * positif(CELLIERHM) * (TX40/100)))  
	     - ( 8 * RIVCELHLM1))
	     * (1 - V_CNR);


RRCEL = (max(0, RCEL_2011 - RCEL)) * positif(CELSOMN) * (1 - V_CNR)
        + (max(0, RCEL_COM - RCELCOM)) * positif(somme(i=P,R,S,T:CELLIERNi)) * (1 - V_CNR);


RRCELBGLQ = (max(0, RCEL_NBGL+RCEL_NQ - RCELNBGL-RCELNQ)) 
	    * positif(somme(i=B,G,L,Q:CELLIERNi)) * (1 - V_CNR);

RRCELLA = (max(0, ACELRREDLA - RCELRREDLA)) * positif(CELRREDLA) * (1 - V_CNR); 


RRCELLB = (max(0, ACELRREDLB - RCELRREDLB)) * positif(CELRREDLB) * (1 - V_CNR); 


RRCELHH = (max(0, 
                   RCEL_HL+RCEL_HM+RCEL_HNO + somme(i=R,S,T,U,X,Z:RCELREP_Hi)
                 -(RCELHL +RCELHM +RCELHNO  + somme(i=R,S,T,U,X,Z:RCELREPHi))))
               * positif(somme(i=R,S,T,U,X,Z:CELREPHi)+somme(i=L,M,N,O:CELLIERHi))
	       * (1 - V_CNR);


RRCELLC = (max(0, ACELRREDLC - RCELRREDLC)) * positif(CELRREDLC) * (1 - V_CNR);

RRCELVWJK = (max(0,RCEL_HJK+RCELREP_HV+RCELREP_HW - RCELHJK-RCELREPHV-RCELREPHW)) 
	    * positif(CELREPHV+CELREPHW+CELLIERHJ+CELLIERHK) * (1 - V_CNR);

	 
REPCEL = somme(i=1,2,3,4,5,6,7 : RIVCELi) + RIVCEL8;  
REPCELNBGL = somme(i=1,2,3,4,5,6,7 : RIVCELNBGLi) + RIVCELNBGL8;  
REPCELCOM = somme(i=1,2,3 : RIVCELCOMi) + RIVCELCOM4;  
REPCELNQ = somme(i=1,2,3 : RIVCELNQi) + RIVCELNQ4;  
REPCELHJK = somme(i=1,2,3,4,5,6,7 : RIVCELHJKi) + RIVCELHJK8;  
REPCELHNO = somme(i=1,2,3,4,5,6,7 : RIVCELHNOi) + RIVCELHNO8;  
REPCELHLM = somme(i=1,2,3,4,5,6,7 : RIVCELHLMi) + RIVCELHLM8;  

regle 4079:
application : pro ,   oceans , iliad , batch  ;

BILNEUF= min (INVLOCNEUF , arr( LIMLOC * (1+BOOL_0AM) /6) ) ;
BILLOCT1AV= min (INVLOCT1AV , LIMLOC * (1+BOOL_0AM)  ) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));
BILLOCT1= min (INVLOCT1 , max(0,LIMLOC * (1+BOOL_0AM)  - BILLOCT1AV) ) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));
BILLOCT2AV= min (INVLOCT2AV , max(( LIMLOC * (1+BOOL_0AM) - BILLOCT1AV - BILLOCT1 ),0)) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO))) ;
BILLOCT2= min (INVLOCT2 , max(( LIMLOC * (1+BOOL_0AM) - BILLOCT1AV - BILLOCT1 - BILLOCT2AV ),0)) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO))) ;
BILRES= min (INVLOCRES , arr( LIMLOC * (1+BOOL_0AM) /6) ) ;

regle 40791 :
application : pro ,   oceans , iliad , batch  ;
RILNEUF = arr(BILNEUF * TX_REDIL25 / 100);
RILLOCT1 = (BILLOCT1 * TX_REDIL36 / 100);
RILLOCT2 = (BILLOCT2 * TX_REDIL18 / 100);
RILLOCT1AV = (BILLOCT1AV * TX_REDIL40 / 100);
RILLOCT2AV = (BILLOCT2AV * TX_REDIL20 / 100);
RILTRA = arr(RILLOCT1 + RILLOCT2 + RILLOCT1AV + RILLOCT2AV);
RILRES = arr(BILRES * TX_REDIL20 / 100);
RITOUR = RILNEUF 
        + RILTRA
	+ RILRES
        + arr((REPINVLOCINV + RINVLOCINV + REPINVTOU) * TX_REDIL25 / 100)
        + arr((REPINVLOCREA + RINVLOCREA + INVLOGREHA)* TX_REDIL20 / 100) ;
RIHOTR = arr((INVLOCHOTR1 + INVLOCHOTR + INVLOGHOT) * TX_REDIL25 / 100) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));


RIVL1 = (min( arr( max( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)))
        + min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM))))
     * positif(INDLOCNEUF + INDLOCRES) ;

RIVL1RES = (min ( max ( 0 , INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6)),
                        arr(LIMLOC * (1+BOOL_0AM) / 6 )) 
          + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6)),
       	                arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL2 = (max(min( arr( max( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL2RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 ))
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL3 = (max(min(arr ( max ( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL3RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 ))
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL4 = (max(min(arr ( max ( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL4RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES - RIVL3RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 ))
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES - RIVL3RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL5 = (max(min(arr ( max ( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3 - RIVL4), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3 - RIVL4), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL5RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES  - RIVL3RES - RIVL4RES),
		       LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 ) - RIVL1RES - RIVL2RES - RIVL3RES - RIVL4RES)
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES  - RIVL3RES - RIVL4RES),
		       LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 ) - RIVL1RES - RIVL2RES - RIVL3RES - RIVL4RES))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL6 = (max(min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1 - RIVL2 - RIVL3 - RIVL4 - RIVL5 ),
		     LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 )-RIVL1-RIVL2-RIVL3-RIVL4 - RIVL5 ), 0)
        + max( min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1 - RIVL2 - RIVL3 - RIVL4 - RIVL5),
		       LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 ) - RIVL1 - RIVL2 - RIVL3 - RIVL4 - RIVL5), 0))
     * positif(INDLOCNEUF + INDLOCRES);

BREPNEUF = min (INVLOCNEUF , arr( LIMLOC * (1+BOOL_0AM)) ) * positif(INDLOCRES + INDLOCNEUF);
BRNEUF = max(0,BREPNEUF - BILNEUF)* positif(INDLOCRES + INDLOCNEUF);
REPNEUF = arr(BRNEUF /6) * positif(INDLOCNEUF + INDLOCRES);
BREPRES = min (INVLOCRES , arr( LIMLOC * (1+BOOL_0AM) ) ) * positif(INDLOCRES + INDLOCNEUF);
BRRES = max(0,BREPRES - BILRES)* positif(INDLOCRES + INDLOCNEUF);
REPRES = arr(BRRES /6) * positif(INDLOCNEUF + INDLOCRES);


DTOURNEUF = INVLOCNEUF ;
ATOURNEUF = BILNEUF  ;

DTOURTRA = INVLOCT1 + INVLOCT2 + INVLOCT1AV + INVLOCT2AV  ;
ATOURTRA = (BILLOCT1 + BILLOCT2 + BILLOCT1AV + BILLOCT2AV) ;

DTOURES = INVLOCRES;
ATOURES = BILRES ;

DTOURREP = REPINVLOCINV + RINVLOCINV + REPINVTOU ;
ATOURREP = DTOURREP ;

DTOUHOTR = INVLOCHOTR1 + INVLOCHOTR + INVLOGHOT ;
ATOUHOTR = DTOUHOTR * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));

DTOUREPA = REPINVLOCREA + RINVLOCREA + INVLOGREHA ;
ATOUREPA = DTOUREPA ;

regle 10040791 :
application : pro ,   oceans , iliad , batch  ;

RTOURNEUF = max(min( RILNEUF , RRI1-RLOGDOM) , 0) ;

RTOURTRA = max(min( RILTRA , RRI1-RLOGDOM-RTOURNEUF) , 0) ;

RTOURES = max(min( RILRES , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA) , 0) ;

RTOURREP = max(min( arr(ATOURREP * TX_REDIL25 / 100) , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES) , 0) ;

RTOUHOTR = max(min( RIHOTR , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP) , 0)
	    * (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) ;

RTOUREPA = max(min( arr(ATOUREPA * TX_REDIL20 / 100) , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR) , 0) ;

RTOUR = RTOURNEUF + RTOURREP ;

regle 407011 :
application : pro ,   oceans , iliad , batch  ;
BADCRE = min (CREAIDE, min((LIM_AIDOMI * (1 - positif(PREMAIDE)) + LIM_PREMAIDE * positif(PREMAIDE) 
		           + MAJSALDOM * ( positif_ou_nul(V_ANREV-V_0DA-65)
				         + positif_ou_nul(V_ANREV-V_0DB-65)
						     * BOOL_0AM
				         + V_0CF + V_0DJ + V_0DN 
				         + (V_0CH + V_0DP)/2
				         ) 
		           ),LIM_AIDOMI3 * (1 - positif(PREMAIDE)) + LIM_PREMAIDE2 * positif(PREMAIDE) ) * (1-positif(INAIDE + 0))
                    +  LIM_AIDOMI2 * positif(INAIDE + 0));
BADPLAF = (min((LIM_AIDOMI * (1 - positif(PREMAIDE)) + LIM_PREMAIDE * positif(PREMAIDE) 
		           + MAJSALDOM * ( positif_ou_nul(V_ANREV-V_0DA-65)
				         + positif_ou_nul(V_ANREV-V_0DB-65)
						     * BOOL_0AM
				         + V_0CF + V_0DJ + V_0DN 
				         + (V_0CH + V_0DP)/2
				         ) 
		          ),LIM_AIDOMI3 * (1 - positif(PREMAIDE)) + LIM_PREMAIDE2 * positif(PREMAIDE) ) * (1-positif(INAIDE + 0))
                    +  LIM_AIDOMI2 * positif(INAIDE + 0)) * positif(RVAIDE) ;
BADPLAF2 = (min((LIM_AIDOMI * (1 - positif(PREMAIDE)) + LIM_PREMAIDE * positif(PREMAIDE) 
		           + MAJSALDOM * ( positif_ou_nul(V_ANREV-V_0DA-65)
				         + positif_ou_nul(V_ANREV-V_0DB-65)
						     * BOOL_0AM
				         + ASCAPA  
				         + V_0CF + V_0DJ + V_0DN 
				         + (V_0CH + V_0DP)/2
				         ) 
		          ),LIM_AIDOMI3 * (1 - positif(PREMAIDE)) + LIM_PREMAIDE2 * positif(PREMAIDE) ) * (1-positif(INAIDE + 0))
                    +  LIM_AIDOMI2 * positif(INAIDE + 0)) * positif(RVAIDAS) ;

BAD1 = min(RVAIDE , max(0 , BADPLAF - BADCRE)) ;

BAD2 = min (RVAIDAS , max(0 , BADPLAF2 - BADCRE - BAD1)) ;

BAD = BAD1 + BAD2 ;

RAD = arr(BAD * TX_AIDOMI /100) * (1 - V_CNR) ;

DAIDE = RVAIDE + RVAIDAS ;

AAIDE = BAD * (1-V_CNR) ;

RAIDE = max( min( RAD , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM) , 0 );

regle 4071 :
application : pro ,   oceans , iliad , batch  ;

BPATNAT = (min(PATNAT,LIM_PATNAT)) * (1 - V_CNR);
RAPATNAT = arr (BPATNAT * TX_PATNAT/100) ;
DPATNAT = PATNAT;
APATNAT = BPATNAT;


DPATNAT1 = PATNAT1;
APATNAT1 = PATNAT1 * (1 - V_CNR);

regle 20004071 :
application : pro ,   oceans , iliad , batch  ;


RPATNAT1 = max( min( APATNAT1, RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
			       -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELTOT-RLOCNPRO) , 0 );

RPATNAT = max( min( RAPATNAT , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
			       -RCOMP-RCREAT-RRETU-RDONS-RNOUV-RCELTOT-RLOCNPRO-RPATNAT1 ) , 0 );



REPNATR1 = max(APATNAT1 - RPATNAT1,0)*(1-V_CNR); 

REPNATR = max(RAPATNAT - RPATNAT,0)*(1-V_CNR); 

REPPROTPAT = REPNATR + REPNATR1  ; 

RPATNATOT = RPATNAT + RPATNAT1  ; 

regle 40704 :
application : pro ,   oceans , iliad , batch  ;

RRI1 = IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC-RCINE-RRESTIMO
	     -RPECHE-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RTITPRISE-RINNO-RSOUFIP-RRIRENOV-RFOR ;

regle 40705 :
application : pro ,   oceans , iliad , batch  ;

NRTOURNEUF = max( min( RILNEUF , RRI1-NRLOGDOM) , 0) ;

NRTOURTRA = max(min( RILTRA, RRI1-NRLOGDOM-NRTOURNEUF) , 0) ;

NRTOURES = max(min( RILRES , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA) , 0) ;

NRTOURREP = max(min( arr(ATOURREP * TX_REDIL25 / 100) , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES) , 0) ;

NRTOUHOTR = max(min( RIHOTR , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES-NRTOURREP) , 0)
	        * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));

NRTOUREPA = max(min( arr(ATOUREPA * TX_REDIL20 / 100) , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES
							 -NRTOURREP-NRTOUHOTR) , 0) ;

NRCREAT = max(min( RCREATEUR + RCREATEURHANDI , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES-NRTOURREP
						 -NRTOUHOTR-NRTOUREPA) , 0) ;

NRCOMP = max(min( RFC , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES-NRTOURREP-NRTOUHOTR-NRTOUREPA
			   -NRCREAT) , 0) ;

NRRETU = max(min( RETUD , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES-NRTOURREP-NRTOUHOTR-NRTOUREPA
			   -NRCOMP-NRCREAT) , 0) ;

NRDONS = max(min( RON , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES-NRTOURREP-NRTOUHOTR-NRTOUREPA
                        -NRCOMP-NRCREAT-NRRETU) , 0) ;

NRNOUV = max(min( RSN , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURTRA-NRTOURES-NRTOURREP-NRTOUHOTR-NRTOUREPA
			-NRCOMP-NRCREAT-NRRETU-NRDONS) , 0 );

NRRI2 = NRTOURNEUF + NRTOURTRA + NRTOURES + NRTOURREP + NRTOUHOTR + NRTOUREPA + NRCOMP + NRCREAT + NRRETU + NRDONS + NRNOUV ;

NRCELRREDLA = (max( min(CELRREDLA , RRI1-NRLOGDOM-NRRI2) , 0)) ;

NRCELRREDLB = (max( min(CELRREDLB , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA) , 0)) ;

NRCELRREDLC = (max( min(CELRREDLC , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB) , 0)) ;

NRCELREPHS = (max( min(RCELREP_HS , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC) , 0)) ;

NRCELREPHR = (max( min(RCELREP_HR , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS) , 0)) ;

NRCELREPHU = (max( min(RCELREP_HU , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR) , 0)) ;

NRCELREPHT = (max( min(RCELREP_HT , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU) , 0)) ;

NRCELREPHZ = (max( min(RCELREP_HZ , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
				    -NRCELREPHT) , 0)) ;

NRCELREPHX = (max( min(RCELREP_HX , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
				    -NRCELREPHT-NRCELREPHZ) , 0)) ;

NRCELREPHW = (max( min(RCELREP_HW , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
				    -NRCELREPHT-NRCELREPHZ-NRCELREPHX) , 0)) ;

NRCELREPHV = (max( min(RCELREP_HV , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
				    -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW) , 0)) ;

NRCELHM = (max( min(RCEL_HM , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
			      -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV) , 0)) ;

NRCELHL = (max( min(RCEL_HL , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
			      -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV-NRCELHM) , 0)) ;

NRCELHNO = (max( min(RCEL_HNO , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
			        -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV-NRCELHM-NRCELHL) , 0)) ;

NRCELHJK = (max( min(RCEL_HJK , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
			        -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV-NRCELHM-NRCELHL-NRCELHNO) , 0)) ;

NRCELNQ = (max( min(RCEL_NQ , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
			      -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV-NRCELHM-NRCELHL-NRCELHNO-NRCELHJK) , 0)) ;

NRCELCOM = (max( min(RCEL_COM , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
			        -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV-NRCELHM-NRCELHL-NRCELHNO-NRCELHJK-NRCELNQ) , 0)) ;

NRCELNBGL = (max( min(RCEL_NBGL , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
				  -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV-NRCELHM-NRCELHL-NRCELHNO-NRCELHJK-NRCELNQ-NRCELCOM) , 0)) ;

NRCEL = (max( min(RCEL_2011 , RRI1-NRLOGDOM-NRRI2-NRCELRREDLA-NRCELRREDLB-NRCELRREDLC-NRCELREPHS-NRCELREPHR-NRCELREPHU
			      -NRCELREPHT-NRCELREPHZ-NRCELREPHX-NRCELREPHW-NRCELREPHV-NRCELHM-NRCELHL-NRCELHNO-NRCELHJK-NRCELNQ-NRCELCOM
			      -NRCELNBGL) , 0)) ;

NRCELTOT = NRCELRREDLA + NRCELRREDLB + NRCELRREDLC + NRCELREPHS + NRCELREPHR + NRCELREPHU + NRCELREPHT + NRCELREPHZ + NRCELREPHX + NRCELREPHW 
	   + NRCELREPHV + NRCELHM + NRCELHL + NRCELHNO + NRCELHJK + NRCELNQ + NRCELCOM + NRCELNBGL + NRCEL ;

NRREDMEUB = max(min( AREDMEUB , RRI1-NRLOGDOM-NRRI2-NRCELTOT) , 0) ;

NRREDREP = max(min( AREDREP , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB) , 0) ;

NRINVRED = max(min( AINVRED , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP) , 0) ;

NRMEUBLE = max(min( MEUBLERET , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP-NRINVRED) , 0) ;

NRPROREP = max(min( RETPROREP , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP-NRINVRED-NRMEUBLE) , 0) ;

NRREPNPRO = max(min( RETREPNPRO , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP-NRINVRED-NRMEUBLE-NRPROREP) , 0) ;

NRREPMEU = max(min( RETREPMEU , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP-NRINVRED-NRMEUBLE-NRPROREP-NRREPNPRO) , 0) ;

NRRESIMEUB = max(min( RETRESIMEUB , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP-NRINVRED-NRMEUBLE-NRPROREP-NRREPNPRO-NRREPMEU) , 0) ;

NRRESIVIEU = max(min( RETRESIVIEU , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP-NRINVRED-NRMEUBLE-NRPROREP-NRREPNPRO-NRREPMEU
				    -NRRESIMEUB) , 0) ;

NRRESINEUV = max(min( RETRESINEUV , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRREDMEUB-NRREDREP-NRINVRED-NRMEUBLE-NRPROREP-NRREPNPRO-NRREPMEU
				    -NRRESIMEUB-NRRESIMEUB) , 0) ;

NRLOCNPRO = NRREDMEUB + NRREDREP + NRINVRED + NRMEUBLE + NRPROREP + NRREPNPRO + NRREPMEU + NRRESIMEUB + NRRESIVIEU + NRRESINEUV ;

NRPATNAT1 = max(min( APATNAT1 , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO) , 0 );

NRPATNAT = max(min( RAPATNAT , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO-NRPATNAT1) , 0 );

regle 40706 :
application : pro ,   oceans , iliad , batch  ;

NPLAFDOMPRO1 = max(0, RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELTOT-NRLOCNPRO-NRPATNAT1-NRPATNAT);

NRIDOMPROE5 =  min(REPINVDOMPRO1,NPLAFDOMPRO1) * (1 - V_CNR);

NPLAFDOMPRO2 = positif(NPLAFDOMPRO1 - REPINVDOMPRO1) * (NPLAFDOMPRO1 - REPINVDOMPRO1) * (1 -V_CNR) ; 
 
NRIDOMPROE4 = min(REPINVDOMPRO2,NPLAFDOMPRO2) * (1 - V_CNR);
                  
NPLAFDOMPRO3 = positif(NPLAFDOMPRO2 - REPINVDOMPRO2) * (NPLAFDOMPRO2 - REPINVDOMPRO2) * (1 -V_CNR) ; 

NRIDOMPROE3 = min(REPINVDOMPRO3,NPLAFDOMPRO3) * (1 - V_CNR);

NPLAFDOMPRO4 = positif(NPLAFDOMPRO3 - REPINVDOMPRO3) * (NPLAFDOMPRO3 - REPINVDOMPRO3) * (1 -V_CNR) ; 

NRIDOMPROTOT = NRIDOMPROE3 + NRIDOMPROE4 + NRIDOMPROE5 ;

NRRI3 = NRCELTOT + NRLOCNPRO + NRPATNAT1 + NRPATNAT + NRIDOMPROTOT ;

regle 4070111 :
application : pro ,   oceans , iliad , batch  ;
BAH = (min (RVCURE,LIM_CURE) + min(RCCURE,LIM_CURE)) * (1 - V_CNR);
RAH = arr (BAH * TX_CURE /100) ;
DHEBE = RVCURE + RCCURE ;

AHEBE = BAH ;

RHEBE = max( min( RAH , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC
			-RCINE-RRESTIMO-RPECHE-RSOCREPR-RRPRESCOMP) , 0 );

regle 4070121:
application : pro ,   oceans , iliad , batch  ;
RP = somme (i=V,C: TSNNi + TSNN2i + BICIMPi + BICNPi + BNNi +  max(0,BANi) + BAEi)
           + (min (0,BANV) + min (0,BANC)) * 
    (1 - positif(1 + SEUIL_IMPDEFBA - SHBA - GLN1 - somme(i=2..4 : REVi) - REVRF
    - (REVTP - BA1)  ))
	   + max(0 , ANOCEP - (DNOCEP + DABNCNP6+DABNCNP5+DABNCNP4+DABNCNP3+DABNCNP2+DABNCNP1) ) + somme(i=1..3:GLNi) ;

regle 407013:
application : pro ,  oceans , iliad , batch  ;

DREPA = RDREP + DONETRAN;

BAA = min( RDFREP + RDFDONETR, PLAF_REDREPAS );

RAA = arr( (TX_REDREPAS) / 100 * BAA ) * (1 - V_CNR);

AREPA = BAA * (1-V_CNR) ;

RREPA = max(min( RAA , IDOM11-DEC11-RCOTFOR) , 0) ;

regle 407014:
application : pro ,  oceans , iliad , batch  ;
BSN1 = min ( RDSNO + REPSNO1 + REPSNO2 + REPSNO3 + REPSNON , LIM_SOCNOUV2 * (1+BOOL_0AM) );
BSN2 = min ( REPSNO1 + REPSNO2 + REPSNO3 + REPSNON , LIM_SOCNOUV2 * (1+BOOL_0AM) );
RSN = (arr(TX_REDSOC1/100 * BSN2) + arr(TX_REDSOC2/100 * max(0,BSN1 - BSN2))) * (1 - V_CNR) ;
DNOUV = RDSNO+REPSNO1+REPSNO2+REPSNO3+REPSNON;
ANOUV = BSN1 * (1-V_CNR)  ;
regle 200407014:
application : pro ,  oceans , iliad , batch  ;
RNOUV = max( min( RSN , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP
			-RCREAT-RRETU-RDONS) , 0) ;

REPINVPME3 = max(0 , REPSNO2 - max(0 , (LIM_SOCNOUV2 * (1+BOOL_0AM)) - min(REPSNO3 , LIM_SOCNOUV2 * (1+BOOL_0AM)))) 
	      * (1 - V_CNR) ; 

REPINVPME2 = max(0 , REPSNO1 - max(0 , (LIM_SOCNOUV2 * (1+BOOL_0AM)) - (min(REPSNO3 , LIM_SOCNOUV2 * (1+BOOL_0AM)) + REPSNO2))) 
	      * (1 - V_CNR) ;

REPINVPME1 = max(0 , REPSNON - max(0 , (LIM_SOCNOUV2 * (1+BOOL_0AM)) - (min(REPSNO3 , LIM_SOCNOUV2 * (1+BOOL_0AM)) + REPSNO2 + REPSNO1)))
	      * (1 - V_CNR) ;

REPINVPME = max(0 , max(0 , (min(REPSNO3 , LIM_SOCNOUV2 * (1+BOOL_0AM)) + REPSNO2 + REPSNO1 + REPSNON + RDSNO) 
                           - (LIM_SOCNOUV2 * (1+BOOL_0AM))) 
                    - (REPINVPME1 + REPINVPME2 + REPINVPME3)) ;

regle 407000:
application : pro ,  oceans , iliad , batch  ;

DTITPRISE = PETIPRISE ;

ATITPRISE = min (PETIPRISE, ((LIM_TITPRISE * (1 + BOOL_0AM)) - min ( RDSNO+REPSNO1+REPSNO2+REPSNO3+REPSNON , LIM_SOCNOUV2 * (1+BOOL_0AM))) )
		   * (1-V_CNR) ; 

RETPETIPRISE = arr ( TX_TITPRISE/100 * ATITPRISE ) * (1-V_CNR) ;

RTITPRISE = max( min( RETPETIPRISE , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC
				     -RCINE-RRESTIMO-RPECHE-RSOCREPR-RRPRESCOMP-RHEBE-RSURV) , 0 );

regle 407010:
application : pro ,  oceans , iliad , batch  ;


DRESINEUV = LOCRESINEUV + MEUBLENP + INVNPROF1 + INVNPROF2 ;

DRESIVIEU = RESIVIEU + RESIVIANT ;

DRESIMEUB = VIEUMEUB ;


ARESINEUV = arr(min(PLAF_RESINEUV , DRESINEUV) / 9) * (1 - V_CNR) ;

ARESIVIEU = arr(min(PLAF_RESINEUV , DRESIVIEU) / 9) * (1 - V_CNR) ;

ARESIMEUB = arr(min(PLAF_RESINEUV , DRESIMEUB) / 9) * (1 - V_CNR) ;

RETRESINEUV = arr( (TX18 * positif(LOCRESINEUV + INVNPROF2) + TX20 * positif(MEUBLENP + INVNPROF1)) * ARESINEUV / 100 ) * (1-V_CNR) ;

RETRESIVIEU = arr( TX25 * ARESIVIEU / 100 ) * (1-V_CNR) ;

RETRESIMEUB = arr( TX25 * ARESIMEUB / 100 ) * (1-V_CNR) ;

regle 30407000:
application : pro ,  oceans , iliad , batch  ;
 

RRESIMEUB = max(min( RETRESIMEUB , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				   -RNOUV-RCELTOT-RREDMEUB-RREDREP-RINVRED-RMEUBLE-RPROREP-RREPNPRO-RREPMEU) , 0) ;

regle 35407010:
application : pro ,  oceans , iliad , batch  ;


RRESIVIEU = max(min( RETRESIVIEU , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				   -RNOUV-RCELTOT-RREDMEUB-RREDREP-RINVRED-RMEUBLE-RPROREP-RREPNPRO-RREPMEU-RRESIMEUB) , 0) ;

regle 30407010:
application : pro ,  oceans , iliad , batch  ;


RRESINEUV = max(min( RETRESINEUV , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				   -RNOUV-RCELTOT-RREDMEUB-RREDREP-RINVRED-RMEUBLE-RPROREP-RREPNPRO-RREPMEU-RRESIMEUB-RRESIVIEU) , 0) ;

RLOCNPRO = RREDMEUB + RREDREP + RINVRED + RMEUBLE + RPROREP + RREPNPRO + RREPMEU + RRESIMEUB + RRESIVIEU + RRESINEUV ;

regle 36407010:
application : pro ,  oceans , iliad , batch  ;


REPRESINEUV = (RETRESINEUV - RRESINEUV) * positif(LOCRESINEUV + INVNPROF1 + INVNPROF2) ;

MEUBLEREP = (RETRESINEUV - RRESINEUV) * positif(MEUBLENP) ;

REPRESIVIEU = (RETRESIVIEU - RRESIVIEU) * positif(RESIVIEU) ;

RESIVIEUREP = (RETRESIVIEU - RRESIVIEU) * positif(RESIVIANT) ;

REPRESIMEUB = RETRESIMEUB - RRESIMEUB ;

RESINEUV1 = arr(arr(min (LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) / 9) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2))) ;
RESINEUV2 = arr(arr(min (LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) / 9) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2))) ;
RESINEUV3 = arr(arr(min (LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) / 9) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2))) ;
RESINEUV4 = arr(arr(min (LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) / 9) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2))) ;
RESINEUV5 = arr(arr(min (LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) / 9) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2))) ;
RESINEUV6 = arr(arr(min (LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) / 9) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2))) ;
RESINEUV7 = arr(arr(min (LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) / 9) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2))) ;
RESINEUV8 = arr(min(LOCRESINEUV + INVNPROF1 + INVNPROF2 , PLAF_RESINEUV) * (TX20/100*positif(INVNPROF1) + TX18/100*positif(LOCRESINEUV + INVNPROF2)))
	                 - RESINEUV1 - RESINEUV2 - RESINEUV3 - RESINEUV4 - RESINEUV5 - RESINEUV6 - RESINEUV7 - RESINEUV7 ;

REPINVLOCNP = RESINEUV1 + RESINEUV2 + RESINEUV3 + RESINEUV4 + RESINEUV5 + RESINEUV6 + RESINEUV7 + RESINEUV8 ;

RRESINEUV1 = arr(arr( min(MEUBLENP , PLAF_RESINEUV) / 9) * TX20/100) ;
RRESINEUV2 = arr(arr( min(MEUBLENP , PLAF_RESINEUV) / 9) * TX20/100) ;
RRESINEUV3 = arr(arr( min(MEUBLENP , PLAF_RESINEUV) / 9) * TX20/100) ;
RRESINEUV4 = arr(arr( min(MEUBLENP , PLAF_RESINEUV) / 9) * TX20/100) ;
RRESINEUV5 = arr(arr( min(MEUBLENP , PLAF_RESINEUV) / 9) * TX20/100) ;
RRESINEUV6 = arr(arr( min(MEUBLENP , PLAF_RESINEUV) / 9) * TX20/100) ;
RRESINEUV7 = arr(arr( min(MEUBLENP , PLAF_RESINEUV) / 9) * TX20/100) ;
RRESINEUV8 = arr(min(MEUBLENP , PLAF_RESINEUV) * TX20/100) -RRESINEUV1-RRESINEUV2-RRESINEUV3-RRESINEUV4-RRESINEUV5-RRESINEUV6-RRESINEUV7-RRESINEUV7 ;

REPINVMEUBLE = RRESINEUV1 + RRESINEUV2 + RRESINEUV3 + RRESINEUV4 + RRESINEUV5 + RRESINEUV6 + RRESINEUV7 + RRESINEUV8 ;

RESIVIEU1 = arr(arr( min(RESIVIEU , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIEU2 = arr(arr( min(RESIVIEU , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIEU3 = arr(arr( min(RESIVIEU , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIEU4 = arr(arr( min(RESIVIEU , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIEU5 = arr(arr( min(RESIVIEU , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIEU6 = arr(arr( min(RESIVIEU , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIEU7 = arr(arr( min(RESIVIEU , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIEU8 = arr(min(RESIVIEU , PLAF_RESINEUV) * TX25/100) -RESIVIEU1-RESIVIEU2-RESIVIEU3-RESIVIEU4-RESIVIEU5-RESIVIEU6-RESIVIEU7-RESIVIEU7 ;

REPINVIEU = RESIVIEU1 + RESIVIEU2 + RESIVIEU3 + RESIVIEU4 + RESIVIEU5 + RESIVIEU6 + RESIVIEU7 + RESIVIEU8 ;

RESIVIAN1 = arr(arr( min(RESIVIANT , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIAN2 = arr(arr( min(RESIVIANT , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIAN3 = arr(arr( min(RESIVIANT , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIAN4 = arr(arr( min(RESIVIANT , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIAN5 = arr(arr( min(RESIVIANT , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIAN6 = arr(arr( min(RESIVIANT , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIAN7 = arr(arr( min(RESIVIANT , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIVIAN8 = arr(min(RESIVIANT , PLAF_RESINEUV) * TX25/100) -RESIVIAN1-RESIVIAN2-RESIVIAN3-RESIVIAN4-RESIVIAN5-RESIVIAN6-RESIVIAN7-RESIVIAN7 ;

REPINVIAN = RESIVIAN1 + RESIVIAN2 + RESIVIAN3 + RESIVIAN4 + RESIVIAN5 + RESIVIAN6 + RESIVIAN7 + RESIVIAN8 ;

RESIMEUB1 = arr(arr(min(DRESIMEUB , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIMEUB2 = arr(arr(min(DRESIMEUB , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIMEUB3 = arr(arr(min(DRESIMEUB , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIMEUB4 = arr(arr(min(DRESIMEUB , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIMEUB5 = arr(arr(min(DRESIMEUB , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIMEUB6 = arr(arr(min(DRESIMEUB , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIMEUB7 = arr(arr(min(DRESIMEUB , PLAF_RESINEUV) / 9) * TX25/100) ;
RESIMEUB8 = arr(min(DRESIMEUB , PLAF_RESINEUV) * TX25/100) -RESIMEUB1-RESIMEUB2-RESIMEUB3-RESIMEUB4-RESIMEUB5-RESIMEUB6-RESIMEUB7-RESIMEUB7 ;

REPMEUB = RESIMEUB1 + RESIMEUB2 + RESIMEUB3 + RESIMEUB4 + RESIMEUB5 + RESIMEUB6 + RESIMEUB7 + RESIMEUB8 ;

MEUBLERED = REDMEUBLE - RREDMEUB ;

REPINVRED = INVREDMEU - RINVRED ; 

REPREDREP = REDREPNPRO - RREDREP ;

REPRETREP = REPRESIVIEU + MEUBLEREP + MEUBLERET - RMEUBLE ;

REPLOCN2 = REPRESIMEUB + (MEUBLERET - RMEUBLE) + (RETREPNPRO - RREPNPRO) + (RETPROREP - RPROREP) + RESIVIEUREP ;

REPLOCN1 = (RETREPMEU - RREPMEU) + MEUBLEREP + REPRESIVIEU ;

regle 467034:
application : pro ,  oceans , iliad , batch  ;


DREDMEUB = REDMEUBLE ;

AREDMEUB = DREDMEUB * (1 - V_CNR) ;


DREDREP = REDREPNPRO ;

AREDREP = DREDREP * (1 - V_CNR) ;


DINVRED = INVREDMEU ;

AINVRED = DINVRED * (1 - V_CNR) ;


DMEUBLE = REPMEUBLE ;

AMEUBLE = DMEUBLE * (1 - V_CNR) ;

MEUBLERET = arr(DMEUBLE * TX25 / 100) * (1 - V_CNR) ;


DPROREP = INVNPROREP ;

APROREP = DPROREP * (1 - V_CNR) ;

RETPROREP = arr(DPROREP * TX25 / 100) * (1 - V_CNR) ;


DREPNPRO = INVREPNPRO ;

AREPNPRO = DREPNPRO * (1 - V_CNR) ;

RETREPNPRO = arr(DREPNPRO * TX25 / 100) * (1 - V_CNR) ;


DREPMEU = INVREPMEU ;

AREPMEU = DREPMEU * (1 - V_CNR) ;

RETREPMEU = arr(DREPMEU * TX25 / 100) * (1 - V_CNR) ;

regle 497034:
application : pro ,  oceans , iliad , batch  ;


RREDMEUB = max(min( AREDMEUB , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
			       -RRETU-RDONS-RNOUV-RCELTOT) , 0) ;

REPMEUIS = AREDMEUB - RREDMEUB ;

regle 477031:
application : pro ,  oceans , iliad , batch  ;


RREDREP = max(min( AREDREP , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
			     -RRETU-RDONS-RNOUV-RCELTOT-RREDMEUB) , 0) ;

REPMEUIU = AREDREP - RREDREP ;

regle 477032:
application : pro ,  oceans , iliad , batch  ;


RINVRED = max(min( AINVRED , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
			     -RRETU-RDONS-RNOUV-RCELTOT-RREDMEUB-RREDREP) , 0) ;

REPMEUIT = AINVRED - RINVRED ;

regle 477033:
application : pro ,  oceans , iliad , batch  ;


RMEUBLE = max(min( MEUBLERET , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
			       -RRETU-RDONS-RNOUV-RCELTOT-RREDMEUB-RREDREP-RINVRED) , 0) ;

REPMEUIK = MEUBLERET - RMEUBLE ;

regle 477034:
application : pro ,  oceans , iliad , batch  ;


RPROREP = max(min( RETPROREP , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
			       -RRETU-RDONS-RNOUV-RCELTOT-RREDMEUB-RREDREP-RINVRED-RMEUBLE) , 0) ;

REPMEUIR = RETPROREP - RPROREP ;

regle 477035:
application : pro ,  oceans , iliad , batch  ;


RREPNPRO = max(min( RETREPNPRO , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
				 -RRETU-RDONS-RNOUV-RCELTOT-RREDMEUB-RREDREP-RINVRED-RMEUBLE-RPROREP) , 0) ;

REPMEUIQ = RETREPNPRO - RREPNPRO ;

regle 477036:
application : pro ,  oceans , iliad , batch  ;


RREPMEU = max(min( RETREPMEU , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
			       -RRETU-RDONS-RNOUV-RCELTOT-RREDMEUB-RREDREP-RINVRED-RMEUBLE-RPROREP-RREPNPRO) , 0) ;

REPMEUIP = RETREPMEU - RREPMEU ;

regle 477037:
application : pro ,  oceans , iliad , batch  ;

REPMEUTOT1 = REPRESIMEUB + REPMEUIK + REPMEUIQ + REPMEUIR + RESIVIEUREP ;

REPMEUTOT2 = REPMEUIP + MEUBLEREP + REPRESIVIEU ;

regle 407034:
application : pro ,  oceans , iliad , batch  ;
BSOCREP = min ( RSOCREPRISE , LIM_SOCREPR *(1+BOOL_0AM) );
RSOCREP = arr ( TX_SOCREPR/100 * BSOCREP ) * (1 - V_CNR);
DSOCREPR = RSOCREPRISE;
ASOCREPR = BSOCREP * (1-V_CNR)  ;
RSOCREPR = max( min( RSOCREP , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC-RCINE-RRESTIMO-RPECHE) , 0 );
regle 407015:
application : pro ,  oceans , iliad , batch  ;
BCOS = somme(i=V,C: max(0 , min(COSBi+0,arr(TX_BASECOTSYN/100*
                   (TSBi*IND_10i 
                            - BPCOSAi + EXPRi ))))) +
                 min(COSBP+0,arr(TX_BASECOTSYN/100*
                    (somme(i=1..4:TSBi *IND_10i + EXPRi))))  ;
regle 4070151:
application : pro ,  oceans , iliad , batch  ;
RCOS = arr (TX_REDCOTSYN/100 * BCOS) * (1 - V_CNR);
DSYND = RDSYVO + RDSYCJ + RDSYPP ;
ASYND = BCOS * (1-V_CNR)  ;
RSYND = max (min (RCOS , IDOM11-DEC11-RCOTFOR-RREPA) , 0) ;

regle 4070153:
application : pro ,  oceans , iliad , batch  ;

DRESTIMO = RIMOSAUVANT + RIMOPPAUANT + RESTIMOPPAU + RESTIMOSAUV ;

RESTIMOD = min(RIMOSAUVANT , LIM_RESTIMO) ;

RESTIMOB = min (RESTIMOSAUV , LIM_RESTIMO - RESTIMOD) ;

RESTIMOC = min(RIMOPPAUANT , LIM_RESTIMO - RESTIMOD - RESTIMOB) ;

RESTIMOA = min(RESTIMOPPAU , LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC) ;

ARESTIMO = (RESTIMOD + RESTIMOB + RESTIMOC + RESTIMOA) * (1 - V_CNR) ;

RETRESTIMO = arr((RESTIMOD * TX40/100) + (RESTIMOB * TX_RESTIMO2/100)
		 + (RESTIMOC * TX30/100) + (RESTIMOA * TX_RESTIMO1/100)) * (1 - V_CNR) ;

RRESTIMO = max (min (RETRESTIMO , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC-RCINE) , 0) ;

regle 4070155:
application : pro ,  oceans , iliad , batch  ;

DPECHE = SOFIPECHE ;

APECHE = min(DPECHE, min(arr(SOFIRNG * TXLIM_PECHE/100) , LIM_PECHE * (1 + BOOL_0AM))) * (1 - V_CNR) ;

RETPECHE = arr (TX_PECHE/100 * APECHE) ;

RPECHE = max ( min (RETPECHE , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC-RCINE-RRESTIMO) , 0) ;

regle 4070161:
application : pro ,  oceans , iliad , batch  ;
REVDON = max(0,RBL+TOTALQUO-SDD-SDC1) ;
BON = arr (min (RDFDOU+RDFDAUTRE+REPDON03+REPDON04+REPDON05+REPDON06+REPDON07,REVDON *(TX_BASEDUP)/100));
REPDON = max(RDFDOU + RDFDAUTRE + REPDON03 + REPDON04 + REPDON05 + REPDON06 + REPDON07 
	      - arr(REVDON * (TX_BASEDUP)/100),0)*(1-V_CNR);

REPDONR5 = max(REPDON03 - arr(REVDON * (TX_BASEDUP)/100),0)*(1-V_CNR);

REPDONR4 = (positif_ou_nul(REPDON03 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON04
	  + (1 - positif_ou_nul(REPDON03 - arr(REVDON * (TX_BASEDUP)/100))) 
	   * max(REPDON04 + (REPDON03 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR3 = (positif_ou_nul(REPDON03 + REPDON04 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON05 
          + (1 - positif_ou_nul(REPDON03 + REPDON04 - arr(REVDON * (TX_BASEDUP)/100)))
	  * max(REPDON05 + (REPDON03 + REPDON04 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR2 = (positif_ou_nul(REPDON03 + REPDON04 + REPDON05 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON06
	  + (1 - positif_ou_nul(REPDON03 + REPDON04 + REPDON05 - arr(REVDON * (TX_BASEDUP)/100)))
	  * max(REPDON06 + (REPDON03 + REPDON04 + REPDON05 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR1 = (positif_ou_nul(REPDON03 + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON07
	  + (1 - positif_ou_nul(REPDON03 + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * (TX_BASEDUP)/100)))
	  * max(REPDON07 + (REPDON03 + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR = max(REPDON - REPDONR1 - REPDONR2 - REPDONR3 - REPDONR4 - REPDONR5,0)*(1-V_CNR);

regle 407016:
application : pro ,  oceans , iliad , batch  ;
RON = arr( BON *(TX_REDDON)/100 ) *(1 - V_CNR);

DDONS = RDDOUP + DONAUTRE + REPDON03 + REPDON04 + REPDON05 + REPDON06 + REPDON07 ;
ADONS = BON * (1-V_CNR) ;
regle 33407016:
application : pro ,  oceans , iliad , batch  ;

RDONS = max( min( RON , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP
			-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU) , 0 );

regle 4082 :
application : pro, oceans, iliad, batch ;



DLOGDOM = INVLOG2008 + INVLGDEB2009 + INVLGDEB + INVLGAUTRE + INVLGDEB2010 + INVLOG2009 
	  + INVOMLOGOA + INVOMLOGOB + INVOMLOGOC + INVOMLOGOH + INVOMLOGOI + INVOMLOGOJ + INVOMLOGOK ;


DDOMSOC1 = INVSOCNRET + INVOMSOCKH + INVOMSOCKI ;

DLOGSOC = INVSOC2010 + INVOMSOCQU + INVLOGSOC ;


DLOCENT = INVOMQV + INVENDEB2009 + INVRETRO1 + INVRETRO2 + INVINIT + INVDOMRET50 + INVDOMRET60 + INVDIRENT + INVOMRETPA 
	 + INVOMRETPB + INVOMRETPC + INVOMRETPE + INVOMRETPF + INVOMRETPG + INVOMRETPI + INVOMRETPJ + INVOMRETPK ;

DCOLENT = INVOMREP + NRETROC50 + NRETROC40 + INVENDI + INVOMENTMN + RETROCOMLH + RETROCOMMB
	  + INVOMENTKT + RETROCOMLI + RETROCOMMC + INVOMENTKU ;

regle 4000 :
application : pro, oceans, iliad, batch ;


TOTALPLAF = INVRETKG + INVRETKH + INVRETKI + INVRETQN + INVRETQU + INVRETQK + INVRETMA + INVRETLG 
	    + INVRETMB + INVRETLH + INVRETMC + INVRETLI + INVRETQP + INVRETQG + INVRETQO + INVRETQF  
	    + INVRETKS + INVRETKT + INVRETKU + INVRETQR + INVRETQI + INVRETQL + INVRETQM + INVRETQD 
	    + INVRETOB + INVRETOC
	    + INVRETKGR + INVRETKHR + INVRETKIR + INVRETQNR + INVRETQUR + INVRETQKR + INVRETMAR
	    + INVRETLGR + INVRETMBR + INVRETLHR + INVRETMCR + INVRETLIR + INVRETQPR + INVRETQGR 
	    + INVRETQOR + INVRETQFR 
	     ;

TOTALPLAF2 = INVRETPB + INVRETPF + INVRETPJ + INVRETPA + INVRETPE + INVRETPI + INVRETPD + INVRETPH 
	    + INVRETPL + INVRETOI + INVRETOJ + INVRETOK + INVRETPBR + INVRETPFR + INVRETPJR + INVRETPAR 
	    + INVRETPER + INVRETPIR
	     ;

RNIDOM = arr((RNG + TTPVQ) * TX15/100) ;

RNIDOM2 = arr((RNG + TTPVQ) * TX13/100) ;

INDPLAF = positif(RNIDOM - TOTALPLAF) * positif(OPTPLAF15) ;

INDPLAF2 = positif(RNIDOM2 - TOTALPLAF2) * positif(OPTPLAF15) ;


INVRETKGA = min(arr(NINVRETKG * TX35 / 100) , RNIDOM) * (1 - V_CNR) ;

INVRETKHA = min(arr(NINVRETKH * TX35 / 100) , max(0 , RNIDOM - INVRETKGA)) * (1 - V_CNR) ;

INVRETKIA = min(arr(NINVRETKI * TX35 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA)) * (1 - V_CNR) ;

INVRETQNA = min(arr(NINVRETQN * TX35 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA)) * (1 - V_CNR) ;

INVRETQUA = min(arr(NINVRETQU * TX35 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA)) * (1 - V_CNR) ;

INVRETQKA = min(arr(NINVRETQK * TX35 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA)) * (1 - V_CNR) ;

INVRETMAA = min(arr(NINVRETMA * TX40 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      )) * (1 - V_CNR) ;

INVRETLGA = min(arr(NINVRETLG * TX50 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA)) * (1 - V_CNR) ;

INVRETMBA = min(arr(NINVRETMB * TX40 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA)) * (1 - V_CNR) ;

INVRETMCA = min(arr(NINVRETMC * TX40 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA - INVRETMBA)) * (1 - V_CNR) ;

INVRETLHA = min(arr(NINVRETLH * TX50 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA - INVRETMBA - INVRETMCA)) * (1 - V_CNR) ;

INVRETLIA = min(arr(NINVRETLI * TX50 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA - INVRETMBA - INVRETLHA - INVRETMCA)) * (1 - V_CNR) ;

INVRETQPA = min(arr(NINVRETQP * TX40 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA
						      )) * (1 - V_CNR) ;

INVRETQGA = min(arr(NINVRETQG * TX40 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA
						      )) * (1 - V_CNR) ;

INVRETQOA = min(arr(NINVRETQO * TX50 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA
						      - INVRETQGA)) * (1 - V_CNR) ;

INVRETQFA = min(arr(NINVRETQF * TX50 / 100) , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA
						      - INVRETMAA - INVRETLGA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA
						      - INVRETQGA - INVRETQOA)) * (1 - V_CNR) ;

INVRETKSA = min(NINVRETKS , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA 
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA)) * (1 - V_CNR) ;

INVRETKTA = min(NINVRETKT , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA 
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    )) * (1 - V_CNR) ;

INVRETKUA = min(NINVRETKU , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA 
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA 
				    - INVRETKTA)) * (1 - V_CNR) ;

INVRETQRA = min(NINVRETQR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    - INVRETKTA - INVRETKUA)) * (1 - V_CNR) ;

INVRETQIA = min(NINVRETQI , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    - INVRETKTA - INVRETKUA - INVRETQRA)) * (1 - V_CNR) ;

INVRETQLA = min(NINVRETQL , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA)) * (1 - V_CNR) ;

INVRETQMA = min(NINVRETQM , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA)) * (1 - V_CNR) ;

INVRETQDA = min(NINVRETQD , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA)) * (1 - V_CNR) ;

INVRETOBA = min(NINVRETOB , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA)) * (1 - V_CNR) ;

INVRETOCA = min(NINVRETOC , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				    - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				    - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA)) * (1 - V_CNR) ;

INVRETKGRA = min(NINVRETKGR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      )) * (1 - V_CNR) ;

INVRETKHRA = min(NINVRETKHR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA)) * (1 - V_CNR) ;

INVRETKIRA = min(NINVRETKIR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA)) * (1 - V_CNR) ;

INVRETQNRA = min(NINVRETQNR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA)) * (1 - V_CNR) ;

INVRETQURA = min(NINVRETQUR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA)) * (1 - V_CNR) ;

INVRETQKRA = min(NINVRETQKR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA)) * (1 - V_CNR) ;

INVRETMARA = min(NINVRETMAR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA)) * (1 - V_CNR) ;

INVRETLGRA = min(NINVRETLGR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA)) * (1 - V_CNR) ;

INVRETMBRA = min(NINVRETMBR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      )) * (1 - V_CNR) ;

INVRETMCRA = min(NINVRETMCR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      - INVRETMBRA)) * (1 - V_CNR) ;

INVRETLHRA = min(NINVRETLHR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      - INVRETMBRA - INVRETMCRA)) * (1 - V_CNR) ;

INVRETLIRA = min(NINVRETLIR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      - INVRETMBRA - INVRETMCRA - INVRETLHRA)) * (1 - V_CNR) ;

INVRETQPRA = min(NINVRETQPR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA)) * (1 - V_CNR) ;

INVRETQGRA = min(NINVRETQGR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA)) * (1 - V_CNR) ;

INVRETQORA = min(NINVRETQOR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA)) * (1 - V_CNR) ;

INVRETQFRA = min(NINVRETQFR , max(0 , RNIDOM - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETMAA - INVRETLGA
				      - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETKSA
				      - INVRETKTA - INVRETKUA - INVRETQRA - INVRETQIA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA
				      - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETMARA - INVRETLGRA
				      - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA)) * (1 - V_CNR) ;

TOTALPLAF3 = INVRETKGA + INVRETKHA + INVRETKIA + INVRETQNA + INVRETQUA + INVRETQKA + INVRETMAA + INVRETLGA + INVRETMBA + INVRETLHA + INVRETMCA 
	     + INVRETLIA + INVRETQPA + INVRETQGA + INVRETQOA + INVRETQFA + INVRETKSA + INVRETKTA + INVRETKUA + INVRETQRA + INVRETQIA + INVRETQLA
	     + INVRETQMA + INVRETQDA + INVRETOBA + INVRETOCA + INVRETKGRA + INVRETKHRA + INVRETKIRA + INVRETQNRA + INVRETQURA + INVRETQKRA
	     + INVRETMARA + INVRETLGRA + INVRETMBRA + INVRETLHRA + INVRETLIRA + INVRETMCRA + INVRETQPRA + INVRETQGRA + INVRETQORA + INVRETQFRA ;


INVRETPBA = min(arr(NINVRETPB*TX375/100) , max(0,RNIDOM2 - TOTALPLAF3)) * (1 - V_CNR) ; 

INVRETPFA = min(arr(NINVRETPF*TX375/100) , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA)) * (1 - V_CNR) ;

INVRETPJA = min(arr(NINVRETPJ*TX375/100) , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA)) * (1 - V_CNR) ;

INVRETPAA = min(arr(NINVRETPA*TX4737/100) , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA)) * (1 - V_CNR) ;

INVRETPEA = min(arr(NINVRETPE*TX4737/100) , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA)) * (1 - V_CNR) ;

INVRETPIA = min(arr(NINVRETPI*TX4737/100) , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA
				  )) * (1 - V_CNR) ;

INVRETPDA = min(NINVRETPD , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				  - INVRETPIA)) * (1 - V_CNR) ;

INVRETPHA = min(NINVRETPH , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				  - INVRETPIA - INVRETPDA)) * (1 - V_CNR) ;

INVRETPLA = min(NINVRETPL , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				  - INVRETPIA - INVRETPDA - INVRETPHA)) * (1 - V_CNR) ;

INVRETOIA = min(NINVRETOI , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				  - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA)) * (1 - V_CNR) ;

INVRETOJA = min(NINVRETOJ , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				  - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA)) * (1 - V_CNR) ;

INVRETOKA = min(NINVRETOK , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				  - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA - INVRETOJA)) * (1 - V_CNR) ;

INVRETPBRA = min(NINVRETPBR , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				    - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA - INVRETOJA - INVRETOKA)) * (1 - V_CNR) ;

INVRETPFRA = min(NINVRETPFR , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				    - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETPBRA)) * (1 - V_CNR) ;

INVRETPJRA = min(NINVRETPJR , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				    - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETPBRA - INVRETPFRA
				    )) * (1 - V_CNR) ;

INVRETPARA = min(NINVRETPAR , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				    - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETPBRA - INVRETPFRA 
				    - INVRETPJRA)) * (1 - V_CNR) ;

INVRETPERA = min(NINVRETPER , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				    - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETPBRA - INVRETPFRA 
				    - INVRETPJRA - INVRETPARA)) * (1 - V_CNR) ;

INVRETPIRA = min(NINVRETPIR , max(0 , max(0,RNIDOM2 - TOTALPLAF3) - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA 
				    - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETPBRA - INVRETPFRA 
				    - INVRETPJRA - INVRETPARA - INVRETPERA)) * (1 - V_CNR) ;


ALOGDOM = (INVLOG2008 + INVLGDEB2009 + INVLGDEB + INVOMLOGOA + INVOMLOGOH
                      + (INVRETQL + INVRETQM + INVRETQD + INVRETOB + INVRETOC) * (1 - positif(INDPLAF)) 
		      + (INVRETOI + INVRETOJ + INVRETOK) * (1 - positif(INDPLAF2)) 
		      + (INVRETQLA + INVRETQMA + INVRETQDA + INVRETOBA + INVRETOCA) * positif(INDPLAF) 
		      + (INVRETOIA + INVRETOJA + INVRETOKA) * positif(INDPLAF2) 
          ) * (1 - V_CNR) ;

ALOGSOC = ((INVRETQN + INVRETQU + INVRETQK + INVRETQNR + INVRETQUR + INVRETQKR) * (1 - INDPLAF) 
	 + (INVRETQNA + INVRETQUA + INVRETQKA + INVRETQNRA + INVRETQURA + INVRETQKRA) * INDPLAF) * (1 - V_CNR) * (1 - V_INDTEO)
        + ((INVRETQN + INVRETQU + INVRETQK + INVRETQNR + INVRETQUR + INVRETQKR) * (1 - INDPLAF) 
	 + (INVRETQNA + INVRETQUA + INVRETQKA + INVRETQNRA + INVRETQURA + INVRETQKRA) * INDPLAF) * (1 - V_CNR) *(TX65/100)* (V_INDTEO) ;

ADOMSOC1 = ((INVRETKG + INVRETKH + INVRETKI + INVRETKGR + INVRETKHR + INVRETKIR) * (1 - INDPLAF) 
	  + (INVRETKGA + INVRETKHA + INVRETKIA + INVRETKGRA + INVRETKHRA + INVRETKIRA) * INDPLAF) * (1 - V_CNR) * (1 - V_INDTEO) 
         + ((INVRETKG + INVRETKH + INVRETKI + INVRETKGR + INVRETKHR + INVRETKIR) * (1 - INDPLAF) 
	  + (INVRETKGA + INVRETKHA + INVRETKIA + INVRETKGRA + INVRETKHRA + INVRETKIRA) * INDPLAF) * (1 - V_CNR) * (TX65/100)* (V_INDTEO) ;

ALOCENT = (INVENDEB2009 + INVOMQV 
	    + (INVRETQP + INVRETQPR + INVRETQG + INVRETQGR + INVRETQO + INVRETQOR + INVRETQF + INVRETQFR + INVRETQR + (INVRETQI) * (1 - V_INDTEO))
	      * (1 - positif(INDPLAF))
            + (INVRETPD + INVRETPH + INVRETPL + INVRETPB + INVRETPF + INVRETPJ + INVRETPA + INVRETPE + INVRETPI 
					      + INVRETPBR + INVRETPFR + INVRETPJR + INVRETPAR + INVRETPER + INVRETPIR) 
	      * (1 - positif(INDPLAF2))
            + (INVRETQPA + INVRETQPRA + INVRETQGA + INVRETQGRA + INVRETQOA + INVRETQORA + INVRETQFA + INVRETQFRA + INVRETQRA + (INVRETQIA) * (1 - V_INDTEO))
	      * positif(INDPLAF)
	    + (INVRETPDA + INVRETPHA + INVRETPLA + INVRETPBA + INVRETPFA + INVRETPJA + INVRETPAA + INVRETPEA + INVRETPIA 
						 + INVRETPBRA + INVRETPFRA + INVRETPJRA + INVRETPARA + INVRETPERA + INVRETPIRA) 
	      * positif(INDPLAF2)
          ) * (1 - V_CNR) ;

ACOLENT = (INVOMREP + INVOMENTMN + (INVRETLG + INVRETLGR + INVRETMA + INVRETMAR + INVRETMB + INVRETMBR + INVRETLH + INVRETLHR 
				   + INVRETMC + INVRETMCR + INVRETLI + INVRETLIR + INVRETKS + INVRETKT + INVRETKU) * (1 - INDPLAF) 
		                 + (INVRETLGA + INVRETLGRA + INVRETMAA + INVRETMARA + INVRETMBA + INVRETMBRA + INVRETLHA + INVRETLHRA 
				   + INVRETMCA + INVRETMCRA + INVRETLIA + INVRETLIRA + INVRETKSA + INVRETKTA + INVRETKUA) * INDPLAF)
	   * (1 - V_CNR) ;

regle 4083:
application : pro, oceans, iliad, batch ;

NINVRETQB = max(min(INVLOG2008 , RRI1) , 0) * (1 - V_CNR) ;

NINVRETQC = max(min(INVLGDEB2009 , RRI1-INVLOG2008) , 0) * (1 - V_CNR) ;

NINVRETQT = max(min(INVLGDEB , RRI1-INVLOG2008-INVLGDEB2009) , 0) * (1 - V_CNR) ;

NINVRETOA = max(min(INVOMLOGOA , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB) , 0) * (1 - V_CNR) ;

NINVRETOH = max(min(INVOMLOGOH , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA) , 0) * (1 - V_CNR) ;

NINVRETQL = max(min(INVLGAUTRE , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH) , 0) * (1 - V_CNR) ;

NINVRETQM = max(min(INVLGDEB2010 , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH-NINVRETQL) , 0) * (1 - V_CNR) ;

NINVRETQD = max(min(INVLOG2009 , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH-NINVRETQL-NINVRETQM) , 0) * (1 - V_CNR) ;

NINVRETOB = max(min(INVOMLOGOB , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH-NINVRETQL-NINVRETQM
				     -NINVRETQD) , 0) * (1 - V_CNR) ;

NINVRETOC = max(min(INVOMLOGOC , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH-NINVRETQL-NINVRETQM
				     -NINVRETQD-NINVRETOB) , 0) * (1 - V_CNR) ;

NINVRETOI = max(min(INVOMLOGOI , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH-NINVRETQL-NINVRETQM
				     -NINVRETQD-NINVRETOB-NINVRETOC) , 0) * (1 - V_CNR) ;

NINVRETOJ = max(min(INVOMLOGOJ , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH-NINVRETQL-NINVRETQM
				     -NINVRETQD-NINVRETOB-NINVRETOC-NINVRETOI) , 0) * (1 - V_CNR) ;

NINVRETOK = max(min(INVOMLOGOK , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-INVOMLOGOA-INVOMLOGOH-NINVRETQL-NINVRETQM
				     -NINVRETQD-NINVRETOB-NINVRETOC-NINVRETOI-NINVRETOJ) , 0) * (1 - V_CNR) ;

NRLOGDOM = (INVLOG2008 + INVLGDEB2009 + INVLGDEB + INVOMLOGOA + INVOMLOGOH + NINVRETQL + NINVRETQM + NINVRETQD
		       + NINVRETOB + NINVRETOC + NINVRETOI + NINVRETOJ + NINVRETOK) * (1 - V_CNR) ;

regle 14084:
application : pro, oceans, iliad, batch ;

NINVRETKG = max(min(INVSOCNRET , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO-NRPATNAT1-NRPATNAT) , 0) * (1 - V_CNR) ;

NINVRETKH = max(min(INVOMSOCKH , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO-NRPATNAT1-NRPATNAT-NINVRETKG) , 0) * (1 - V_CNR) ;

NINVRETKI = max(min(INVOMSOCKI , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO-NRPATNAT1-NRPATNAT-NINVRETKG-NINVRETKH) , 0) * (1 - V_CNR) ;

NINVRETQN = max(min(INVSOC2010 , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO-NRPATNAT1-NRPATNAT-NINVRETKG-NINVRETKH-NINVRETKI) , 0) * (1 - V_CNR) ;

NINVRETQU = max(min(INVOMSOCQU , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO-NRPATNAT1-NRPATNAT-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN) , 0) * (1 - V_CNR) ;

NINVRETQK = max(min(INVLOGSOC , RRI1-NRLOGDOM-NRRI2-NRCELTOT-NRLOCNPRO-NRPATNAT1-NRPATNAT-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU) , 0) * (1 - V_CNR) ;

NINVRETKGR = (NINVRETKG - arr(NINVRETKG * TX35 / 100)) * (1 - V_CNR) ;

NINVRETKHR = (NINVRETKH - arr(NINVRETKH * TX35 / 100)) * (1 - V_CNR) ;

NINVRETKIR = (NINVRETKI - arr(NINVRETKI * TX35 / 100)) * (1 - V_CNR) ;

NINVRETQNR = (NINVRETQN - arr(NINVRETQN * TX35 / 100)) * (1 - V_CNR) ;

NINVRETQUR = (NINVRETQU - arr(NINVRETQU * TX35 / 100)) * (1 - V_CNR) ;

NINVRETQKR = (NINVRETQK - arr(NINVRETQK * TX35 / 100)) * (1 - V_CNR) ;

NRDOMSOC1 = NINVRETKG + NINVRETKH + NINVRETKI ;

NRLOGSOC = NINVRETQN + NINVRETQU + NINVRETQK ;

regle 4084:
application : pro, oceans, iliad, batch ;

INVRETKG = min(arr(NINVRETKG * TX35 / 100) , PLAF_INVDOM) * (1 - V_CNR) ;

INVRETKH = min(arr(NINVRETKH * TX35 / 100) , max(0 , PLAF_INVDOM - INVRETKG)) * (1 - V_CNR) ; 

INVRETKI = min(arr(NINVRETKI * TX35 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH)) * (1 - V_CNR) ; 

INVRETQN = min(arr(NINVRETQN * TX35 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI)) * (1 - V_CNR) ; 

INVRETQU = min(arr(NINVRETQU * TX35 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN)) * (1 - V_CNR) ; 

INVRETQK = min(arr(NINVRETQK * TX35 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU)) * (1 - V_CNR) ;


INVRETKGR = max(min(arr(INVRETKG * 13 / 7) , max(0 , NINVRETKG - INVRETKG)) , max(0 , NINVRETKG - INVRETKG)) * (1 - V_CNR) ;

INVRETKHR = min(max(min(arr(INVRETKH * 13 / 7) , max(0 , NINVRETKH - INVRETKH)) , max(0 , NINVRETKH - INVRETKH)) , max(0 , PLAF_INVDOM1 - INVRETKGR)) 
	    * (1 - V_CNR) ;

INVRETKIR = min(max(min(arr(INVRETKI * 13 / 7) , max(0 , NINVRETKI - INVRETKI)) , max(0 , NINVRETKI - INVRETKI)) , max(0 , PLAF_INVDOM1 - INVRETKGR - INVRETKHR)) 
	    * (1 - V_CNR) ;

INVRETQNR = min(max(min(arr(INVRETQN * 13 / 7) , max(0 , NINVRETQN - INVRETQN)) , max(0 , NINVRETQN - INVRETQN)) , max(0 , PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR)) 
	    * (1 - V_CNR) ;

INVRETQUR = min(max(min(arr(INVRETQU * 13 / 7) , max(0 , NINVRETQU - INVRETQU)) , max(0 , NINVRETQU - INVRETQU)) , 
                max(0 , PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR)) 
	    * (1 - V_CNR) ;

INVRETQKR = min(max(min(arr(INVRETQK * 13 / 7) , max(0 , NINVRETQK - INVRETQK)) , max(0 , NINVRETQK - INVRETQK)) , 
		max(0 , PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR)) 
	    * (1 - V_CNR) ;

regle 4084111:
application : pro, oceans, iliad, batch ;

RSOC7 = arr(max(min(INVRETKG * (1 - INDPLAF) + INVRETKGA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
								     -RRETU-RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT) , 0)) * (1 - V_CNR) ;

RSOC8 = arr(max(min(INVRETKH * (1 - INDPLAF) + INVRETKHA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
								     -RRETU-RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RSOC7) , 0)) * (1 - V_CNR) ;

RSOC9 = arr(max(min(INVRETKI * (1 - INDPLAF) + INVRETKIA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
								     -RRETU-RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RSOC7-RSOC8) , 0)) * (1 - V_CNR) ;

RSOC10 = arr(max(min(INVRETKGR * (1 - INDPLAF) + INVRETKGRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
									-RRETU-RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RSOC7-RSOC8-RSOC9) , 0)) * (1 - V_CNR) ;

RSOC11 = arr(max(min(INVRETKHR * (1 - INDPLAF) + INVRETKHRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
									-RRETU-RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RSOC7-RSOC8-RSOC9-RSOC10) , 0)) 
									* (1 - V_CNR) ;

RSOC12 = arr(max(min(INVRETKIR * (1 - INDPLAF) + INVRETKIRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT
									-RRETU-RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RSOC7-RSOC8-RSOC9-RSOC10-RSOC11) , 0)) 
									* (1 - V_CNR) ;

RDOMSOC1 =  (1 - V_CNR) * ((1 - V_INDTEO) * (RSOC7 + RSOC8 + RSOC9 + RSOC10 + RSOC11 + RSOC12)
           + V_INDTEO * (arr((V_RSOC7 + V_RSOC10) * (TX65/100)) 
                        + arr((V_RSOC8 + V_RSOC11) * (TX65/100)) 
                        + arr((V_RSOC9 + V_RSOC12) * (TX65/100)))) ;


RSOC1 = arr(max(min(INVRETQN * (1 - INDPLAF) + INVRETQNA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
								     -RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RDOMSOC1) , 0)) * (1 - V_CNR) ;

RSOC2 = arr(max(min(INVRETQU * (1 - INDPLAF) + INVRETQUA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
								     -RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RDOMSOC1-RSOC1) , 0)) * (1 - V_CNR) ;

RSOC3 = arr(max(min(INVRETQK * (1 - INDPLAF) + INVRETQKA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
								     -RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RDOMSOC1-RSOC1-RSOC2) , 0)) * (1 - V_CNR) ;

RSOC4 = arr(max(min(INVRETQNR * (1 - INDPLAF) + INVRETQNRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
								       -RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RDOMSOC1-RSOC1-RSOC2-RSOC3) , 0)) * (1 - V_CNR) ;

RSOC5 = arr(max(min(INVRETQUR * (1 - INDPLAF) + INVRETQURA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
								       -RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RDOMSOC1-RSOC1-RSOC2-RSOC3-RSOC4) , 0)) * (1 - V_CNR) ;

RSOC6 = arr(max(min(INVRETQKR * (1 - INDPLAF) + INVRETQKRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
								       -RDONS-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RDOMSOC1-RSOC1-RSOC2-RSOC3-RSOC4-RSOC5) , 0)) * (1 - V_CNR) ;  

RLOGSOC = ((1 - V_INDTEO) * (RSOC1 + RSOC2 + RSOC3 + RSOC4 + RSOC5 + RSOC6) 
            + V_INDTEO * max (min (arr((V_RSOC1 + V_RSOC4) * (TX65/100)) 
				  + arr((V_RSOC3 + V_RSOC6) * (TX65/100)) 
                                  + arr((V_RSOC2 + V_RSOC5) * (TX65/100)) , RRI1-RLOGDOM-RTOURNEUF
			                                         -RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RNOUV-RDOMSOC1 ) , 0))
          * (1 - V_CNR) ;
			      
regle 4085:
application : pro, oceans, iliad, batch ;

NINVRETMM = max(min(INVOMREP , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3) , 0) 
	     * (1 - V_CNR) ;

NINVRETMN = max(min(INVOMENTMN , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP) , 0) 
	     * (1 - V_CNR) ;

NINVRETMA = max(min(NRETROC40 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN) , 0) 
	     * (1 - V_CNR) ;

NINVRETLG = max(min(NRETROC50 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA) , 0) 
	     * (1 - V_CNR) ;

NINVRETKS = max(min(INVENDI , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG) , 0) 
	     * (1 - V_CNR) ;

NINVRETMB = max(min(RETROCOMMB , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS) , 0)
	     * (1 - V_CNR) ;

NINVRETMC = max(min(RETROCOMMC , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB) , 0) * (1 - V_CNR) ;

NINVRETLH = max(min(RETROCOMLH , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC) , 0) * (1 - V_CNR) ;

NINVRETLI = max(min(RETROCOMLI , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH) , 0) * (1 - V_CNR) ;

NINVRETKT = max(min(INVOMENTKT , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI) , 0) * (1 - V_CNR) ;

NINVRETKU = max(min(INVOMENTKU , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT) , 0) * (1 - V_CNR) ;

NINVRETQE = max(min(INVENDEB2009 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				   -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU) , 0) * (1 - V_CNR) ;

NINVRETQV = max(min(INVOMQV , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				   -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009) , 0) * (1 - V_CNR) ;

NINVRETQP = max(min(INVRETRO2 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				-NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV) , 0) * (1 - V_CNR) ;

NINVRETQG = max(min(INVDOMRET60 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				  -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP) , 0) * (1 - V_CNR) ;

NINVRETQO = max(min(INVRETRO1 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				-NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG) , 0) * (1 - V_CNR) ;

NINVRETQF = max(min(INVDOMRET50 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				  -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO) , 0) * (1 - V_CNR) ;

NINVRETQR = max(min(INVIMP , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
			     -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF) , 0) * (1 - V_CNR) ;

NINVRETQI = max(min(INVDIR2009 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR) , 0) 
				 * (1 - V_CNR) ;

NINVRETPB = max(min(INVOMRETPB , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI) , 0) * (1 - V_CNR) ;

NINVRETPF = max(min(INVOMRETPF , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB) , 0) * (1 - V_CNR) ;

NINVRETPJ = max(min(INVOMRETPJ , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB-NINVRETPF) , 0) * (1 - V_CNR) ;

NINVRETPA = max(min(INVOMRETPA , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB-NINVRETPF-NINVRETPJ) , 0) * (1 - V_CNR) ;

NINVRETPE = max(min(INVOMRETPE , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB-NINVRETPF-NINVRETPJ-NINVRETPA) , 0) * (1 - V_CNR) ;

NINVRETPI = max(min(INVOMRETPI , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB-NINVRETPF-NINVRETPJ-NINVRETPA-NINVRETPE) , 0) * (1 - V_CNR) ;

NINVRETPD = max(min(INVOMRETPD , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB-NINVRETPF-NINVRETPJ-NINVRETPA-NINVRETPE-NINVRETPI) , 0) * (1 - V_CNR) ;

NINVRETPH = max(min(INVOMRETPH , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB-NINVRETPF-NINVRETPJ-NINVRETPA-NINVRETPE-NINVRETPI-NINVRETPD) , 0) * (1 - V_CNR) ;

NINVRETPL = max(min(INVOMRETPL , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETKH-NINVRETKI-NINVRETQN-NINVRETQU-NINVRETQK-NRRI3-INVOMREP-INVOMENTMN-NINVRETMA-NINVRETLG-NINVRETKS
				 -NINVRETMB-NINVRETMC-NINVRETLH-NINVRETLI-NINVRETKT-NINVRETKU-INVENDEB2009-INVOMQV-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR
				 -NINVRETQI-NINVRETPB-NINVRETPF-NINVRETPJ-NINVRETPA-NINVRETPE-NINVRETPI-NINVRETPD-NINVRETPH) , 0) * (1 - V_CNR) ;

NINVRETMAR = (NINVRETMA - arr(NINVRETMA * TX40 / 100)) * (1 - V_CNR) ;

NINVRETLGR = (NINVRETLG - arr(NINVRETLG * TX50 / 100)) * (1 - V_CNR) ;

NINVRETMBR = (NINVRETMB - arr(NINVRETMB * TX40 / 100)) * (1 - V_CNR) ;

NINVRETMCR = (NINVRETMC - arr(NINVRETMC * TX40 / 100)) * (1 - V_CNR) ;

NINVRETLHR = (NINVRETLH - arr(NINVRETLH * TX50 / 100)) * (1 - V_CNR) ;

NINVRETLIR = (NINVRETLI - arr(NINVRETLI * TX50 / 100)) * (1 - V_CNR) ;

NINVRETQPR = (NINVRETQP - arr(NINVRETQP * TX40 / 100)) * (1 - V_CNR) ;

NINVRETQGR = (NINVRETQG - arr(NINVRETQG * TX40 / 100)) * (1 - V_CNR) ;

NINVRETQOR = (NINVRETQO - arr(NINVRETQO * TX50 / 100)) * (1 - V_CNR) ;

NINVRETQFR = (NINVRETQF - arr(NINVRETQF * TX50 / 100)) * (1 - V_CNR) ;

NINVRETPBR = (NINVRETPB - arr(NINVRETPB * TX375/ 100)) * (1 - V_CNR) ;

NINVRETPFR = (NINVRETPF - arr(NINVRETPF * TX375/ 100)) * (1 - V_CNR) ;

NINVRETPJR = (NINVRETPJ - arr(NINVRETPJ * TX375/ 100)) * (1 - V_CNR) ;

NINVRETPAR = (NINVRETPA - arr(NINVRETPA * TX4737/100)) * (1 - V_CNR) ;

NINVRETPER = (NINVRETPE - arr(NINVRETPE * TX4737/100)) * (1 - V_CNR) ;

NINVRETPIR = (NINVRETPI - arr(NINVRETPI * TX4737/100)) * (1 - V_CNR) ;

regle 14083:
application : pro, oceans, iliad, batch ;

INVRETMM = NINVRETMM * (1 - V_CNR) ;

INVRETMN = NINVRETMN * (1 - V_CNR) ;

INVRETQE = NINVRETQE * (1 - V_CNR) ;

INVRETQV = NINVRETQV * (1 - V_CNR) ;

INVRETMA = min(arr(NINVRETMA * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK
						     )) * (1 - V_CNR) ;

INVRETLG = min(arr(NINVRETLG * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA)) * (1 - V_CNR) ;

INVRETMB = min(arr(NINVRETMB * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG)) * (1 - V_CNR) ;

INVRETMC = min(arr(NINVRETMC * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB)) * (1 - V_CNR) ;

INVRETLH = min(arr(NINVRETLH * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC)) * (1 - V_CNR) ;

INVRETLI = min(arr(NINVRETLI * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH)) * (1 - V_CNR) ;

INVRETQP = min(arr(NINVRETQP * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI)) * (1 - V_CNR) ;

INVRETQG = min(arr(NINVRETQG * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     )) * (1 - V_CNR) ;

INVRETQO = min(arr(NINVRETQO * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG)) * (1 - V_CNR) ;

INVRETQF = min(arr(NINVRETQF * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG - INVRETQO)) * (1 - V_CNR) ;

INVRETPB = min(arr(NINVRETPB * TX375/ 100) , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG - INVRETQO - INVRETQF)) * (1 - V_CNR) ;

INVRETPF = min(arr(NINVRETPF * TX375/ 100) , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG - INVRETQO - INVRETQF - INVRETPB)) * (1 - V_CNR) ;

INVRETPJ = min(arr(NINVRETPJ * TX375/ 100) , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF)) * (1 - V_CNR) ;

INVRETPA = min(arr(NINVRETPA * TX4737/100) , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ)) * (1 - V_CNR) ;

INVRETPE = min(arr(NINVRETPE * TX4737/100) , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
						     )) * (1 - V_CNR) ;

INVRETPI = min(arr(NINVRETPI * TX4737/100) , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
						     - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
						     - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
						     - INVRETPE)) * (1 - V_CNR) ;

INVRETKS = NINVRETKS * (1 - V_CNR) ; 

INVRETKT = NINVRETKT * (1 - V_CNR) ; 

INVRETKU = NINVRETKU * (1 - V_CNR) ; 

INVRETQR = NINVRETQR * (1 - V_CNR) ;

INVRETQI = NINVRETQI * (1 - V_CNR) ;

INVRETPD = NINVRETPD * (1 - V_CNR) ;

INVRETPH = NINVRETPH * (1 - V_CNR) ;

INVRETPL = NINVRETPL * (1 - V_CNR) ;


INVRETMAR = min(arr(INVRETMA * 3 / 2) , max(0 , NINVRETMA - INVRETMA)) * (1 - V_CNR) ;

INVRETLGR = min(INVRETLG , max(0 , NINVRETLG - INVRETLG)) * (1 - V_CNR) ;

INVRETMBR = min(arr(INVRETMB * 3 / 2) , max(0 , NINVRETMB - INVRETMB)) * (1 - V_CNR) ;

INVRETMCR = min(arr(INVRETMC * 3 / 2) , max(0 , NINVRETMC - INVRETMC)) * (1 - V_CNR) ;

INVRETLHR = min(INVRETLH , max(0 , NINVRETLH - INVRETLH)) * (1 - V_CNR) ;

INVRETLIR = min(INVRETLI , max(0 , NINVRETLI - INVRETLI)) * (1 - V_CNR) ;

INVRETQPR = min(arr(INVRETQP * 3 / 2) , max(0 , NINVRETQP - INVRETQP)) * (1 - V_CNR) ;

INVRETQGR = min(arr(INVRETQG * 3 / 2) , max(0 , NINVRETQG - INVRETQG)) * (1 - V_CNR) ;

INVRETQOR = min(INVRETQO , max(0 , NINVRETQO - INVRETQO)) * (1 - V_CNR) ;

INVRETQFR = min(INVRETQF , max(0 , NINVRETQF - INVRETQF)) * (1 - V_CNR) ;

INVRETPBR = min(arr(INVRETPB * 5 / 3) , max(0 , NINVRETPB - INVRETPB)) * (1 - V_CNR) ;

INVRETPFR = min(arr(INVRETPF * 5 / 3) , max(0 , NINVRETPF - INVRETPF)) * (1 - V_CNR) ;

INVRETPJR = min(arr(INVRETPJ * 5 / 3) , max(0 , NINVRETPJ - INVRETPJ)) * (1 - V_CNR) ;

INVRETPAR = min(arr(INVRETPA * 10/ 9) , max(0 , NINVRETPA - INVRETPA)) * (1 - V_CNR) ;

INVRETPER = min(arr(INVRETPE * 10/ 9) , max(0 , NINVRETPE - INVRETPE)) * (1 - V_CNR) ;

INVRETPIR = min(arr(INVRETPI * 10/ 9) , max(0 , NINVRETPI - INVRETPI)) * (1 - V_CNR) ;

regle 7714083:
application : pro, oceans, iliad, batch ;

RENT1 = max(min( INVENDEB2009 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC
				-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT) , 0) * (1 - V_CNR) ;

RENT2 = max(min( INVOMQV , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1
			    -RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1) , 0) * (1 - V_CNR) ;

RENT3 = max(min( INVRETQP * (1 - INDPLAF) + INVRETQPA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2) , 0) * (1 - V_CNR) ;

RENT4 = max(min( INVRETQG * (1 - INDPLAF) + INVRETQGA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2-RENT3) , 0) * (1 - V_CNR) ;

RENT5 = max(min( INVRETQO * (1 - INDPLAF) + INVRETQOA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2-RENT3-RENT4) , 0) * (1 - V_CNR) ;

RENT6 = max(min( INVRETQF * (1 - INDPLAF) + INVRETQFA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				 -RENT1-RENT2-RENT3-RENT4-RENT5) , 0) * (1 - V_CNR) ;

RENT7 = max(min( INVRETQR * (1 - INDPLAF) + INVRETQRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2-RENT3-RENT4-RENT5-RENT6) , 0) * (1 - V_CNR) ;

RENT8 = max(min( INVRETQI * (1 - INDPLAF) + INVRETQIA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7) , 0) * (1 - V_CNR) ;

RENT9 = max(min( INVRETPD * (1 - INDPLAF2) + INVRETPDA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8) , 0) * (1 - V_CNR) ;

RENT10 = max(min(INVRETPH * (1 - INDPLAF2) + INVRETPHA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9) , 0) * (1 - V_CNR) ;

RENT11 = max(min(INVRETPL * (1 - INDPLAF2) + INVRETPLA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				-RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10) , 0) * (1 - V_CNR) ;

RENT12 = max(min(INVRETPB * (1 - INDPLAF2) + INVRETPBA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				 -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11) , 0) * (1 - V_CNR) ;

RENT13 = max(min(INVRETPF * (1 - INDPLAF2) + INVRETPFA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				 -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12) , 0) * (1 - V_CNR) ;

RENT14 = max(min(INVRETPJ * (1 - INDPLAF2) + INVRETPJA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				 -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13) , 0) * (1 - V_CNR) ;

RENT15 = max(min(INVRETPA * (1 - INDPLAF2) + INVRETPAA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				 -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14) , 0) * (1 - V_CNR) ;

RENT16 = max(min(INVRETPE * (1 - INDPLAF2) + INVRETPEA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				 -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15
				 ) , 0) * (1 - V_CNR) ;

RENT17 = max(min(INVRETPI * (1 - INDPLAF2) + INVRETPIA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				 -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				 ) , 0) * (1 - V_CNR) ;

RENT18 = max(min(INVRETQPR * (1 - INDPLAF) + INVRETQPRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17) , 0) * (1 - V_CNR) ;

RENT19 = max(min(INVRETQGR * (1 - INDPLAF) + INVRETQGRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18) , 0) * (1 - V_CNR) ;

RENT20 = max(min(INVRETQOR * (1 - INDPLAF) + INVRETQORA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19) , 0) * (1 - V_CNR) ;

RENT21 = max(min(INVRETQFR * (1 - INDPLAF) + INVRETQFRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19-RENT20) , 0) * (1 - V_CNR) ;

RENT22 = max(min(INVRETPBR * (1 - INDPLAF2) + INVRETPBRA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19-RENT20-RENT21) , 0) * (1 - V_CNR) ;

RENT23 = max(min(INVRETPFR * (1 - INDPLAF2) + INVRETPFRA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19-RENT20-RENT21-RENT22) , 0) * (1 - V_CNR) ;

RENT24 = max(min(INVRETPJR * (1 - INDPLAF2) + INVRETPJRA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19-RENT20-RENT21-RENT22-RENT23) , 0) * (1 - V_CNR) ;

RENT25 = max(min(INVRETPAR * (1 - INDPLAF2) + INVRETPARA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19-RENT20-RENT21-RENT22-RENT23-RENT24) , 0) * (1 - V_CNR) ;

RENT26 = max(min(INVRETPER * (1 - INDPLAF2) + INVRETPERA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19-RENT20-RENT21-RENT22-RENT23-RENT24-RENT25) , 0) * (1 - V_CNR) ;

RENT27 = max(min(INVRETPIR * (1 - INDPLAF2) + INVRETPIRA * INDPLAF2 , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				  -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT
				  -RENT1-RENT2-RENT3-RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12-RENT13-RENT14-RENT15-RENT16
				  -RENT17-RENT18-RENT19-RENT20-RENT21-RENT22-RENT23-RENT24-RENT25-RENT26) , 0) * (1 - V_CNR) ;

RLOCENT = ((1 - V_INDTEO) * (RENT1 + RENT2 + RENT3 + RENT4 + RENT5 + RENT6 + RENT7 + RENT8 + RENT9 + RENT10 + RENT11 + RENT12 + RENT13 + RENT14
			   + RENT15 + RENT16 + RENT17 + RENT18 + RENT19 + RENT20 + RENT21 + RENT22 + RENT23 + RENT24 + RENT25 + RENT26 + RENT27) 
           + V_INDTEO * max(min (
             arr((V_RENT5+V_RENT20)*(TX50/100))
           + arr((V_RENT6+V_RENT21)*(TX50/100))  
           + arr((V_RENT4+V_RENT19)*(TX60/100))
	   + arr((V_RENT3 + V_RENT18)*(TX60/100))
           + arr((V_RENT15 + V_RENT25)*(5263/10000))
	   + arr((V_RENT12 + V_RENT22)*(625/1000))
           + arr((V_RENT16 + V_RENT26)*(5263/10000))
	   + arr((V_RENT13 + V_RENT23)*(625/1000))
           + arr((V_RENT17 + V_RENT27)*(5263/10000))
           + arr((V_RENT14 + V_RENT24)*(625/1000))
           + V_RENT1 + V_RENT2 ,
	                                   RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC
					   -RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RCOLENT) , 0))
          * (1 - V_CNR) ;


RIDOMENT = RLOCENT ;

regle 14085:
application : pro, oceans, iliad, batch ;

INVRETQB = NINVRETQB * (1 - V_CNR) ; 

INVRETQC = NINVRETQC * (1 - V_CNR) ; 

INVRETQT = NINVRETQT * (1 - V_CNR) ; 

INVRETQL = min(NINVRETQL , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI)) * (1 - V_CNR) ;

INVRETQM = min(NINVRETQM , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI - INVRETQL)) * (1 - V_CNR) ;

INVRETQD = min(NINVRETQD , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI - INVRETQL - INVRETQM)) * (1 - V_CNR) ;

INVRETOB = min(NINVRETOB , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI - INVRETQL - INVRETQM - INVRETQD)) * (1 - V_CNR) ;

INVRETOC = min(NINVRETOC , max(0 , PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI - INVRETQL - INVRETQM - INVRETQD - INVRETOB)) * (1 - V_CNR) ;

INVRETOI = min(NINVRETOI , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC
				   )) * (1 - V_CNR) ;

INVRETOJ = min(NINVRETOJ , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC
				   - INVRETOI)) * (1 - V_CNR) ;

INVRETOK = min(NINVRETOK , max(0 , PLAF_INVDOM3 - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK 
                                   - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP
                                   - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA
                                   - INVRETPE - INVRETPI - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC
				   - INVRETOI - INVRETOJ)) * (1 - V_CNR) ;

regle 14086:
application : pro, oceans, iliad, batch ;

RLOG1 = max(min(INVLOG2008 , RRI1) , 0) * (1 - V_CNR) ;

RLOG2 = max(min(INVLGDEB2009 , RRI1-RLOG1) , 0) * (1 - V_CNR) ;

RLOG3 = max(min(INVLGDEB , RRI1-RLOG1-RLOG2) , 0) * (1 - V_CNR) ;

RLOG4 = max(min(INVOMLOGOA , RRI1-RLOG1-RLOG2-RLOG3) , 0) * (1 - V_CNR) ;

RLOG5 = max(min(INVOMLOGOH , RRI1-RLOG1-RLOG2-RLOG3-RLOG4) , 0) * (1 - V_CNR) ;

RLOG6 = max(min(INVRETQL * (1 - INDPLAF) + INVRETQLA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5) , 0) * (1 - V_CNR) ;

RLOG7 = max(min(INVRETQM * (1 - INDPLAF) + INVRETQMA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5-RLOG6) , 0) * (1 - V_CNR) ;

RLOG8 = max(min(INVRETQD * (1 - INDPLAF) + INVRETQDA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5-RLOG6-RLOG7) , 0) * (1 - V_CNR) ;

RLOG9 = max(min(INVRETOB * (1 - INDPLAF) + INVRETOBA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5-RLOG6-RLOG7-RLOG8) , 0) * (1 - V_CNR) ;

RLOG10 = max(min(INVRETOC * (1 - INDPLAF) + INVRETOCA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5-RLOG6-RLOG7-RLOG8-RLOG9) , 0) * (1 - V_CNR) ;

RLOG11 = max(min(INVRETOI * (1 - INDPLAF2) + INVRETOIA * INDPLAF2 , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5-RLOG6-RLOG7-RLOG8-RLOG9-RLOG10) , 0) * (1 - V_CNR) ;

RLOG12 = max(min(INVRETOJ * (1 - INDPLAF2) + INVRETOJA * INDPLAF2 , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5-RLOG6-RLOG7-RLOG8-RLOG9-RLOG10-RLOG11) , 0) * (1 - V_CNR) ;

RLOG13 = max(min(INVRETOK * (1 - INDPLAF2) + INVRETOKA * INDPLAF2 , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5-RLOG6-RLOG7-RLOG8-RLOG9-RLOG10-RLOG11-RLOG12) , 0) * (1 - V_CNR) ;

RLOGDOM =(1 - V_INDTEO) * (RLOG1 + RLOG2 + RLOG3 + RLOG4 + RLOG5 + RLOG6 + RLOG7 + RLOG8 + RLOG9 + RLOG10 + RLOG11 + RLOG12 + RLOG13) * (1 - V_CNR)

         + V_INDTEO * (RLOG1 + RLOG2 + RLOG3 + RLOG4 + RLOG5 ) * (1 - V_CNR);

RINVDOMTOMLG = RLOGDOM ;

regle 4087:
application : pro, oceans, iliad, batch ;
RLOC1 = max(min(INVOMREP , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
			   -RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT) , 0) * (1 - V_CNR) ;

RLOC2 = max(min(INVRETMA * (1 - INDPLAF) + INVRETMAA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1) , 0) * (1 - V_CNR) ;

RLOC3 = max(min(INVRETLG * (1 - INDPLAF) + INVRETLGA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1-RLOC2) , 0) * (1 - V_CNR) ;

RLOC4 = max(min(INVRETKS * (1 - INDPLAF) + INVRETKSA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				 -RIDOMPROTOT-RLOC1-RLOC2-RLOC3) , 0) * (1 - V_CNR) ;

RLOC5 = max(min(INVOMENTMN , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
			     -RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4
			     ) , 0) * (1 - V_CNR) ;

RLOC6 = max(min(INVRETMB * (1 - INDPLAF) + INVRETMBA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5) , 0) * (1 - V_CNR) ;

RLOC7 = max(min(INVRETLH * (1 - INDPLAF) + INVRETLHA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6) , 0) * (1 - V_CNR) ;

RLOC8 = max(min(INVRETKT * (1 - INDPLAF) + INVRETKTA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7) , 0) * (1 - V_CNR) ;

RLOC9 = max(min(INVRETMC * (1 - INDPLAF) + INVRETMCA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8) , 0) * (1 - V_CNR) ;

RLOC10 = max(min(INVRETLI * (1 - INDPLAF) + INVRETLIA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9) , 0) * (1 - V_CNR) ;

RLOC11 = max(min(INVRETKU * (1 - INDPLAF) + INVRETKUA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9-RLOC10) , 0) * (1 - V_CNR) ;

RLOC12 = max(min(INVRETMAR * (1 - INDPLAF) + INVRETMARA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				 -RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9-RLOC10-RLOC11) , 0) * (1 - V_CNR) ;

RLOC13 = max(min(INVRETLGR * (1 - INDPLAF) + INVRETLGRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				 -RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9-RLOC10-RLOC11-RLOC12
				 ) , 0) * (1 - V_CNR) ;

RLOC14 = max(min(INVRETMBR * (1 - INDPLAF) + INVRETMBRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				 -RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9-RLOC10-RLOC11-RLOC12-RLOC13
				 ) , 0) * (1 - V_CNR) ;

RLOC15 = max(min(INVRETLHR * (1 - INDPLAF) + INVRETLHRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				 -RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9-RLOC10-RLOC11-RLOC12-RLOC13
				 -RLOC14) , 0) * (1 - V_CNR) ;

RLOC16 = max(min(INVRETMCR * (1 - INDPLAF) + INVRETMCRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				 -RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9-RLOC10-RLOC11-RLOC12-RLOC13
				 -RLOC14-RLOC15) , 0) * (1 - V_CNR) ;

RLOC17 = max(min(INVRETLIR * (1 - INDPLAF) + INVRETLIRA * INDPLAF , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT
				 -RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6-RLOC7-RLOC8-RLOC9-RLOC10-RLOC11-RLOC12-RLOC13
				 -RLOC14-RLOC15-RLOC16) , 0) * (1 - V_CNR) ;

RCOLENT = ((1-V_INDTEO) * (RLOC1 + RLOC2 + RLOC3 + RLOC4 + RLOC5 + RLOC6 + RLOC7 + RLOC8 + RLOC9 + RLOC10 + RLOC11 + RLOC12
			  + RLOC13 + RLOC14 + RLOC15 + RLOC16 + RLOC17)
          + (V_INDTEO) * (arr((V_RLOC3+V_RLOC13)*(TX50/100)) 
	                + arr((V_RLOC2+V_RLOC12)*(TX60/100)) 
                        + arr((V_RLOC7+V_RLOC15)*(TX50/100))
			+ arr((V_RLOC6+V_RLOC14)*(TX60/100))
			+ arr((V_RLOC10+V_RLOC17)*(TX50/100))
			+ arr((V_RLOC9+V_RLOC16)*(TX60/100))
			+ V_RLOC1 + V_RLOC5))
	  * (1 - V_CNR);

regle 4086:
application : pro, oceans, iliad, batch ;

REPKG = max(0 , INVSOCNRET - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				     -RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT)) * (1 - V_CNR) ;

REPDOMSOC2 = REPKG * (1 - V_CNR) ;


REPKH = max(0 , INVOMSOCKH - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				     -RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-INVSOCNRET)) * (1 - V_CNR) ;

REPKI = max(0 , INVOMSOCKI - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				     -RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-INVSOCNRET-INVOMSOCKH)) * (1 - V_CNR) ;

REPDOMSOC1 = (REPKH + REPKI) * (1 - V_CNR) ;


REPQN = max(0 , INVSOC2010 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				     -RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-INVSOCNRET-INVOMSOCKH-INVOMSOCKI)) * (1 - V_CNR) ;

REPQU = max(0 , INVOMSOCQU - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				     -RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-INVSOCNRET-INVOMSOCKH-INVOMSOCKI-INVSOC2010)) * (1 - V_CNR) ;

REPQK = max(0 , INVLOGSOC - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS
				    -RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-INVSOCNRET-INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU)) * (1 - V_CNR) ;

REPDOMSOC = (REPQN + REPQU + REPQK) * (1 - V_CNR) ;


REPMM = max(0 , INVOMREP - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				   -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				   -NRETROC40-NRETROC50)) * (1 - V_CNR) ;

REPMA = max(0 , NRETROC40 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				    -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				    -INVOMREP)) * (1 - V_CNR) ;

REPLG = max(0 , NRETROC50 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				    -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				    -INVOMREP-NRETROC40)) * (1 - V_CNR) ;

REPKS = max(0 , INVENDI - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				  -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				  -INVOMREP-NRETROC40-NRETROC50)) * (1 - V_CNR) ;

REPDOMENTR2 = (REPMM + REPMA + REPLG + REPKS) * (1 - V_CNR) ;


REPMN = max(0 , INVOMENTMN - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI)) * (1 - V_CNR) ;

REPMB = max(0 , RETROCOMMB - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN)) * (1 - V_CNR) ;

REPMC = max(0 , RETROCOMMC - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB)) * (1 - V_CNR) ;

REPLH = max(0 , RETROCOMLH - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC)) * (1 - V_CNR) ;

REPLI = max(0 , RETROCOMLI - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH)) * (1 - V_CNR) ;

REPKT = max(0 , INVOMENTKT - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI)) * (1 - V_CNR) ;

REPKU = max(0 , INVOMENTKU - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT)) * (1 - V_CNR) ;

REPDOMENTR1 = (REPMN + REPMB + REPMC + REPLH + REPLI + REPKT + REPKU) * (1 - V_CNR) ;


REPQE = max(0 , INVENDEB2009 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				       -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				       -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				       -INVOMENTKU)) * (1 - V_CNR) ;

REPQV = max(0 , INVOMQV - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				  -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				  -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				  -INVOMENTKU-INVENDEB2009)) * (1 - V_CNR) ;

REPQP = max(0 , INVRETRO2 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				    -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				    -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				    -INVOMENTKU-INVENDEB2009-INVOMQV)) * (1 - V_CNR) ;

REPQG = max(0 , INVDOMRET60 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				      -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				      -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				      -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2)) * (1 - V_CNR) ;

REPQO = max(0 , INVRETRO1 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				    -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				    -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				    -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60)) * (1 - V_CNR) ;

REPQF = max(0 , INVDOMRET50 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				      -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				      -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				      -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1)) * (1 - V_CNR) ;

REPQR = max(0 , INVIMP - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVOMSOCKH
				 -INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT-INVOMREP-NRETROC40
				 -NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT-INVOMENTKU-INVENDEB2009-INVOMQV
				 -INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50)) * (1 - V_CNR) ;

REPQI = max(0 , INVDIR2009 - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP)) * (1 - V_CNR) ;

REPPB = max(0 , INVOMRETPB - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009)) * (1 - V_CNR) ;

REPPF = max(0 , INVOMRETPF - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     )) * (1 - V_CNR) ;

REPPJ = max(0 , INVOMRETPJ - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     -INVOMRETPF)) * (1 - V_CNR) ;

REPPA = max(0 , INVOMRETPA - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     -INVOMRETPF-INVOMRETPJ)) * (1 - V_CNR) ;

REPPE = max(0 , INVOMRETPE - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     -INVOMRETPF-INVOMRETPJ-INVOMRETPA)) * (1 - V_CNR) ;

REPPI = max(0 , INVOMRETPI - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     -INVOMRETPF-INVOMRETPJ-INVOMRETPA-INVOMRETPE)) * (1 - V_CNR) ;

REPPD = max(0 , INVOMRETPD - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     -INVOMRETPF-INVOMRETPJ-INVOMRETPA-INVOMRETPE-INVOMRETPI)) * (1 - V_CNR) ;

REPPH = max(0 , INVOMRETPH - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     -INVOMRETPF-INVOMRETPJ-INVOMRETPA-INVOMRETPE-INVOMRETPI-INVOMRETPD)) * (1 - V_CNR) ;

REPPL = max(0 , INVOMRETPL - max(0 , RRI1-DLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET
				     -INVOMSOCKH-INVOMSOCKI-INVSOC2010-INVOMSOCQU-INVLOGSOC-RCELTOT-RLOCNPRO-RNOUV-RPATNAT1-RPATNAT-RIDOMPROTOT
				     -INVOMREP-NRETROC40-NRETROC50-INVENDI-INVOMENTMN-RETROCOMMB-RETROCOMMC-RETROCOMLH-RETROCOMLI-INVOMENTKT
				     -INVOMENTKU-INVENDEB2009-INVOMQV-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVOMRETPB
				     -INVOMRETPF-INVOMRETPJ-INVOMRETPA-INVOMRETPE-INVOMRETPI-INVOMRETPD-INVOMRETPH)) * (1 - V_CNR) ;

REPDOMENTR = (REPQE + REPQV + REPQP + REPQG + REPQO + REPQF + REPQR + REPQI 
	    + REPPB + REPPF + REPPJ + REPPA + REPPE + REPPI + REPPD + REPPH + REPPL) * (1 - V_CNR) ;

regle 407018:
application : pro ,  oceans , iliad , batch  ;
SEUILRED1=arr((arr(RI1)+REVQUO) / NBPT);
regle 407020:
application:pro, oceans, iliad, batch;
RETUD = (1 - V_CNR) * arr((RDENS * MTRC) + (RDENL * MTRL) + (RDENU * MTRS) + (RDENSQAR * MTRC /2) + (RDENLQAR * MTRL /2) + (RDENUQAR * MTRS /2));
RNBE = RDENS + RDENL + RDENU + RDENSQAR + RDENLQAR + RDENUQAR ;
DNBE = RDENS + RDENL + RDENU + RDENSQAR + RDENLQAR + RDENUQAR ;
regle 100407020:
application:pro, oceans, iliad, batch;
RRETU = max(min( RETUD , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT) , 0) ;

regle 407022 :
application : pro ,  oceans , iliad , batch  ;
BFCPI = ( positif(BOOL_0AM) * min ( FCPI,PLAF_FCPI*2)
        + positif(1 - BOOL_0AM) * min ( FCPI,PLAF_FCPI) )
        * (1 - V_CNR);
RFCPI = arr (BFCPI * TX_FCPI /100) ;
RINNO = max( min( RFCPI , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC
			  -RCINE-RRESTIMO-RPECHE-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RTITPRISE) , 0 );
regle 407023 :
application : pro ,  oceans , iliad , batch  ;

BPRESCOMP =(RDPRESREPORT 
	   + (1-positif(RDPRESREPORT+0)) * 
	   arr(
	         ((1 - present(SUBSTITRENTE)) * 
                  arr (
                 null(PRESCOMP2000 - PRESCOMPJUGE)
                   * min(PLAFPRESCOMP,PRESCOMP2000)
	         + positif(PRESCOMPJUGE - PRESCOMP2000)
                   * (positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE))
                   * PRESCOMP2000
	         + positif(PRESCOMPJUGE - PRESCOMP2000)
                    * (1 - positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE))
                    * PLAFPRESCOMP * PRESCOMP2000/PRESCOMPJUGE
                       )
	       +
             present(SUBSTITRENTE) *
                  arr (
                   null(PRESCOMP2000 - SUBSTITRENTE)
		   * 
		   (positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE)*SUBSTITRENTE
		   + 
		   positif(PRESCOMPJUGE-PLAFPRESCOMP)*arr(PLAFPRESCOMP*SUBSTITRENTE/PRESCOMPJUGE))
                 + 
		   positif(SUBSTITRENTE - PRESCOMP2000)
		   * (positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE)*PRESCOMP2000
		   + 
		   positif(PRESCOMPJUGE-PLAFPRESCOMP)*arr(PLAFPRESCOMP*(SUBSTITRENTE/PRESCOMPJUGE)*(PRESCOMP2000/SUBSTITRENTE)))
                       )
	           )
                )
              )
               *(1 - V_CNR);




RPRESCOMP = arr (BPRESCOMP * TX_PRESCOMP / 100) * (1 -V_CNR);
BPRESCOMP01 = max(0,(1 - present(SUBSTITRENTE)) * 
                   (  positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE)
                       * (PRESCOMPJUGE - BPRESCOMP)
                     + positif(PRESCOMPJUGE - PLAFPRESCOMP)
                       * (PLAFPRESCOMP - BPRESCOMP)
                   )
	       +
             present(SUBSTITRENTE) *
                   (  positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE)
                       * (SUBSTITRENTE - PRESCOMP2000)
                     + positif(PRESCOMPJUGE - PLAFPRESCOMP)
		     *arr(PLAFPRESCOMP*(SUBSTITRENTE/PRESCOMPJUGE)*((SUBSTITRENTE-PRESCOMP2000)/SUBSTITRENTE))
                   )
		* (1 - V_CNR)
		);
DPRESCOMP = PRESCOMP2000 + RDPRESREPORT ;

APRESCOMP = BPRESCOMP * (1 - V_CNR) ;

RRPRESCOMP = max( min( RPRESCOMP , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC-RCINE-RRESTIMO-RPECHE-RSOCREPR) , 0) ;

RPRESCOMPREP =  max( min( RPRESCOMP , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET
				      -RFIPC-RCINE-RRESTIMO-RPECHE-RSOCREPR) , 0) * positif(RDPRESREPORT) ;

RPRESCOMPAN =  RRPRESCOMP * (1-positif(RDPRESREPORT)) ;
regle 4081 :
application : pro ,  oceans , iliad , batch  ;

DCOTFOR = COTFORET ;

ACOTFOR = min(DCOTFOR , PLAF_FOREST1 * (1 + BOOL_0AM)) * (1 - V_CNR) ;

RCOTFOR = max( min( arr (ACOTFOR * TX90/100) , IDOM11-DEC11) , 0) ;

regle 408 :
application : pro ,  oceans , iliad , batch  ;


FORTRA = RDFORESTRA + REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 ;

DFOREST = RDFOREST + FORTRA + RDFORESTGES ;


AFOREST = ( min (RDFOREST, PLAF_FOREST * (1 + BOOL_0AM)) 
	   + min (FORTRA, max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR)) 
	    + min (RDFORESTGES, PLAF_FOREST2 * (1 + BOOL_0AM)) ) * (1 - V_CNR) ;


RFOREST = (arr( min( REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 , max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR)) * TX_FOREST/100) 
	  + arr ( max(0 , AFOREST - min( REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 ,
					max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR))) * TX_FOREST2/100 )) * (1 - V_CNR) ;

RFOR = max( min( RFOREST , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE-RDIFAGRI-RFORET-RFIPC-RCINE
			   -RRESTIMO-RPECHE-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RTITPRISE-RINNO-RSOUFIP-RRIRENOV ) , 0 );


REPBON = max(0 , REPFOR - max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR)) * (1 - V_CNR) ;

REPSIN = max(0 , REPSINFOR - max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR)) * (1 - V_CNR) ; 

REPFOREST = max(0 , REPFOR1 - max(0 , max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR) - REPFOR - REPSINFOR)) * (1 - V_CNR) ;

REPFORSIN = max(0 , REPSINFOR1 - max(0 , max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR) - REPFOR - REPSINFOR)) * (1 - V_CNR) ; 

REPEST = max(0 , max(0 , FORTRA - max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR)) - (REPBON + REPSIN + REPFOREST + REPFORSIN)) 
	  * (1 - positif(SINISFORET)) * (1 - V_CNR) ; 

REPNIS = max(0 , max(0 , FORTRA - max(0 , (PLAF_FOREST1 * (1 + BOOL_0AM)) - ACOTFOR)) - (REPBON + REPSIN + REPFOREST + REPFORSIN)) 
	  * positif(SINISFORET) * (1 - V_CNR) ;

REPFORTOT = REPBON + REPFOREST + REPEST ;

REPFORESTA = REPSIN + REPFORSIN + REPNIS ;
regle 4096:
application : pro ,  oceans , iliad , batch  ;


DCREAT = NBCREAT + NBCREAT1 + CONVCREA + NBCREAT2 ;

DCREATHANDI = NBCREATHANDI + NBCREATHANDI1 + CONVHAND + NBCREATHANDI2 ;


ACREAT = DCREAT * (1 - V_CNR) ;

ACREATHANDI = DCREATHANDI * (1 - V_CNR) ;


RCREATEUR = (NBCREAT + NBCREAT1/2 + CONVCREA/2 + NBCREAT2 ) * PLAF_CRENTR * (1 - V_CNR) ;

RCREATEURHANDI = (NBCREATHANDI + NBCREATHANDI1/2 + CONVHAND/2 + NBCREATHANDI2) * PLAF_CRENTRH * (1 - V_CNR) ;

regle 1004096:
application : pro ,  oceans , iliad , batch  ;

RCREAT = max(min( RCREATEUR + RCREATEURHANDI , RRI1-RLOGDOM-RTOURNEUF-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA) , 0) ;

regle 4095:
application : pro ,  oceans , iliad , batch  ;
BDIFAGRI =   min ( INTDIFAGRI , LIM_DIFAGRI * ( 1 + BOOL_0AM))
           * ( 1 - V_CNR);
DDIFAGRI = INTDIFAGRI ;
ADIFAGRI = BDIFAGRI ;

RAGRI = arr (BDIFAGRI  * TX_DIFAGRI / 100 );
RDIFAGRI = max( min( RAGRI , IDOM11-DEC11-RCOTFOR-RREPA-RSYND-RFIPDOM-RAIDE) , 0 );

regle 430 :
application : pro , oceans , iliad , batch  ;
ITRED = min( RED , IDOM11-DEC11) ;


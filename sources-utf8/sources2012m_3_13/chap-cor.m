#*************************************************************************************************************************
#
#Copyright or © or Copr.[DGFIP][2017]
#
#Ce logiciel a été initialement développé par la Direction Générale des 
#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2013 
#au titre des revenus percus en 2012. La présente version a permis la 
#génération du moteur de calcul des chaînes de taxation des rôles d'impôt 
#sur le revenu de ce millésime.
#
#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français 
#et respectant les principes de diffusion des logiciels libres. Vous pouvez 
#utiliser, modifier et/ou redistribuer ce programme sous les conditions de 
#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur 
#le site "http://www.cecill.info".
#
#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris 
#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.
#
#**************************************************************************************************************************

regle  corrective base_INITIAL 1080:
application :  iliad ;
PRS_P = PRS;
CSG_P = CSG;
RDS_P = RDSN;
IRNIN_P = IRN ;
IRNIN_INR_P = IRNIN_INR;
CSREC_P = CSREC;
NAPCR_P = NAPCR;
TAXA_P = TAXABASE ;
CHR_P = CHRBASE ;
TAXABRUT_P = TAXASSUR ;
PCAPBRUT_P = IPCAPTAXT ;
CHRBRUT_P = IHAUTREVT ;
PCAP_P = PCAPBASE ;
GAIN_P = GAINBASE ;
RSE1_P = RSE1BASE ;
RSE2_P = RSE2BASE ;
RSE3_P = RSE3BASE ;
RSE4_P = RSE4BASE ;
CSAL_P = CSALBASE ;
CDIS_P = CDISBASE ;
VAR7WY_P = DEPCHOBAS;
VAR7WZ_P = DEPMOBIL;
ISF_P = ISF4BASE;
regle corrective base_anterieure_cor 11:
application :  iliad ;
ANTINDIRPS = INDIRPS ;
ANTPPETOT = PPETOT ;
ANTPPEREST2A = PPEREST2A ;
ANTPPEIMP2A = PPEIMP2A ;
DIFF7WY_A = DIFF7WY ; 
DIFF7WZ_A = DIFF7WZ ; 
NATIMP_A = NATIMP ; 
PCSG_A = PCSG;
PRDS_A = PRDS;
PIR_A = PIR;
PTAXA_A=PTAXA;
PCHR_A=PHAUTREV;
PPCAP_A=PPCAP;
PGAIN_A=PGAIN;
PRSE1_A=PRSE1;
PRSE2_A=PRSE2;
PRSE3_A=PRSE3;
PRSE4_A=PRSE4;
PCSAL_A=PCSAL;
PCDIS_A=PCDIS;
PTOT_A = PTOT;
PPRS_A = PPRS;
RNI_A = RNI;
IREST_A = IREST;
IDEGR_A = IRDEG;
IRN_A = IRN;
IRNET_A = IRNET;
TAXANET_A = TAXANET;
TAXLOYNET_A = TAXLOYNET;
CHRNET_A = HAUTREVNET;
PCAPNET_A = PCAPNET;
GAINNET_A = GAINNET;
RSE1NET_A = RSE1NET;
RSE2NET_A = RSE2NET;
RSE3NET_A = RSE3NET;
RSE4NET_A = RSE4NET;
IDCSG_A = IDCSG;
DCSGIM_A = DCSGIM;
IRANT_A = IRANT;
IRNIN_A = IRNIN;
IRNIN_INR_A = IRNIN_INR;
CSG_A = CSG*positif(CSG+PRS+RDSN+CSAL+CDIS+CGAINSAL+RSE1+RSE2+RSE3+RSE4-SEUIL_61);
RDS_A = RDSN*positif(CSG+PRS+RDSN+CSAL+CDIS+CGAINSAL+RSE1+RSE2+RSE3+RSE4-SEUIL_61);
PRS_A = PRS*positif(CSG+PRS+RDSN+CSAL+CDIS+CGAINSAL+RSE1+RSE2+RSE3+RSE4-SEUIL_61);
CSAL_A = CSAL*positif(CSG+PRS+RDSN+CSAL+CDIS+CGAINSAL+RSE1+RSE2+RSE3+RSE4-SEUIL_61);
CDIS_A = CDIS*positif(CSG+PRS+RDSN+CSAL+CDIS+CGAINSAL+RSE1+RSE2+RSE3+RSE4-SEUIL_61);
GAINBASE_A = CGAINSAL*positif(CSG+PRS+RDSN+CSAL+CDIS+CGAINSAL+RSE1+RSE2+RSE3+RSE4-SEUIL_61);
CICA_A = CICA;
TAXABASE_A = TAXABASE;
CHRBASE_A = CHRBASE;
PCAPBASE_A = PCAPBASE;
RSE1BASE_A = RSE1BASE;
RSE2BASE_A = RSE2BASE;
RSE3BASE_A = RSE3BASE;
RSE4BASE_A = RSE4BASE;
CSALBASE_A = CSALBASE;
CDISBASE_A = CDISBASE;
IRNIN_R99R_A = IRNIN_R99R+(IRNIN_PA)*null(1-IND_PASSAGE);
IRNIN_R9901_A = IRNIN_R9901;
CSG_R9901_A = CSG_R9901;
RDS_R9901_A = RDS_R9901;
PRS_R9901_A = PRS_R9901;
CSAL_R9901_A = CSAL_R9901;
CDIS_R9901_A = CDIS_R9901;
TAXA_R9901_A = TAXA_R9901;
CHR_R9901_A = CHR_R9901;
PCAP_R9901_A = PCAP_R9901;
GAIN_R9901_A = GAIN_R9901;
RSE1_R9901_A = RSE1_R9901;
RSE2_R9901_A = RSE2_R9901;
RSE3_R9901_A = RSE3_R9901;
RSE4_R9901_A = RSE4_R9901;
CSG_R99R_A = CSG_R99R+CSG_PA*null(1-IND_PASSAGE);
RDS_R99R_A = RDS_R99R+CRDS_PA*null(1-IND_PASSAGE);
PRS_R99R_A = PRS_R99R+PRS_PA*null(1-IND_PASSAGE);
CSAL_R99R_A = CSAL_R99R+CSAL_PA*null(1-IND_PASSAGE);
CDIS_R99R_A = CDIS_R99R+CDIS_PA*null(1-IND_PASSAGE);
TAXA_R99R_A = TAXA_R99R+TAXA_PA*null(1-IND_PASSAGE);
CHR_R99R_A = CHR_R99R+CHR_PA*null(1-IND_PASSAGE);
PCAP_R99R_A = PCAP_R99R+PCAP_PA*null(1-IND_PASSAGE);
GAIN_R99R_A = GAIN_R99R+GAIN_PA*null(1-IND_PASSAGE);
RSE1_R99R_A = RSE1_R99R+RSE1_PA*null(1-IND_PASSAGE);
RSE2_R99R_A = RSE2_R99R+RSE2_PA*null(1-IND_PASSAGE);
RSE3_R99R_A = RSE3_R99R+RSE3_PA*null(1-IND_PASSAGE);
RSE4_R99R_A = RSE4_R99R+RSE4_PA*null(1-IND_PASSAGE);
INRIR_R99R_A = INRIR_R99R+INRIR_R99RA;
INRCSG_R99R_A = INRCSG_R99R+INRCSG_R99RA;
INRCRDS_R99R_A = INRCRDS_R99R+INRCRDS_R99RA;
INRPRS_R99R_A = INRPRS_R99R+INRPRS_R99RA;
INRCSAL_R99R_A = INRCSAL_R99R+INRCSAL_R99RA;
INRCDIS_R99R_A = INRCDIS_R99R+INRCDIS_R99RA;
INRTAXA_R99R_A = INRTAXA_R99R+INRTAXA_R99RA;
INRCHR_R99R_A = INRCHR_R99R+INRCHR_R99RA;
INRPCAP_R99R_A = INRPCAP_R99R+INRPCAP_R99RA;
INRGAIN_R99R_A = INRGAIN_R99R+INRGAIN_R99RA;
INRRSE1_R99R_A = INRRSE1_R99R+INRRSE1_R99RA;
INRRSE2_R99R_A = INRRSE2_R99R+INRRSE2_R99RA;
INRRSE3_R99R_A = INRRSE3_R99R+INRRSE3_R99RA;
INRRSE4_R99R_A = INRRSE4_R99R+INRRSE4_R99RA;
INRIR_R9901_A = INRIR_R9901+INRIR_R9901A;
INRCSG_R9901_A = INRCSG_R9901+INRCSG_R9901A;
INRCRDS_R9901_A = INRCRDS_R9901+INRCRDS_R9901A;
INRPRS_R9901_A = INRPRS_R9901+INRPRS_R9901A;
INRCSAL_R9901_A = INRCSAL_R9901+INRCSAL_R9901A;
INRCDIS_R9901_A = INRCDIS_R9901+INRCDIS_R9901A;
INRTAXA_R9901_A = INRTAXA_R9901+INRTAXA_R9901A;
INRCHR_R9901_A = INRCHR_R9901+INRCHR_R9901A;
INRPCAP_R9901_A = INRPCAP_R9901+INRPCAP_R9901A;
INRGAIN_R9901_A = INRGAIN_R9901+INRGAIN_R9901A;
INRRSE1_R9901_A = INRRSE1_R9901+INRRSE1_R9901A;
INRRSE2_R9901_A = INRRSE2_R9901+INRRSE2_R9901A;
INRRSE3_R9901_A = INRRSE3_R9901+INRRSE3_R9901A;
INRRSE4_R9901_A = INRRSE4_R9901+INRRSE4_R9901A;
IAR_A = IAR;
NAPIR_A=NAPIR;

IND_PASSAGE_A = IND_PASSAGE;
IND_PASSR9901_A = IND_PASSR9901;
IRNIN_RECT_A = IRNIN_RECT;
INRIR_RECT_A = INRIR_RECT;

IRNIN_REF_A = max(IRNIN_INR,IRNIN_P+IRNIN_PA)*positif(DO_INR_IR2)
	     + (IRNIN_REF * (1-positif(INDFLAGCIR)) + IRNIN_R * positif(INDFLAGCIR))
            * (1-positif(DO_INR_IR2));
CSG_REF_A = max(CSG,CSG_P+CSG_PA)*positif(DO_INR_CSG2)
	   + CSG_REF * (1-positif(INDFLAGCCSG)) + CSG_R * positif(INDFLAGCCSG);
RDS_REF_A = max(RDSN,RDS_P+CRDS_PA)*positif(DO_INR_CRDS2)
            + RDS_REF * (1-positif(INDFLAGCRDS)) + RDS_R * positif(INDFLAGCRDS);
PRS_REF_A = max(PRS,PRS_P+PRS_PA)*positif(DO_INR_PS2)
            + PRS_REF * (1-positif(INDFLAGCPRS)) + PRS_R * positif(INDFLAGCPRS);
CSAL_REF_A = max(CSAL,CSAL_P+CSAL_PA)*positif(DO_INR_CSAL2)
            + CSAL_REF * (1-positif(INDFLAGCCSAL)) + CSAL_R * positif(INDFLAGCCSAL);
CDIS_REF_A = max(CDIS,CDIS_P+CDIS_PA)*positif(DO_INR_CDIS2)
            + CDIS_REF * (1-positif(INDFLAGCCDIS)) + CDIS_R * positif(INDFLAGCCDIS);
TAXA_REF_A = max(TAXABASE,TAXA_P+TAXA_PA)*positif(DO_INR_TAXA2)
            + TAXA_REF * (1-positif(INDFLAGCTAXA)) + TAXA_R * positif(INDFLAGCTAXA);
CHR_REF_A = max(CHRBASE,CHR_P+CHR_PA)*positif(DO_INR_CHR2)
            + CHR_REF * (1-positif(INDFLAGCCHR)) + CHR_R * positif(INDFLAGCCHR);
PCAP_REF_A = max(PCAPBASE,PCAP_P+PCAP_PA)*positif(DO_INR_PCAP2)
            + PCAP_REF * (1-positif(INDFLAGCPCAP)) + PCAP_R * positif(INDFLAGCPCAP);
GAIN_REF_A = max(GAINBASE,GAIN_P+GAIN_PA)*positif(DO_INR_GAIN2)
            + GAIN_REF * (1-positif(INDFLAGCGAIN)) + GAIN_R * positif(INDFLAGCGAIN);
RSE1_REF_A = max(RSE1BASE,RSE1_P+RSE1_PA)*positif(DO_INR_RSE12)
            + RSE1_REF * (1-positif(INDFLAGCRSE1)) + RSE1_R * positif(INDFLAGCRSE1);
RSE2_REF_A = max(RSE2BASE,RSE2_P+RSE2_PA)*positif(DO_INR_RSE22)
            + RSE2_REF * (1-positif(INDFLAGCRSE2)) + RSE2_R * positif(INDFLAGCRSE2);
RSE3_REF_A = max(RSE3BASE,RSE3_P+RSE3_PA)*positif(DO_INR_RSE32)
            + RSE3_REF * (1-positif(INDFLAGCRSE3)) + RSE3_R * positif(INDFLAGCRSE3);
RSE4_REF_A = max(RSE4BASE,RSE4_P+RSE4_PA)*positif(DO_INR_RSE42)
            + RSE4_REF * (1-positif(INDFLAGCRSE4)) + RSE4_R * positif(INDFLAGCRSE4);

IRNIN_PA_A = IRNIN_PA;
CSG_PA_A = CSG_PA;
CRDS_PA_A = CRDS_PA;
PRS_PA_A = PRS_PA;
CSAL_PA_A = CSAL_PA;
CDIS_PA_A = CDIS_PA;
TAXA_PA_A = TAXA_PA;
CHR_PA_A = CHR_PA;
PCAP_PA_A = PCAP_PA;
GAIN_PA_A = GAIN_PA;
RSE1_PA_A = RSE1_PA;
RSE2_PA_A = RSE2_PA;
RSE3_PA_A = RSE3_PA;
RSE4_PA_A = RSE4_PA;


DO_INR_IR_A = DO_INR_IR + DO_INR_IRC;
DO_IR_A = DO_IR;
DO_INR_CSG_A = DO_INR_CSG+ DO_INR_CSGC;
DO_CSG_A = DO_CSG;
DO_INR_CRDS_A = DO_INR_CRDS+ DO_INR_CRDSC;
DO_CRDS_A = DO_CRDS;
DO_INR_PS_A = DO_INR_PS+ DO_INR_PSC;
DO_PS_A = DO_PS;
DO_INR_CSAL_A = DO_INR_CSAL+ DO_INR_CSALC;
DO_CSAL_A = DO_CSAL;
DO_INR_CDIS_A = DO_INR_CDIS+ DO_INR_CDISC;
DO_CDIS_A = DO_CDIS;
DO_INR_TAXA_A = DO_INR_TAXAGA+ DO_INR_TAXAC;
DO_TAXA_A = DO_TAXA;
DO_INR_CHR_A = DO_INR_CHR+ DO_INR_CHRC;
DO_CHR_A = DO_CHR;
DO_INR_PCAP_A = DO_INR_PCAP+ DO_INR_PCAPC;
DO_PCAP_A = DO_PCAP;
DO_INR_GAIN_A = DO_INR_GAIN+ DO_INR_GAINC;
DO_GAIN_A = DO_GAIN;
DO_INR_RSE1_A = DO_INR_RSE1+ DO_INR_RSE1C;
DO_RSE1_A = DO_RSE1;
DO_INR_RSE2_A = DO_INR_RSE2+ DO_INR_RSE2C;
DO_RSE2_A = DO_RSE2;
DO_INR_RSE3_A = DO_INR_RSE3+ DO_INR_RSE3C;
DO_RSE3_A = DO_RSE3;
DO_INR_RSE4_A = DO_INR_RSE4+ DO_INR_RSE4C;
DO_RSE4_A = DO_RSE4;

INRIR_NTL_A= INRIR_NTLDEC+INRIR_NTLADEC;
INRCSG_NTL_A=INRCSG_NTLDEC+INRCSG_NTLADEC;
INRCRDS_NTL_A=INRCRDS_NTLDEC+INRCRDS_NTLADEC;
INRPRS_NTL_A=INRPRS_NTLDEC+INRPS_NTLADEC;
INRCSAL_NTL_A=INRCSAL_NTLDEC+INRCSAL_NTLADEC;
INRCDIS_NTL_A=INRCDIS_NTLDEC+INRCDIS_NTLADEC;
INRTAXA_NTL_A=INRTAXA_NTLDEC+INRTAXA_NTLADEC;
INRCHR_NTL_A=INRCHR_NTLDEC+INRCHR_NTLADEC;
INRPCAP_NTL_A=INRPCAP_NTLDEC+INRPCAP_NTLADEC;
INRGAIN_NTL_A=INRGAIN_NTLDEC+INRGAIN_NTLADEC;
INRRSE1_NTL_A=INRRSE1_NTLDEC+INRRSE1_NTLADEC;
INRRSE2_NTL_A=INRRSE2_NTLDEC+INRRSE2_NTLADEC;
INRRSE3_NTL_A=INRRSE3_NTLDEC+INRRSE3_NTLADEC;
INRRSE4_NTL_A=INRRSE4_NTLDEC+INRRSE4_NTLADEC;
INRIR_NTL_1_A= INRIR_NTLDEC_1+INRIR_NTLADEC_1;
INRCSG_NTL_1_A=INRCSG_NTLDEC_1+INRCSG_NTLADEC_1;
INRCRDS_NTL_1_A=INRCRDS_NTLDEC_1+INRCRDS_NTLADEC_1;
INRPRS_NTL_1_A=INRPRS_NTLDEC_1+INRPS_NTLADEC_1;
INRCSAL_NTL_1_A=INRCSAL_NTLDEC_1+INRCSAL_NTLADEC_1;
INRCDIS_NTL_1_A=INRCDIS_NTLDEC_1+INRCDIS_NTLADEC_1;
INRTAXA_NTL_1_A=INRTAXA_NTLDEC_1+INRTAXA_NTLADEC_1;
INRCHR_NTL_1_A=INRCHR_NTLDEC_1+INRCHR_NTLADEC_1;
INRPCAP_NTL_1_A=INRPCAP_NTLDEC_1+INRPCAP_NTLADEC_1;
INRGAIN_NTL_1_A=INRGAIN_NTLDEC_1+INRGAIN_NTLADEC_1;
INRRSE1_NTL_1_A=INRRSE1_NTLDEC_1+INRRSE1_NTLADEC_1;
INRRSE2_NTL_1_A=INRRSE2_NTLDEC_1+INRRSE2_NTLADEC_1;
INRRSE3_NTL_1_A=INRRSE3_NTLDEC_1+INRRSE3_NTLADEC_1;
INRRSE4_NTL_1_A=INRRSE4_NTLDEC_1+INRRSE4_NTLADEC_1;

INRIR_TL_1_A=INRIR_TLADEC_12+max(0,INRIR_TL_1_AD-arr(DO_INR_IR*INRIR_TL_1_AD/(INRIR_TL_1_AD+INRIR_TL_AD)));
INRCSG_TL_1_A=INRCSG_TLADEC_12+max(0,INRCSG_TL_1_AD-arr(DO_INR_CSG*INRCSG_TL_1_AD/(INRCSG_TL_AD+INRCSG_TL_1_AD)));
INRPRS_TL_1_A=INRPRS_TLADEC_12+max(0,INRPRS_TL_1_AD-arr(DO_INR_PS*INRPRS_TL_1_AD/(INRPRS_TL_AD+INRPRS_TL_1_AD)));
INRCRDS_TL_1_A=INRCRDS_TLADEC_12+max(0,INRCRDS_TL_1_AD-arr(DO_INR_CRDS*INRCRDS_TL_1_AD/(INRCRDS_TL_AD+INRCRDS_TL_1_AD)));
INRCSAL_TL_1_A=INRCSAL_TLADEC_12+max(0,INRCSAL_TL_1_AD-arr(DO_INR_CSAL*INRCSAL_TL_1_AD/(INRCSAL_TL_AD+INRCSAL_TL_1_AD)));
INRCDIS_TL_1_A=INRCDIS_TLADEC_12+max(0,INRCDIS_TL_1_AD-arr(DO_INR_CDIS*INRCDIS_TL_1_AD/(INRCDIS_TL_AD+INRCDIS_TL_1_AD)));
INRTAXA_TL_1_A=INRTAXA_TLADEC_12+max(0,INRTAXA_TL_1_AD -arr(DO_INR_TAXAGA*INRTAXA_TL_1_AD/(INRTAXA_TL_AD+INRTAXA_TL_1_AD)));
INRCHR_TL_1_A=INRCHR_TLADEC_12+max(0,INRCHR_TL_1_AD -arr(DO_INR_CHR*INRCHR_TL_1_AD/(INRCHR_TL_AD+INRCHR_TL_1_AD)));
INRPCAP_TL_1_A=INRPCAP_TLADEC_12+max(0,INRPCAP_TL_1_AD -arr(DO_INR_PCAP*INRPCAP_TL_1_AD/(INRPCAP_TL_AD+INRPCAP_TL_1_AD)));
INRGAIN_TL_1_A=INRGAIN_TLADEC_12+max(0,INRGAIN_TL_1_AD -arr(DO_INR_GAIN*INRGAIN_TL_1_AD/(INRGAIN_TL_AD+INRGAIN_TL_1_AD)));
INRRSE1_TL_1_A=INRRSE1_TLADEC_12+max(0,INRRSE1_TL_1_AD -arr(DO_INR_RSE1*INRRSE1_TL_1_AD/(INRRSE1_TL_AD+INRRSE1_TL_1_AD)));
INRRSE2_TL_1_A=INRRSE2_TLADEC_12+max(0,INRRSE2_TL_1_AD -arr(DO_INR_RSE2*INRRSE2_TL_1_AD/(INRRSE2_TL_AD+INRRSE2_TL_1_AD)));
INRRSE3_TL_1_A=INRRSE3_TLADEC_12+max(0,INRRSE3_TL_1_AD -arr(DO_INR_RSE3*INRRSE3_TL_1_AD/(INRRSE3_TL_AD+INRRSE3_TL_1_AD)));
INRRSE4_TL_1_A=INRRSE4_TLADEC_12+max(0,INRRSE4_TL_1_AD -arr(DO_INR_RSE4*INRRSE4_TL_1_AD/(INRRSE4_TL_AD+INRRSE4_TL_1_AD)));

INRIR_TL_A=INRIR_TLADEC+max(0,INRIR_TL_AD-arr(DO_INR_IR*INRIR_TL_AD/(INRIR_TL_AD+INRIR_TL_1_AD)));
INRCSG_TL_A=INRCSG_TLADEC+max(0,INRCSG_TL_AD -arr(DO_INR_CSG*INRCSG_TL_AD/(INRCSG_TL_AD+INRCSG_TL_1_AD)));
INRPRS_TL_A=INRPRS_TLADEC+max(0,INRPRS_TL_AD -arr(DO_INR_PS*INRPRS_TL_AD/(INRPRS_TL_AD+INRPRS_TL_1_AD)));
INRCRDS_TL_A=INRCRDS_TLADEC+max(0,INRCRDS_TL_AD -arr(DO_INR_CRDS*INRCRDS_TL_AD/(INRCRDS_TL_AD+INRCRDS_TL_1_AD)));
INRCSAL_TL_A=INRCSAL_TLADEC+max(0,INRCSAL_TL_AD -arr(DO_INR_CSAL*INRCSAL_TL_AD/(INRCSAL_TL_AD+INRCSAL_TL_1_AD)));
INRCDIS_TL_A=INRCDIS_TLADEC+max(0,INRCDIS_TL_AD -arr(DO_INR_CDIS*INRCDIS_TL_AD/(INRCDIS_TL_AD+INRCDIS_TL_1_AD)));
INRTAXA_TL_A=INRTAXA_TLADEC+max(0,INRTAXA_TL_AD-arr(DO_INR_TAXAGA*INRTAXA_TL_AD/(INRTAXA_TL_AD+INRTAXA_TL_1_AD)));
INRCHR_TL_A=INRCHR_TLADEC+max(0,INRCHR_TL_AD-arr(DO_INR_CHR*INRCHR_TL_AD/(INRCHR_TL_AD+INRCHR_TL_1_AD)));
INRPCAP_TL_A=INRPCAP_TLADEC+max(0,INRPCAP_TL_AD-arr(DO_INR_PCAP*INRPCAP_TL_AD/(INRPCAP_TL_AD+INRPCAP_TL_1_AD)));
INRGAIN_TL_A=INRGAIN_TLADEC+max(0,INRGAIN_TL_AD-arr(DO_INR_GAIN*INRGAIN_TL_AD/(INRGAIN_TL_AD+INRGAIN_TL_1_AD)));
INRRSE1_TL_A=INRRSE1_TLADEC+max(0,INRRSE1_TL_AD-arr(DO_INR_RSE1*INRRSE1_TL_AD/(INRRSE1_TL_AD+INRRSE1_TL_1_AD)));
INRRSE2_TL_A=INRRSE2_TLADEC+max(0,INRRSE2_TL_AD-arr(DO_INR_RSE2*INRRSE2_TL_AD/(INRRSE2_TL_AD+INRRSE2_TL_1_AD)));
INRRSE3_TL_A=INRRSE3_TLADEC+max(0,INRRSE3_TL_AD-arr(DO_INR_RSE3*INRRSE3_TL_AD/(INRRSE3_TL_AD+INRRSE3_TL_1_AD)));
INRRSE4_TL_A=INRRSE4_TLADEC+max(0,INRRSE4_TL_AD-arr(DO_INR_RSE4*INRRSE4_TL_AD/(INRRSE4_TL_AD+INRRSE4_TL_1_AD)));
TL_IR_A=TL_IR;
TL_CS_A=TL_CS;
TL_CSAL_A=TL_CSAL;
TL_CDIS_A=TL_CDIS;
TL_TAXAGA_A=TL_TAXAGA;
TL_CHR_A=TL_CHR;
TL_CAP_A=TL_CAP;
TL_GAIN_A=TL_GAIN;
TL_RSE1_A=TL_RSE1;
TL_RSE2_A=TL_RSE2;
TL_RSE3_A=TL_RSE3;
TL_RSE4_A=TL_RSE4;

INRIR_RETDEF_A = INRIR_RETDEF;
INRCSG_RETDEF_A = INRCSG_RETDEF;
INRCRDS_RETDEF_A = INRCRDS_RETDEF;
INRPRS_RETDEF_A = INRPRS_RETDEF;
INRCSAL_RETDEF_A = INRCSAL_RETDEF;
INRCDIS_RETDEF_A = INRCDIS_RETDEF;
INRTAXA_RETDEF_A = INRTAXA_RETDEF;
INRCHR_RETDEF_A = INRCHR_RETDEF;
INRPCAP_RETDEF_A = INRPCAP_RETDEF;
INRGAIN_RETDEF_A = INRGAIN_RETDEF;
INRRSE1_RETDEF_A = INRRSE1_RETDEF;
INRRSE2_RETDEF_A = INRRSE2_RETDEF;
INRRSE3_RETDEF_A = INRRSE3_RETDEF;
INRRSE4_RETDEF_A = INRRSE4_RETDEF;


INR_IR_TARDIF_A=INR_IR_TARDIF;
INR_CSG_TARDIF_A=INR_CSG_TARDIF;
INR_CRDS_TARDIF_A=INR_CRDS_TARDIF;
INR_CSAL_TARDIF_A=INR_CSAL_TARDIF;
INR_CDIS_TARDIF_A=INR_CDIS_TARDIF;
INR_PS_TARDIF_A=INR_PS_TARDIF;
INR_TAXA_TARDIF_A=INR_TAXAGA_TARDIF;
INR_CHR_TARDIF_A=INR_CHR_TARDIF;
INR_PCAP_TARDIF_A=INR_PCAP_TARDIF;
INR_GAIN_TARDIF_A=INR_GAIN_TARDIF;
INR_RSE1_TARDIF_A=INR_RSE1_TARDIF;
INR_RSE2_TARDIF_A=INR_RSE2_TARDIF;
INR_RSE3_TARDIF_A=INR_RSE3_TARDIF;
INR_RSE4_TARDIF_A=INR_RSE4_TARDIF;
INCIR_NET_A=INCIR_NET;
INCCS_NET_A=INCCS_NET;
INCPS_NET_A=INCPS_NET;
INCCSAL_NET_A=INCCSAL_NET;
INCCDIS_NET_A=INCCDIS_NET;
INCRD_NET_A=INCRD_NET;
INCTAXA_NET_A=INCTAXA_NET;
INCCHR_NET_A=INCCHR_NET;
INCPCAP_NET_A=INCPCAP_NET;
INCGAIN_NET_A=INCGAIN_NET;
INCRSE1_NET_A=INCRSE1_NET;
INCRSE2_NET_A=INCRSE2_NET;
INCRSE3_NET_A=INCRSE3_NET;
INCRSE4_NET_A=INCRSE4_NET;

TXINR_A=TXINR;
TXINRRED_A=TXINRRED;
TXINRREDISF_A=TXINRREDISF;
TXINR_PA_A = TXINR_PA;
TXINRISF_PA_A = TXINRISF_PA;
TINR_A=TINR;
TXINRISF_A=TXINRISF;
RETXISF_A=RETXISF;
TINR_1_A=TINR_1;
NBREMOISCS2_A=NBREMOISCS2;
NBREMOISCS222_A=NBREMOISCS222;
NBREMOIS2_A=NBREMOIS2;
NBREMOIS222_A=NBREMOIS222;
NBREMOIS2ISF_A=NBREMOIS2ISF;
NBREMOIS222ISF_A=NBREMOIS222ISF;
INDACOINR_A=present(ACODELAISINR);
PISF_A=PISF;
ISFNET_A = ISFNET;
ISF4BASE_A = ISF4BASE;
ISF_R9901_A = ISF_R9901;
ISF_R99R_A = ISF_R99R+ISF_PA*null(1-IND_PASSAGE);
INRISF_R99R_A = INRISF_R99R+INRISF_R99RA;
INRISF_R9901_A = INRISF_R9901+INRISF_R9901A;
ISF_REF_A = max(ISF4BASE,ISF_P+ISF_PA)*positif(DO_INR_ISF2)
             + ISF_REF * (1-positif(INDFLAGCISF)) + ISF_R * positif(INDFLAGCISF);
ISF_PA_A = ISF_PA;
DO_INR_ISF_A = DO_INR_ISF+ DO_INR_ISFC;
DO_ISF_A = DO_ISF;
INRISF_NTL_A=INRISF_NTLDEC+INRISF_NTLADEC;
INRISF_RETDEF_A = INRISF_RETDEF;
INR_ISF_TARDIF_A=INR_ISF_TARDIF;
INCISF_NET_A=INCISF_NET;

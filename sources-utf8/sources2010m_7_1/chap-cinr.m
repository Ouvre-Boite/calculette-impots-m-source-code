#*************************************************************************************************************************
#
#Copyright or © or Copr.[DGFIP][2017]
#
#Ce logiciel a été initialement développé par la Direction Générale des 
#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2011 
#au titre des revenus perçus en 2010. La présente version a permis la 
#génération du moteur de calcul des chaînes de taxation des rôles d'impôt 
#sur le revenu de ce millésime.
#
#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français 
#et respectant les principes de diffusion des logiciels libres. Vous pouvez 
#utiliser, modifier et/ou redistribuer ce programme sous les conditions de 
#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur 
#le site "http://www.cecill.info".
#
#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris 
#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.
#
#**************************************************************************************************************************
regle corrective base_HR 1311:
application :  oceans, iliad ;
IRNIN_R99R = max(0,max(IRNIN_INR,IRNIN_PA-ACODELAISINR))*positif(IND_PASSAGE-1);
CSG_R99R = max(0,max(CSG*CSREC,CSG_PA))*positif(IND_PASSAGE-1);
RDS_R99R = max(0,max(RDSN*CSREC,CRDS_PA))*positif(IND_PASSAGE-1);
PRS_R99R = max(0,max(PRS*CSREC,PRS_PA))*positif(IND_PASSAGE-1);
CSAL_R99R = max(0,max(CSAL*CSREC,CSAL_PA))*positif(IND_PASSAGE-1);
CDIS_R99R = max(0,max(CDIS*CSREC,CDIS_PA))*positif(IND_PASSAGE-1);
TAXA_R99R = max(0,max(TAXABASE,TAXA_PA))*positif(IND_PASSAGE-1);
regle corrective base_inr_r9901 1313:
application :  oceans, iliad ;
IRNIN_R9901 = max(0,IRNIN_INR)*null(IND_PASSR9901-1)*(1-positif(FLAG_RETARD+FLAG_DEFAUT))
             + max(0,IRNIN_INR)*null(IND_PASSR9901-2)*positif(FLAG_RETARD+FLAG_DEFAUT)
             + IRNIN_R9901_A;
CSG_R9901 = max(0,max(CSG*CSREC,CSG_P))*null(IND_PASSR9901-1)*(1-positif(FLAG_RETARD+FLAG_DEFAUT))
             + max(0,max(CSG*CSREC,CSG_PA))*null(IND_PASSR9901-2)*positif(FLAG_RETARD+FLAG_DEFAUT)
             +CSG_R9901_A;
RDS_R9901 = max(0,max(RDSN*CSREC,RDS_P))*null(IND_PASSR9901-1)*(1-positif(FLAG_RETARD+FLAG_DEFAUT))
             + max(0,max(RDSN*CSREC,CRDS_PA))*null(IND_PASSR9901-2)*positif(FLAG_RETARD+FLAG_DEFAUT)
             +RDS_R9901_A;
PRS_R9901 = max(0,max(PRS*CSREC,PRS_P))*null(IND_PASSR9901-1)*(1-positif(FLAG_RETARD+FLAG_DEFAUT))
             + max(0,max(PRS*CSREC,PRS_PA))*null(IND_PASSR9901-2)*positif(FLAG_RETARD+FLAG_DEFAUT)
             +PRS_R9901_A;
CSAL_R9901 = max(0,max(CSALBASE*CSREC,CSAL_P))*null(IND_PASSR9901-1)*(1-positif(FLAG_RETARD+FLAG_DEFAUT))
             + max(0,max(CSALBASE*CSREC,CSAL_PA))*null(IND_PASSR9901-2)*positif(FLAG_RETARD+FLAG_DEFAUT)
             +CSAL_R9901_A;
CDIS_R9901 = max(0,max(CDISBASE*CSREC,CDIS_P))*null(IND_PASSR9901-1)*(1-positif(FLAG_RETARD+FLAG_DEFAUT))
             + max(0,max(CDISBASE*CSREC,CDIS_PA))*null(IND_PASSR9901-2)*positif(FLAG_RETARD+FLAG_DEFAUT)
             +CSAL_R9901_A;
TAXA_R9901 = max(0,max(TAXABASE,TAXA_P))*null(IND_PASSR9901-1)*(1-positif(FLAG_RETARD+FLAG_DEFAUT))
             + max(0,max(TAXABASE,TAXA_PA))*null(IND_PASSR9901-2)*positif(FLAG_RETARD+FLAG_DEFAUT)
             +TAXA_R9901_A;
regle corrective base_inr_pri 1312:
application :  oceans, iliad ;
IRNIN_PRECT = max(0,IRNIN_INR);
CSG_PRECT = max(0,CSG*CSREC);
RDS_PRECT = max(0,RDSN*CSREC);
PRS_PRECT = max(0,PRS*CSREC);
CSAL_PRECT = max(0,CSALBASE*CSREC);
CDIS_PRECT = max(0,CDISBASE*CSREC);
TAXA_PRECT = max(0,TAXABASE);
regle corrective base_inr_ref 1300:
application :  oceans, iliad ;
IRNIN_REFP = max(0,max(IRNIN_INR,(IRNIN_P*(1-FLAG_PRIM*FLAG_9YT)+(IRNIN_PA-ACODELAISINR))));
CSG_REFP = max(0,max(CSG*CSRECINR,(CSG_P*CSREC_P*(1-FLAG_PRIM*FLAG_9YT)+CSG_PA)));
RDS_REFP = max(0,max(RDSN*CSRECINR,(RDS_P*CSREC_P*(1-FLAG_PRIM*FLAG_9YT)+CRDS_PA)));
PRS_REFP = max(0,max(PRS*CSRECINR,(PRS_P*CSREC_P*(1-FLAG_PRIM*FLAG_9YT)+PRS_PA)));
CSAL_REFP = max(0,max(CSALBASE*CSRECINR,(CSAL_P*CSREC_P*(1-FLAG_PRIM*FLAG_9YT)+CSAL_PA)));
CDIS_REFP = max(0,max(CDISBASE*CSRECINR,(CDIS_P*CSREC_P*(1-FLAG_PRIM*FLAG_9YT)+CDIS_PA)));
TAXA_REFP = max(0,max(TAXABASE,TAXA_P*(1-FLAG_PRIM*FLAG_9YT)+TAXA_PA));
IRNIN_REF= max(IRNIN_REFP,max(IRNIN_REF_A-ACODELAISINR,IRNIN_INR_A-ACODELAISINR));
CSG_REF= max(CSG_REFP,max(CSG_REF_A*CSRECA,CSG_A*CSRECA));
RDS_REF= max(RDS_REFP,max(RDS_REF_A*CSRECA,RDS_A*CSRECA));
PRS_REF= max(PRS_REFP,max(PRS_REF_A*CSRECA,PRS_A*CSRECA));
CSAL_REF= max(CSAL_REFP,max(CSAL_REF_A*CSRECA,CSAL_A*CSRECA));
CDIS_REF= max(CDIS_REFP,max(CDIS_REF_A*CSRECA,CDIS_A*CSRECA));
TAXA_REF= max(TAXA_REFP,max(TAXA_REF_A,TAXABASE_A));
IRNIN_RECT=IRNIN_INR;
IRNIN_R = IRNIN_REF_A;
INDFLAGCIR = positif(FLAG_C02+FLAG_C22) * positif(IRNIN_REF_A);
INDFLAGCCSG = positif(FLAG_C02+FLAG_C22) * positif(CSG_REF_A);
RDS_R = RDS_REF_A;
INDFLAGCRDS = positif(FLAG_C02+FLAG_C22) * positif(RDS_REF_A);
PRS_R = PRS_REF_A;
INDFLAGCPRS = positif(FLAG_C02+FLAG_C22) * positif(PRS_REF_A);
CSAL_R = CSAL_REF_A;
INDFLAGCCSAL = positif(FLAG_C02+FLAG_C22) * positif(CSAL_REF_A);
CDIS_R = CDIS_REF_A;
INDFLAGCCDIS = positif(FLAG_C02+FLAG_C22) * positif(CDIS_REF_A);
TAXA_R = TAXA_REF_A;
INDFLAGCTAXA = positif(FLAG_C02+FLAG_C22) * positif(TAXA_REF_A);
regle corrective base_inr_ntl 1301:
application :  oceans, iliad ;
IRNIN_NTLDEC = IRNIN_INR;
INRIR_NTLDEC = INRIR_NTL+INR_IR_TARDIF * null(1-IND_PASSAGE);
INRIR_NTLADEC = INRIR_NTL_A;
INR_IR_NTL=max(0,INRIR_NTL+INR_IR_TARDIF * null(1-IND_PASSAGE));
CSG_NTLDEC = CSBASE;
INRCSG_NTLDEC = INRCSG_NTL+INR_CSG_TARDIF * null(1-IND_PASSAGE);
INRCSG_NTLADEC = INRCSG_NTL_A;
INR_CSG_NTL=INRCSG_NTL+INR_CSG_TARDIF * null(1-IND_PASSAGE);
PRS_NTLDEC = PSBASE;
INRPRS_NTLDEC = INRPRS_NTL+INR_PS_TARDIF * null(1-IND_PASSAGE);
INRPS_NTLADEC = INRPRS_NTL_A;
INR_PS_NTL=INRPRS_NTL+INR_PS_TARDIF * null(1-IND_PASSAGE);
CRDS_NTLDEC = RDBASE;
INRCRDS_NTLDEC = INRCRDS_NTL+INR_CRDS_TARDIF * null(1-IND_PASSAGE);
INRCRDS_NTLADEC = INRCRDS_NTL_A;
INR_CRDS_NTL=INRCRDS_NTL+INR_CRDS_TARDIF * null(1-IND_PASSAGE);
CSAL_NTLDEC = CSALBASE;
INRCSAL_NTLDEC = INRCSAL_NTL+INR_CSAL_TARDIF * null(1-IND_PASSAGE);
INRCSAL_NTLADEC = INRCSAL_NTL_A;
INR_CSAL_NTL=INRCSAL_NTL+INR_CSAL_TARDIF * null(1-IND_PASSAGE);
CDIS_NTLDEC = CDISBASE;
INRCDIS_NTLDEC = INRCDIS_NTL+INR_CDIS_TARDIF * null(1-IND_PASSAGE);
INRCDIS_NTLADEC = INRCDIS_NTL_A;
INR_CDIS_NTL=INRCDIS_NTL+INR_CDIS_TARDIF * null(1-IND_PASSAGE);
TAXA_NTLDEC = TAXABASE;
INRTAXA_NTLDEC = INRTAXA_NTL+INR_TAXAGA_TARDIF * null(1-IND_PASSAGE);
INRTAXA_NTLADEC = INRTAXA_NTL_A;
INR_TAXAGA_NTL=INRTAXA_NTL+INR_TAXAGA_TARDIF * null(1-IND_PASSAGE);

regle corrective base_inr_ntl22 13011:
application :  oceans, iliad ;
IRNIN_NTLDEC_1 = IRNIN_INR;
INRIR_NTLDEC_1 = INRIR_NTL_1;
INRIR_NTLADEC_1 = INRIR_NTL_1_A;
INR_IR_NTL_1=INRIR_NTL_1;
CSG_NTLDEC_1 = CSBASE;
INRCSG_NTLDEC_1 = INRCSG_NTL_1;
INRCSG_NTLADEC_1 = INRCSG_NTL_1_A;
INR_CSG_NTL_1=INRCSG_NTL_1;
PRS_NTLDEC_1 = PSBASE;
INRPRS_NTLDEC_1 = INRPRS_NTL_1;
INRPS_NTLADEC_1 = INRPRS_NTL_1_A;
INR_PS_NTL_1=INRPRS_NTL_1;
CRDS_NTLDEC_1 = RDBASE;
INRCRDS_NTLDEC_1 = INRCRDS_NTL_1;
INRCRDS_NTLADEC_1 = INRCRDS_NTL_1_A;
INR_CRDS_NTL_1=INRCRDS_NTL_1;
CSAL_NTLDEC_1 = CSALBASE;
INRCSAL_NTLDEC_1 = INRCSAL_NTL_1;
INRCSAL_NTLADEC_1 = INRCSAL_NTL_1_A;
INR_CSAL_NTL_1=INRCSAL_NTL_1;
CDIS_NTLDEC_1 = CDISBASE;
INRCDIS_NTLDEC_1 = INRCDIS_NTL_1;
INRCDIS_NTLADEC_1 = INRCDIS_NTL_1_A;
INR_CDIS_NTL_1=INRCDIS_NTL_1;
TAXA_NTLDEC_1 = TAXABASE;
INRTAXA_NTLDEC_1 = INRTAXA_NTL_1;
INRTAXA_NTLADEC_1 = INRTAXA_NTL_1_A;
INR_TAXAGA_NTL_1=INRTAXA_NTL_1;
regle corrective base_inr_tl 1302:
application :  oceans, iliad ;
IRNIN_TLDEC=IRNIN_INR;
INRIR_TLADEC = INRIR_TLACQ;
INRIR_TL_AD=INRIR_TL_A;
INRIR_TLDEC = INRIR_TLA+INRIR_RETDEF*null(INRIR_RETDEF_A);
INR_IR_TL=INRIR_TLACQ* (1-IND_RJLJ);
CSG_TLDEC=CSG;
INRCSG_TLADEC = INRCSG_TLACQ;
INRCSG_TL_AD = INRCSG_TL_A;
INRCSG_TLDEC = INRCSG_TLA + INRCSG_RETDEF * null(INRCSG_RETDEF_A);
INR_CSG_TL=INRCSG_TLACQ* (1-IND_RJLJ);
PRS_TLDEC=PRS;
INRPRS_TLADEC = INRPRS_TLACQ;
INRPRS_TL_AD = INRPRS_TL_A;
INRPRS_TLDEC = INRPRS_TLA + INRPRS_RETDEF * null(INRPRS_RETDEF_A);
INR_PS_TL=INRPRS_TLACQ* (1-IND_RJLJ);
RDS_TLDEC=RDSN;
INRCRDS_TLADEC = INRCRDS_TLACQ;
INRCRDS_TL_AD = INRCRDS_TL_A;
INRCRDS_TLDEC = INRCRDS_TLA + INRCRDS_RETDEF * null(INRCRDS_RETDEF_A);
INR_CRDS_TL=INRCRDS_TLACQ* (1-IND_RJLJ);
CSAL_TLDEC=CSALBASE;
INRCSAL_TLADEC = INRCSAL_TLACQ;
INRCSAL_TL_AD = INRCSAL_TL_A;
INRCSAL_TLDEC = INRCSAL_TLA + INRCSAL_RETDEF * null(INRCSAL_RETDEF_A);
INR_CSAL_TL=INRCSAL_TLACQ* (1-IND_RJLJ);
CDIS_TLDEC=CDISBASE;
INRCDIS_TLADEC = INRCDIS_TLACQ;
INRCDIS_TL_AD = INRCDIS_TL_A;
INRCDIS_TLDEC = INRCDIS_TLA + INRCDIS_RETDEF * null(INRCDIS_RETDEF_A);
INR_CDIS_TL=INRCDIS_TLACQ* (1-IND_RJLJ);
TAXA_TLDEC=TAXABASE;
INRTAXA_TLADEC = INRTAXA_TLACQ;
INRTAXA_TL_AD = INRTAXA_TL_A;
INRTAXA_TLDEC = INRTAXA_TLA + INRTAXA_RETDEF * null(INRTAXA_RETDEF_A);
INR_TAXAGA_TL=INRTAXA_TLACQ * (1-IND_RJLJ);
regle corrective base_inr_tl22 13022:
application :  oceans, iliad ;
INRIR_TLADEC_12 = INRIR_TLADEC_1;
INR_IR_TL_1=INRIR_TLACQ_1* (1-IND_RJLJ);
INRCSG_TLADEC_12 = INRCSG_TLADEC_1;
INR_CSG_TL_1=INRCSG_TLACQ_1* (1-IND_RJLJ);
INRPRS_TLADEC_12 = INRPRS_TLADEC_1;
INR_PS_TL_1=INRPRS_TLACQ_1* (1-IND_RJLJ);
INRCRDS_TLADEC_12 = INRCRDS_TLADEC_1;
INR_CRDS_TL_1=INRCRDS_TLACQ_1* (1-IND_RJLJ);
INRCSAL_TLADEC_12 = INRCSAL_TLADEC_1;
INR_CSAL_TL_1=INRCSAL_TLACQ_1* (1-IND_RJLJ);
INRCDIS_TLADEC_12 = INRCDIS_TLADEC_1;
INR_CDIS_TL_1=INRCDIS_TLACQ_1* (1-IND_RJLJ);
INRTAXA_TLADEC_12 = INRTAXA_TLADEC_1;
INR_TAXAGA_TL_1=INRTAXA_TLACQ_1 * (1-IND_RJLJ);
RETIR2 = INCIR_NET2;
RETPS2 = INCPS_NET2;
RETCS2 = INCCS_NET2;
RETCSAL2 = INCCSAL_NET2;
RETCDIS2 = INCCDIS_NET2;
RETRD2 = INCRD_NET2;
RETTAXA2 = INCTAXA_NET2;
RETIR22 = (INRIR_NTLDEC_1+INRIR_TLDEC_1+ INRIR_NTL_1_A+INRIR_TL_1_A) * positif(RETIR2);
RETCS22 = (INRCSG_NTLDEC_1+INRCSG_TLDEC_1+ INRCSG_NTL_1_A+INRCSG_TL_1_A) * positif(RETCS2);
RETRD22 = (INRCRDS_NTLDEC_1+INRCRDS_TLDEC_1+ INRCRDS_NTL_1_A+INRCRDS_TL_1_A) * positif(RETRD2);
RETPS22 = (INRPRS_NTLDEC_1+INRPRS_TLDEC_1+ INRPRS_NTL_1_A+INRPRS_TL_1_A) * positif(RETPS2);
RETCSAL22 = (INRCSAL_NTLDEC_1+INRCSAL_TLDEC_1+ INRCSAL_NTL_1_A+INRCSAL_TL_1_A) * positif(RETCSAL2);
RETCDIS22 = (INRCDIS_NTLDEC_1+INRCDIS_TLDEC_1+ INRCDIS_NTL_1_A+INRCDIS_TL_1_A) * positif(RETCDIS2);
RETTAXA22 = (INRTAXA_NTLDEC_1+INRTAXA_TLDEC_1+ INRTAXA_NTL_1_A+INRTAXA_TL_1_A) * positif(RETTAXA2);
INR_NTL_GLOB_IR = INR_NTL_GLOB_IR2;
INR_TL_GLOB_IR = INR_TL_GLOB_IR2;
INR_TOT_GLOB_IR = INR_TOT_GLOB_IR2;
DO_INR_IR = DO_INR_IR2;
DO_IR = DO_IR2;
SUP_IR_MAX = SUP_IR_MAX2;
INCIR_TL = INCIR_TL2;
INCIR_TL_1 = INCIR_TL_12;
INRIR_NET = INRIR_NET2;
INRIR_NET_1 = INRIR_NET_12;
INIR_TL = INIR_TL2;
INIR_TL_1 = INIR_TL_12;
INCIR_NET = INCIR_NET2;
IR_PRI= IR_PRI2;
IR_ANT= IR_ANT2;
IR_NTL= IR_NTL2;
IR_TL=IR_TL2;
IR_NTL_1=IR_NTL_12;
IR_TL_1=IR_TL_12;
IR_REF_INR=IRNIN_REF;
INR_NTL_GLOB_CSG = INR_NTL_GLOB_CSG2;
INR_TL_GLOB_CSG = INR_TL_GLOB_CSG2;
INR_TOT_GLOB_CSG = INR_TOT_GLOB_CSG2;
DO_INR_CSG = DO_INR_CSG2;
DO_CSG = DO_CSG2;
SUP_CSG_MAX = SUP_CSG_MAX2;
INRCSG_NET = INRCSG_NET2;
INRCSG_NET_1 = INRCSG_NET_12;
INCCS_NET = INCCS_NET2;
INCS_TL = INCS_TL2;
INCS_TL_1 = INCS_TL_12;
INCCS_TL = INCCS_TL2;
INCCS_TL_1 = INCCS_TL_12;
CSG_PRI=CSG_PRI2;
CSG_ANT=CSG_ANT2;
CSG_NTL=CSG_NTL2;
CSG_NTL_1=CSG_NTL_12;
CSG_TL=CSG_TL2;
CSG_TL_1=CSG_TL_12;
CSG_REF_INR=CSG_REF;
INR_NTL_GLOB_CRDS = INR_NTL_GLOB_CRDS2;
INR_TL_GLOB_CRDS = INR_TL_GLOB_CRDS2;
INR_TOT_GLOB_CRDS = INR_TOT_GLOB_CRDS2;
DO_INR_CRDS = DO_INR_CRDS2;
DO_CRDS = DO_CRDS2;
SUP_CRDS_MAX = SUP_CRDS_MAX2;
INCRD_TL = INCRD_TL2;
INCRD_TL_1 = INCRD_TL_12;
INRRDS_NET = INRRDS_NET2;
INRRDS_NET_1 = INRRDS_NET_12;
INRD_TL = INRD_TL2;
INRD_TL_1 = INRD_TL_12;
INCRD_NET = INCRD_NET2;
CRDS_PRI=CRDS_PRI2;
CRDS_ANT=CRDS_ANT2;
CRDS_NTL=CRDS_NTL2;
CRDS_NTL_1=CRDS_NTL_12;
CRDS_TL=CRDS_TL2;
CRDS_TL_1=CRDS_TL_12;
CRDS_REF_INR=RDS_REF;
INR_NTL_GLOB_PS = INR_NTL_GLOB_PS2;
INR_TL_GLOB_PS = INR_TL_GLOB_PS2;
INR_TOT_GLOB_PS = INR_TOT_GLOB_PS2;
DO_INR_PS = DO_INR_PS2;
DO_PS = DO_PS2;
SUP_PS_MAX = SUP_PS_MAX2;
INCPS_TL = INCPS_TL2;
INCPS_TL_1 = INCPS_TL_12;
INRPRS_NET = INRPRS_NET2; 
INRPRS_NET_1 = INRPRS_NET_12; 
INPS_TL = INPS_TL2;
INPS_TL_1 = INPS_TL_12;
INCPS_NET = INCPS_NET2;
PS_PRI= PS_PRI2;
PS_ANT=PS_ANT2;
PS_NTL=PS_NTL2;
PS_NTL_1=PS_NTL_12;
PS_TL=PS_TL2;
PS_TL_1=PS_TL_12;
PS_REF_INR=PRS_REF;
INR_NTL_GLOB_CSAL = INR_NTL_GLOB_CSAL2;
INR_TL_GLOB_CSAL = INR_TL_GLOB_CSAL2;
INR_TOT_GLOB_CSAL = INR_TOT_GLOB_CSAL2;
DO_INR_CSAL = DO_INR_CSAL2;
DO_CSAL = DO_CSAL2;
SUP_CSAL_MAX = SUP_CSAL_MAX2;
INCCSAL_TL = INCCSAL_TL2;
INCCSAL_TL_1 = INCCSAL_TL_12;
INRCSAL_NET = INRCSAL_NET2; 
INRCSAL_NET_1 = INRCSAL_NET_12; 
INCSAL_TL = INCSAL_TL2;
INCSAL_TL_1 = INCSAL_TL_12;
INCCSAL_NET = INCCSAL_NET2;
CSAL_PRI= CSAL_PRI2;
CSAL_ANT=CSAL_ANT2;
CSAL_NTL=CSAL_NTL2;
CSAL_NTL_1=CSAL_NTL_12;
CSAL_TL=CSAL_TL2;
CSAL_TL_1=CSAL_TL_12;
CSAL_REF_INR=CSAL_REF;
INR_NTL_GLOB_CDIS = INR_NTL_GLOB_CDIS2;
INR_TL_GLOB_CDIS = INR_TL_GLOB_CDIS2;
INR_TOT_GLOB_CDIS = INR_TOT_GLOB_CDIS2;
DO_INR_CDIS = DO_INR_CDIS2;
DO_CDIS = DO_CDIS2;
SUP_CDIS_MAX = SUP_CDIS_MAX2;
INCCDIS_TL = INCCDIS_TL2;
INCCDIS_TL_1 = INCCDIS_TL_12;
INRCDIS_NET = INRCDIS_NET2; 
INRCDIS_NET_1 = INRCDIS_NET_12; 
INCDIS_TL = INCDIS_TL2;
INCDIS_TL_1 = INCDIS_TL_12;
INCCDIS_NET = INCCDIS_NET2;
CDIS_PRI= CDIS_PRI2;
CDIS_ANT=CDIS_ANT2;
CDIS_NTL=CDIS_NTL2;
CDIS_NTL_1=CDIS_NTL_12;
CDIS_TL=CDIS_TL2;
CDIS_TL_1=CDIS_TL_12;
CDIS_REF_INR=CDIS_REF;
INR_NTL_GLOB_TAXA = INR_NTL_GLOB_TAXA2;
INR_TL_GLOB_TAXA = INR_TL_GLOB_TAXA2;
INR_TOT_GLOB_TAXA = INR_TOT_GLOB_TAXA2;
DO_INR_TAXAGA = DO_INR_TAXA2;
DO_TAXA = DO_TAXA2;
SUP_TAXA_MAX = SUP_TAXA_MAX2;
INCTAXA_TL = INCTAXA_TL2;
INCTAXA_TL_1 = INCTAXA_TL_12;
INTAXA_TL = INTAXA_TL2;
INTAXA_TL_1 = INTAXA_TL_12;
INRTAXA_NET = INRTAXA_NET2;
INRTAXA_NET_1 = INRTAXA_NET_12;
INCTAXA_NET = INCTAXA_NET2;
TAXAGA_PRI=TAXAGA_PRI2;
TAXAGA_ANT=TAXAGA_ANT2;
TAXAGA_NTL=TAXAGA_NTL2;
TAXAGA_NTL_1=TAXAGA_NTL_12;
TAXAGA_TL=TAXAGA_TL2;
TAXAGA_TL_1=TAXAGA_TL_12;
TAXA_REF_INR=TAXA_REF;
TINR = TINR2;
TINR_1=TINR_12;
NBREMOIS2=NBREMOIS222;
NBREMOISCS2=NBREMOISCS222;
DO_INR_IR_TL = arr(INRIR_TL_A * DO_INR_IR/(INR_TOT_GLOB_IR-INR_IR_TARDIF));
DO_INR_IR_NTL = arr(INRIR_NTL_A * DO_INR_IR/(INR_TOT_GLOB_IR-INR_IR_TARDIF));
DO_INR_CSG_TL = arr(INRCSG_TL_A * DO_INR_CSG/(INR_TOT_GLOB_CSG-INR_CSG_TARDIF));
DO_INR_CSG_NTL = arr(INRCSG_NTL_A * DO_INR_CSG/(INR_TOT_GLOB_CSG-INR_CSG_TARDIF));
DO_INR_CRDS_TL = arr(INRCRDS_TL_A * DO_INR_CRDS/(INR_TOT_GLOB_CRDS-INR_CRDS_TARDIF));
DO_INR_CRDS_NTL = arr(INRCRDS_NTL_A * DO_INR_CRDS/(INR_TOT_GLOB_CRDS-INR_CRDS_TARDIF));
DO_INR_PS_TL = arr(INRPRS_TL_A * DO_INR_PS/(INR_TOT_GLOB_PS-INR_PS_TARDIF));
DO_INR_PS_NTL = arr(INRPRS_NTL_A * DO_INR_PS/(INR_TOT_GLOB_PS-INR_PS_TARDIF));
DO_INR_CSAL_TL = arr(INRCSAL_TL_A * DO_INR_CSAL/(INR_TOT_GLOB_CSAL-INR_CSAL_TARDIF));
DO_INR_CSAL_NTL = arr(INRCSAL_NTL_A * DO_INR_CSAL/(INR_TOT_GLOB_CSAL-INR_CSAL_TARDIF));
DO_INR_CDIS_TL = arr(INRCDIS_TL_A * DO_INR_CDIS/(INR_TOT_GLOB_CDIS-INR_CDIS_TARDIF));
DO_INR_CDIS_NTL = arr(INRCDIS_NTL_A * DO_INR_CDIS/(INR_TOT_GLOB_CDIS-INR_CDIS_TARDIF));
DO_INR_TAXA_TL = arr(INRTAXA_TL_A * DO_INR_TAXAGA/(INR_TOT_GLOB_TAXA-INR_TAXAGA_TARDIF));
DO_INR_TAXA_NTL = arr(INRTAXA_NTL_A * DO_INR_TAXAGA/(INR_TOT_GLOB_TAXA-INR_TAXAGA_TARDIF));

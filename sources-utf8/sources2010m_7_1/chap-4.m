#*************************************************************************************************************************
#
#Copyright or © or Copr.[DGFIP][2017]
#
#Ce logiciel a été initialement développé par la Direction Générale des 
#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2011 
#au titre des revenus perçus en 2010. La présente version a permis la 
#génération du moteur de calcul des chaînes de taxation des rôles d'impôt 
#sur le revenu de ce millésime.
#
#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français 
#et respectant les principes de diffusion des logiciels libres. Vous pouvez 
#utiliser, modifier et/ou redistribuer ce programme sous les conditions de 
#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur 
#le site "http://www.cecill.info".
#
#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris 
#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.
#
#**************************************************************************************************************************

 #
                                                                
  ####   #    #    ##    #####      #     #####  #####   ######      #    
 #    #  #    #   #  #   #    #     #       #    #    #  #           #    #
 #       ######  #    #  #    #     #       #    #    #  #####       #    #
 #       #    #  ######  #####      #       #    #####   #           ######
 #    #  #    #  #    #  #          #       #    #   #   #                #
  ####   #    #  #    #  #          #       #    #    #  ######           #
 #
 #
 #
 #
 #
 #
 #                      CALCUL DE L'IMPOT BRUT
 #
 #
 #
 #
 #
 #
 #
regle 401:
application : pro , oceans , bareme, iliad , batch  ;
IRB = IAMD2; 
IRB2 = IAMD2 + TAXASSUR;
regle 40101:
application : pro , oceans , iliad , batch  ;
KIR =   IAMD3 ;
regle 4011:
application : pro , oceans , bareme , iliad , batch  ;
IAMD1 = IBM13 ;
IAMD2 = IBM23 ;
IAMD2TH = positif_ou_nul(IBM23 - SEUIL_PERCEP)*IBM23;
regle 40110:
application : pro , oceans , bareme , iliad , batch  ;
IAMD3 = IBM33 - min(ACP3, IMPIM3);
regle 402112:
application : pro , oceans , iliad , batch  ;
ANG3 = IAD32 - IAD31;
regle 40220:
application : pro , oceans , iliad , batch  ;
ACP3 = max (0 ,
 somme (a=1..4: min(arr(CHENFa * TX_DPAEAV/100) , SEUIL_AVMAXETU)) - ANG3)
        * (1 - positif(V_CR2 + IPVLOC)) * positif(ANG3) * positif(IMPIM3);
regle 403:
application : pro , oceans , bareme ,iliad , batch  ;
IBM13 = IAD11 + ITP + REI + TAXASSUR + AVFISCOPTER ;
IBM23 = IAD11 + ITP + REI + AVFISCOPTER ;
regle 404:
application : pro , oceans , bareme , iliad , batch  ;
IBM33 = IAD31 + ITP + REI;
regle 4041:
application : pro , oceans , iliad , batch  ;
TX_RED0 =  inf ( (100 - ((TX_RABGUY * V_EAG) + (TX_RABDOM * V_EAD))
	     ) * TXGAIN0  / 100 * positif(V_EAD + V_EAG)
	   );
TX_RED1 =  inf ( (100 - ((TX_RABGUY * V_EAG) + (TX_RABDOM * V_EAD))
	     ) * TXGAIN1 / 100 * positif(V_EAD + V_EAG)
	   );
DOMAVTO = arr(BN1 + SPEPV + BI12F + BA1) * ((TXGAIN0 - TX_RED0)/100) * positif(V_EAD)
          + arr(BN1 + SPEPV + BI12F + BA1) * ((TXGAIN0 - TX_RED0)/100) * positif(V_EAG);
DOMABDB = max(PLAF_RABDOM - ABADO , 0) * positif(V_EAD)
          + max(PLAF_RABGUY - ABAGU , 0) * positif(V_EAG);
DOMDOM = max(DOMAVTO - DOMABDB , 0) * positif(V_EAD + V_EAG);

ITP = arr((BTP2 * TXGAIN2/100) + (BPTP4 * TXGAIN3/100) 
       + ((BN1 + SPEPV + BI12F + BA1) * positif(V_EAG+V_EAD) * TX_RED0/100) 
       + (BPVCESDOM * positif(V_EAG+V_EAD) * TX_RED1/100) 
       + (BTP40 * TXGAIN4/100)
       + DOMDOM * positif(V_EAD + V_EAG)
       + (BPV18 * TXGAIN1/100)
       + (BTP3G * TXGAIN1/100)
       + (BTP3N * TXGAIN1/100)
       + ((BN1 + SPEPV + BI12F + BA1) * (1-positif(V_EAG + V_EAD)) * TXGAIN0/100) 
       + (BPVCESDOM * (1-positif(V_EAG + V_EAD)) * TXGAIN1/100))
       * (1-positif(IPVLOC)); 

regle 40413:
application : pro , oceans , iliad , batch  ;
BTP3A = (BN1 + SPEPV + BI12F + BA1) * (1 - positif( IPVLOC )); 
BTP3N = (BPVKRI) * (1 - positif( IPVLOC )); 
BTP3G = (BPVRCM) * (1 - positif( IPVLOC )); 
BTP2 = PEA * (1 - positif( IPVLOC )); 
BTP40 = BPV40 * (1 - positif( IPVLOC )); 
BTP18 = BPV18 * (1 - positif( IPVLOC )); 

REVTP1 = max(0,BPVRCM + ABDETPLUS + ABIMPPV - DPVRCM - ABDETMOINS - ABIMPMV) + BPVCESDOM + BPV18 + BPV40 + BPCOPT + BPVKRI + PEA + PVSOCG ;

regle 4042:
application : pro , oceans , iliad , batch  ;


REI = IPREP+IPPRICORSE;

regle 40421:
application : pro , oceans , iliad , batch  ;


RPPEACOMENS = positif(ACPTMENSPPE) * ACPTMENSPPE ;

PPERSATOT = RSAFOYER + RSAPAC1 + RSAPAC2 ;

PPERSA = min(PPETOT,PPERSATOT) * (1 - V_CNR) ;

PPEFINAL = PPETOT - PPERSA ;

RPPEACO = RPPEACOMENS * (1-V_ANC_BAR)
		* (1 - V_CNR);

regle 405:
application : pro , oceans , bareme , iliad , batch  ;


IAD11 = ( max(0,IDOM11-DEC11-RED) *(1-positif(V_CR2+IPVLOC))
        + positif(V_CR2+IPVLOC) *max(0 , IDOM11 - RED) )
                                * (1-positif(RE168+TAX1649))
        + positif(RE168+TAX1649) * IDOM16;

regle 406:
application : pro , oceans , bareme , iliad , batch  ;
IAD31 = ((IDOM31-DEC31)*(1-positif(V_CR2+IPVLOC)))
        +(positif(V_CR2+IPVLOC)*IDOM31);
IAD32 = ((IDOM32-DEC32)*(1-positif(V_CR2+IPVLOC)))
        +(positif(V_CR2+IPVLOC)*IDOM32);

regle 4052:
application : pro , oceans , bareme , iliad , batch  ;

IMPIM3 =  IAD31 ;

regle 4061:
application : pro , oceans , bareme , iliad , batch  ;
pour z = 1,2:
DEC1z = min (max( arr(SEUIL_DECOTE/2 - (IDOM1z/2)),0),IDOM1z) * (1 - V_CNR);

pour z = 1,2:
DEC3z = min (max( arr(SEUIL_DECOTE/2 - (IDOM3z/2)),0),IDOM3z) * (1 - V_CNR);

DEC6 = min (max( arr(SEUIL_DECOTE/2 - (IDOM16/2)),0),IDOM16) * (1 - V_CNR);
regle 407:
application : pro ,   oceans , iliad   , batch ;

RED =  RSURV + RCOMP + RHEBE + RREPA + RDIFAGRI + RDONS
       + RCELDO + RCELDOP + RCELREPDOP9
       + RCELMET + RCELNP + RCELREPNP9 + RCELRRED09
       + RSYND + RRESTIMO + RPECHE 
       + RFIPC + RAIDE + RNOUV 
       + RTOURNEUF + RTOURTRA + RTOURREP + RTOURHOT
       + RTOUREPA + RTOURES + RTOUHOTR  
       + RLOGDOM + RMEUBLE + RREDMEUB 
       + RLOGSOC + RDOMSOC1 + RLOCENT + RCOLENT
       + RRETU + RINNO + RRPRESCOMP + RFOR 
       + RSOUFIP + RRIRENOV + RSOCREPR + RRESINEUV + RRESIVIEU
       + RIDOMPROE1 + RIDOMPROE2 + RIDOMPROE3 + RIDOMPROE4 + RIDOMPROE5
       + RPATNAT
       + RFORET + RTITPRISE + RCREAT + RCINE 
       - (V_INDTEO) * (RLOG4 + RLOG5 + RLOG6);	
regle 4070:
application : bareme ;
RED = V_9UY;
regle 4025:
application : pro ,   oceans , iliad , batch  ;

 

PLAFDOMPRO1 = max(0,IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR
			  -RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
			  -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9
			  -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT
			  );
RIDOMPROE5 =  min(REPINVDOMPRO1,PLAFDOMPRO1) * (1 - V_CNR);

REPDOMENTR5 = positif (REPINVDOMPRO1- PLAFDOMPRO1)* (REPINVDOMPRO1 - PLAFDOMPRO1)* (1 -V_CNR);


PLAFDOMPRO2 = positif(PLAFDOMPRO1 - REPINVDOMPRO1)* (PLAFDOMPRO1 - REPINVDOMPRO1)* (1 -V_CNR); 
RIDOMPROE4 = min(REPINVDOMPRO2,PLAFDOMPRO2) * (1 - V_CNR);
REPDOMENTR4 = positif (REPINVDOMPRO2 - PLAFDOMPRO2)* (REPINVDOMPRO2 - PLAFDOMPRO2)* (1 -V_CNR);


PLAFDOMPRO3 = positif(PLAFDOMPRO2 - REPINVDOMPRO2)* (PLAFDOMPRO2 - REPINVDOMPRO2)* (1 -V_CNR); 
RIDOMPROE3 = min(REPINVDOMPRO3,PLAFDOMPRO3) * (1 - V_CNR);
REPDOMENTR3 = positif (REPINVDOMPRO3 - PLAFDOMPRO3)* (REPINVDOMPRO3 - PLAFDOMPRO3)* (1 -V_CNR);


PLAFDOMPRO4 = positif(PLAFDOMPRO3 - REPINVDOMPRO3)* (PLAFDOMPRO3 - REPINVDOMPRO3)* (1 -V_CNR); 
RIDOMPROE2 = min(REPINVDOMPRO4,PLAFDOMPRO4) * (1 - V_CNR);
REPDOMENTR2 = positif (REPINVDOMPRO4 - PLAFDOMPRO4)* (REPINVDOMPRO4 - PLAFDOMPRO4)* (1 -V_CNR);

PLAFDOMPRO5 = positif(PLAFDOMPRO4 - REPINVDOMPRO4)* (PLAFDOMPRO4 - REPINVDOMPRO4)* (1 -V_CNR); 

RIDOMPROTOT = RIDOMPROE1 + RIDOMPROE2 + RIDOMPROE3 + RIDOMPROE4 + RIDOMPROE5;

RINVEST = RIDOMPROE1 + RIDOMPROE2 + RIDOMPROE3  + RIDOMPROE4 + RIDOMPROE5 ;
RIDOMPRO = REPINVDOMPRO1 + REPINVDOMPRO2 + REPINVDOMPRO3 + REPINVDOMPRO4 ;

DIDOMPRO = RIDOMPRO * (1 - V_CNR) ;
regle 40742:
application : pro ,   oceans , iliad , batch  ;
BTANTGECUM = (V_BTGECUM * (1 - present(DEPMOBIL)) + DEPMOBIL);




P2GE = max( (   PLAF_GE2 * (1 + BOOL_0AM)

             + PLAF_GE2_PACQAR * (V_0CH + V_0DP)

             + PLAF_GE2_PAC * (V_0CR + V_0CF + V_0DJ + V_0DN)  

            ) - BTANTGECUM

             , 0

          ) ;

BGEDECL = RDTECH + RDEQPAHA + RDGEQ ;
BGERET = min(RDTECH + RDEQPAHA + RDGEQ , P2GE) * (1 - V_CNR);

BGTECH = min(RDTECH , P2GE) * (1 - V_CNR) ;
BGEPAHA = min(RDEQPAHA , max(P2GE - BGTECH,0)) * (1 - V_CNR) ;
BGEAUTRE = min(RDGEQ , max(P2GE - BGTECH - BGEPAHA,0)) * (1 - V_CNR) ;

TOTBGE = BGTECH + BGEPAHA + BGEAUTRE ;

RGTECH = (BGTECH * TX_RGTECH / 100 ) * (1 - V_CNR) ;
RGEPAHA =  (BGEPAHA * TX_RGEPAHA / 100 ) * (1 - V_CNR) ;
RGEAUTRE = (BGEAUTRE * TX_RGEAUTRE / 100 ) * (1 - V_CNR) ;

CIGE = arr (RGTECH + RGEPAHA + RGEAUTRE) * (1 - V_CNR) ;


GECUM = BGTECH + BGEPAHA + BGEAUTRE + BTANTGECUM ;
regle 40743:
application : pro, oceans, iliad, batch ; 
DLOYIMP = LOYIMP ;

ALOYIMP = DLOYIMP;

CILOYIMP = arr(ALOYIMP*TX_LOYIMP/100);

regle 40744:
application : pro, oceans, iliad, batch ; 
DDEVDUR = CRENRJRNOUV + CRECHOBOI + CRECHOCON2 + CRECHOBAS ;
PDEVDUR = max( (   PLAF_DEVDUR * (1 + BOOL_0AM)


                  + PLAF_GE2_PACQAR * (V_0CH+V_0DP)

	          + PLAF_GE2_PAC * (V_0CR+V_0CF+V_0DJ+V_0DN) 

		 ) - (V_BTDEVDUR*(1-present(DEPCHOBAS))+DEPCHOBAS) , 0 );
		 

ADEVDUR = max (0 , min (DDEVDUR,PDEVDUR)) * (1 - V_CNR);
R1DEVDUR = min (ADEVDUR,CRENRJRNOUV) ;
R2DEVDUR = min (max(0,ADEVDUR-R1DEVDUR),CRECHOBOI) ;
R4DEVDUR = min (max(0,ADEVDUR-R1DEVDUR-R2DEVDUR),CRECHOCON2) ;
R5DEVDUR = min (max(0,ADEVDUR-R1DEVDUR-R2DEVDUR-R4DEVDUR),CRECHOBAS) ;
CIDEVDUR = arr (R1DEVDUR * TX50/100 + R2DEVDUR * TX40/100  
		 + R4DEVDUR * TX25/100 + R5DEVDUR * TX15/100) * (1 - V_CNR);  

DEVDURCUM = ADEVDUR + (V_BTDEVDUR*(1-present(DEPCHOBAS))+DEPCHOBAS);

regle 407441:

application : pro, oceans, iliad, batch ; 

DEVDURBAIL = CINRJBAIL + CIBOIBAIL + CICHO2BAIL + CIDEP15;


ADEVDUBAIL = DEVDURBAIL * ((V_REGCO+0) dans (1,3,5,6));


R1DEDUBAIL = CINRJBAIL ;
R2DEDUBAIL = CIBOIBAIL ;
R4DEDUBAIL = CICHO2BAIL ;
R5DEDUBAIL = CIDEP15 ;

CIDEDUBAIL = arr (R1DEDUBAIL * TX50/100 + R2DEDUBAIL * TX40/100
		 + R4DEDUBAIL * TX25/100 + R5DEDUBAIL * TX15/100)
		  * ((V_REGCO+0) dans (1,3,5,6));
DEVCUMBAIL = ADEVDUBAIL;
regle 452:
application : pro, oceans, iliad, batch ; 

DTEC = RISKTEC;

ATEC = positif(DTEC) * DTEC;

CITEC = arr (ATEC * TX30/100);
regle 40745:
application : pro ,   oceans , iliad , batch  ;

DPRETUD = PRETUD + PRETUDANT ;

APRETUD = max(min(PRETUD,LIM_PRETUD) + min(PRETUDANT,LIM_PRETUD*CASEPRETUD),0) * (1-V_CNR) ;

CIPRETUD = arr(APRETUD*TX_PRETUD/100) * (1-V_CNR) ;

regle 40747:
application : pro ,   oceans , iliad , batch  ;

DPERT = PERCRE ;

CIPERT = arr(DPERT * TXPERT / 100) * (1 - V_CNR) ;

regle 40749:
application : pro ,   oceans , iliad , batch  ;

DFORET = FORET ;

AFORET = max(min(DFORET,LIM_FORET),0) * (1-V_CNR) ;

RAFORET = arr(AFORET*TX_FORET/100) * (1-V_CNR) ;

RFORET =  max( min( RAFORET , IDOM11-DEC11-RREPA-RSYND-RFIPC-RAIDE-RDIFAGRI) , 0 ) ;

regle 4075:
application : pro , oceans , iliad , batch ;

DFIPC = FIPCORSE ;

AFIPC = max(min(DFIPC,LIM_FIPCORSE*(1+BOOL_0AM)),0) * (1-V_CNR);

RFIPCORSE = arr(AFIPC*TX_FIPCORSE/100) * (1-V_CNR);

RFIPC = max( min( RFIPCORSE , IDOM11-DEC11-RREPA-RSYND) , 0);

regle 4076:
application : pro ,   oceans , iliad , batch  ;
BSURV = min( RDRESU , PLAF_RSURV + PLAF_COMPSURV * (EAC + V_0DN) + PLAF_COMPSURVQAR * (V_0CH + V_0DP) );
RRS = arr( BSURV * TX_REDSURV / 100 ) * (1 - V_CNR);
DSURV = RDRESU;
ASURV = BSURV * (1-V_CNR) ;
RSURV = max( min( RRS , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE
			      -RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE ) , 0 );

regle 4100:
application : pro , oceans , iliad , batch ;

RRCN = arr(  min( CINE1 , min( max(SOFIRNG,RNG) * TX_CINE3/100 , PLAF_CINE )) * TX_CINE1/100
        + min( CINE2 , max( min( max(SOFIRNG,RNG) * TX_CINE3/100 , PLAF_CINE ) - CINE1 , 0)) * TX_CINE2/100 
       ) * (1 - V_CNR) ;

DCINE = CINE1 + CINE2 ;

ACINE = max(0,min( CINE1 + CINE2 , min( arr(SOFIRNG * TX_CINE3/100) , PLAF_CINE ))) * (1 - V_CNR);

RCINE = max( min( RRCN , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET ) , 0 ) ;
regle 4176:
application : pro ,   oceans , iliad , batch  ;
BSOUFIP = min( FFIP , LIM_SOUFIP * (1 + BOOL_0AM));
RFIP = arr( BSOUFIP * TX_REDFIP / 100 ) * (1 - V_CNR);
DSOUFIP = FFIP;
ASOUFIP = BSOUFIP * (1-V_CNR) ;
RSOUFIP = max( min( RFIP , IDOM11-DEC11
           -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO) , 0 );

regle 4200:
application : pro ,   oceans , iliad , batch  ;

BRENOV = min(RIRENOV,PLAF_RENOV) ;
RENOV = arr( BRENOV * TX_RENOV / 100 ) * (1 - V_CNR) ;

DRIRENOV = RIRENOV ;
ARIRENOV = BRENOV * (1 - V_CNR) ;
RRIRENOV = max( min( RENOV , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
			       -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP) , 0 );

regle 40771:
application : pro ,   oceans , iliad , batch  ;
RFC = min(RDCOM,PLAF_FRCOMPTA * max(1,NBACT)) * present(RDCOM)*(1-V_CNR);
NCOMP = max(1,NBACT)* present(RDCOM) * (1-V_CNR);
DCOMP = RDCOM;
ACOMP = RFC;
regle 10040771:
application : pro ,   oceans , iliad , batch  ;
RCOMP = max( min( RFC , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE
		       -RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT
		       -RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCREAT ) , 0 );

regle 4078:
application : pro ,   oceans , iliad , batch  ;
BCELLIERM = arr ( min ((CELLIERM + CELLIERM1 + 0 ), LIMCELLIERM ) /9 );
BCELLIERM2 = arr ( min ((CELLIERM2 + 0 ), LIMCELLIERM ) /9 );
	   

BCELLIERD = arr ( min ((CELLIERD + CELLIERD1 + 0 ), LIMCELLIERD ) /9 );
BCELLIERD2 = arr ( min ((CELLIERD2 + 0 ), LIMCELLIERD ) /9 );



DCELDO = CELLIERD + CELLIERD1 ;
ACELDO = (positif_ou_nul( CELLIERD + CELLIERD1 ) * BCELLIERD) * (1-V_CNR);


DCELDOP = CELLIERD2 ; 
ACELDOP = (positif_ou_nul( CELLIERD2) * BCELLIERD2) * (1-V_CNR); 


DCELREPDOP9 = CELREPD09; 
ACELREPDOP9 = DCELREPDOP9 * (1 - V_CNR); 


DCELMET = CELLIERM + CELLIERM1 ;
ACELMET = (positif_ou_nul( CELLIERM + CELLIERM1 ) * BCELLIERM) * (1-V_CNR) ;


DCELNP = CELLIERM2 ;    
ACELNP = (positif_ou_nul( CELLIERM2) * BCELLIERM2) * (1-V_CNR); 


DCELREPNP9 = CELREPM09 ;    
ACELREPNP9 = DCELREPNP9 * (1 - V_CNR);


DCELRRED09 = CELRRED09;
ACELRRED09 = CELRRED09 * (1 - V_CNR);


RCELDOM = (positif(CELLIERD + CELLIERD1) * arr (ACELDO * (TX40/100))) 
             * (1 - V_CNR);                           

RCEL = (positif( CELLIERM + CELLIERM1 ) * arr (ACELMET * (TX25/100)))
             * (1 - V_CNR);                           


RCELD2 = positif(CELLIERD2) * arr (ACELDOP * (TX40/100)) 
             * (1 - V_CNR);                           

RCELM2 = positif( CELLIERM2 ) * arr (ACELNP * (TX25/100))
             * (1 - V_CNR);                           

REPCELD09 = positif(CELREPD09) * arr (CELREPD09 * (TX40/100))
	     * (1 - V_CNR);

REPCELM09 = positif( CELREPM09 ) * arr (CELREPM09 * (TX25/100))
	     * (1 - V_CNR);

regle 2004078:
application : pro ,   oceans , iliad , batch  ;

RCELDO = (max( min( RCELDOM, IDOM11-DEC11
	  -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
	  -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1) , 0 ))
	   * (1 - V_CNR);

RCELDOP = (max( min( RCELD2, IDOM11-DEC11
	  -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAD-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
	  -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RON-RLOGSOC-RDOMSOC1
	  -RCELDO) , 0 ))
	   * (1 - V_CNR);

RCELREPDOP9 = (max( min( REPCELD09 , IDOM11-DEC11
	    -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAD-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
            -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RON-RLOGSOC-RDOMSOC1
	    -RCELDO-RCELDOP) , 0))
	    * (1 - V_CNR);

RCELMET = (max( min( RCEL , IDOM11-DEC11
	  -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
	  -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RON-RLOGSOC-RDOMSOC1
	  -RCELDO-RCELDOP-RCELREPDOP9) , 0 ))
	   * (1 - V_CNR);

RCELNP = (max( min( RCELM2 , IDOM11-DEC11
	  -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAD-RDIFAGRI-RFORET
          -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
          -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
	  -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RON-RLOGSOC-RDOMSOC1
	  -RCELDO-RCELDOP-RCELREPDOP9-RCELMET) , 0 ))
	   * (1 - V_CNR);

RCELREPNP9 = (max( min( REPCELM09 , IDOM11-DEC11
	    -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
	    -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
            -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
            -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RON-RLOGSOC-RDOMSOC1
	    -RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP ) , 0 ))
	    * (1 - V_CNR);

RCELRRED09 = (max( min( CELRRED09 , IDOM11-DEC11
           -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
	   -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
	   -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP
	   -RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RON-RLOGSOC-RDOMSOC1
	   -RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9 ) , 0 ))
	    * (1 - V_CNR);

RIVCELDO1 = ACELDO * positif(CELLIERD) ; 

RIVCELDO2 = RIVCELDO1;

RIVCELDO3 = RIVCELDO1;

RIVCELDO4 = RIVCELDO1;

RIVCELDO5 = RIVCELDO1;

RIVCELDO6 = RIVCELDO1;

RIVCELDO7 = RIVCELDO1;

RIVCELDO8 = (min ((CELLIERD + 0 ), LIMCELLIERD ) - ( 8 * RIVCELDO1))
	     * (1 - V_CNR);


RIVCELMET1 = ACELMET * positif(CELLIERM); 
RIVCELMET2 = RIVCELMET1; 
RIVCELMET3 = RIVCELMET1; 
RIVCELMET4 = RIVCELMET1; 
RIVCELMET5 = RIVCELMET1; 
RIVCELMET6 = RIVCELMET1; 
RIVCELMET7 = RIVCELMET1; 

RIVCELMET8 = (min((CELLIERM + 0) , LIMCELLIERM) - (8 * RIVCELMET1))
	      * (1 - V_CNR);

RIVCELDPA1 = ACELDO * positif(CELLIERD1) ; 
RIVCELDPA2 = RIVCELDPA1; 
RIVCELDPA3 = RIVCELDPA1; 
RIVCELDPA4 = RIVCELDPA1; 
RIVCELDPA5 = RIVCELDPA1; 
RIVCELDPA6 = RIVCELDPA1; 
RIVCELDPA7 = RIVCELDPA1; 

RIVCELDPA8 = (min ((CELLIERD1 + 0 ), LIMCELLIERD ) - (8 * RIVCELDPA1))
	      * (1 - V_CNR);


RIVCELMPA1 = ACELMET * positif(CELLIERM1) ; 
RIVCELMPA2 = RIVCELMPA1; 
RIVCELMPA3 = RIVCELMPA1; 
RIVCELMPA4 = RIVCELMPA1; 
RIVCELMPA5 = RIVCELMPA1; 
RIVCELMPA6 = RIVCELMPA1; 
RIVCELMPA7 = RIVCELMPA1; 

RIVCELMPA8 = (min ((CELLIERM1 + 0 ), LIMCELLIERM ) - (8 * RIVCELMPA1))
	  * positif(CELLIERM1) * (1 - V_CNR);


RIVCELDOP1 = ACELDOP * positif(CELLIERD2) ; 
RIVCELDOP2 = RIVCELDOP1;
RIVCELDOP3 = RIVCELDOP1;
RIVCELDOP4 = RIVCELDOP1;
RIVCELDOP5 = RIVCELDOP1;
RIVCELDOP6 = RIVCELDOP1;
RIVCELDOP7 = RIVCELDOP1;

RIVCELDOP8 = (min ((CELLIERD2 + 0 ), LIMCELLIERD) - (8 * RIVCELDOP1))
	       * (1 - V_CNR);


RIVCELNP1 = ACELNP * positif(CELLIERM2) ; 
RIVCELNP2 = RIVCELNP1;
RIVCELNP3 = RIVCELNP1;
RIVCELNP4 = RIVCELNP1;
RIVCELNP5 = RIVCELNP1;
RIVCELNP6 = RIVCELNP1;
RIVCELNP7 = RIVCELNP1;

RIVCELNP8 = (min ((CELLIERM2 + 0 ), LIMCELLIERD )
	     - ( 8 * RIVCELNP1))
	       * (1 - V_CNR);



RCELRED09 = (max(0, CELRRED09 - RCELRRED09)) 
	    * positif(CELRRED09) * (1 - V_CNR);


RCELRED = (max( 0, RCEL + RCELDOM - RCELMET - RCELDO)) * positif(CELLIERM + CELLIERD) 
				     * (1-positif(CELLIERM1 + CELLIERD1))
				     * (1 - V_CNR);


RCELREP = RCELRED09 + RCELRED;


RCELREPA = (max( 0, (RCEL - RCELMET + RCELDOM - RCELDO) * positif(CELLIERM1 + CELLIERD1) * (1-positif(CELLIERM+ CELLIERD))  
		   + RCELD2 - RCELDOP
		   + RCELM2 - RCELNP 	
		   + REPCELD09 + REPCELM09 - RCELREPNP9 - RCELREPDOP9)) 
	  * positif(CELLIERM1 + CELLIERD1 + CELLIERM2 + CELLIERD2 + CELREPM09 + CELREPD09)
	  * (1-V_CNR) ;
	 



REPCELDO = somme(i=1,2,3,4,5,6,7 : RIVCELDOi) + RIVCELDO8;  
REPCELMET = somme(i=1,2,3,4,5,6,7 : RIVCELMETi) + RIVCELMET8;  
REPCELDPA = somme(i=1,2,3,4,5,6,7 : RIVCELDPAi) + RIVCELDPA8;  
REPCELMPA = somme(i=1,2,3,4,5,6,7 : RIVCELMPAi) + RIVCELMPA8;  
REPCELDOP = somme(i=1,2,3,4,5,6,7 : RIVCELDOPi) + RIVCELDOP8;  
REPCELNP = somme(i=1,2,3,4,5,6,7 : RIVCELNPi) + RIVCELNP8;  


regle 4079:
application : pro ,   oceans , iliad , batch  ;

BILNEUF= min (INVLOCNEUF , arr( LIMLOC * (1+BOOL_0AM) /6) ) ;
BILHOT= min (INVLOCHOT , arr( LIMLOC * (1+BOOL_0AM) /6) ) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));
BILLOCT1= min (INVLOCT1 , LIMLOC * (1+BOOL_0AM)  ) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));
BILLOCT2= min (INVLOCT2 , max(( LIMLOC * (1+BOOL_0AM) - BILLOCT1 ),0)) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO))) ;
BILRES= min (INVLOCRES , arr( LIMLOC * (1+BOOL_0AM) /6) ) ;

regle 40791 :
application : pro ,   oceans , iliad , batch  ;
RILNEUF = arr(BILNEUF * TX_REDIL25 / 100);
RILHOT  = arr(BILHOT * TX_REDIL25 / 100);
RILLOCT1 = (BILLOCT1 * TX_REDIL40 / 100);
RILLOCT2 = (BILLOCT2 * TX_REDIL20 / 100);
RILTRA = arr(RILLOCT1 + RILLOCT2);
RILRES = arr(BILRES * TX_REDIL20 / 100);
RITOUR = RILNEUF 
        + RILHOT
        + RILTRA
	+ RILRES
        + arr((REPINVLOCINV + RINVLOCINV) * TX_REDIL25 / 100)
        + arr((REPINVLOCREA + RINVLOCREA)* TX_REDIL20 / 100) ;
RIHOTR = arr((INVLOCHOTR1 + INVLOCHOTR) * TX_REDIL25 / 100) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));


RIVL1 = (min( arr( max( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)))
        + min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM))))
     * positif(INDLOCNEUF + INDLOCRES) ;

RIVL1RES = (min ( max ( 0 , INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6)),
                        arr(LIMLOC * (1+BOOL_0AM) / 6 )) 
          + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6)),
       	                arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL2 = (max(min( arr( max( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL2RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 ))
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL3 = (max(min(arr ( max ( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL3RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 ))
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL4 = (max(min(arr ( max ( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL4RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES - RIVL3RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 ))
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES - RIVL3RES),
		       arr(LIMLOC * (1+BOOL_0AM) / 6 )))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL5 = (max(min(arr ( max ( 0 , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6)
              , min(INVLOCNEUF,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3 - RIVL4), 0)
        + max(min(arr ( max ( 0 , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - arr(LIMLOC*(1+BOOL_0AM)/6))/6) 
            , min(INVLOCRES,LIMLOC*(1+BOOL_0AM)) - RIVL1 - RIVL2 - RIVL3 - RIVL4), 0))
     * positif(INDLOCNEUF + INDLOCRES);

RIVL5RES = (min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES  - RIVL3RES - RIVL4RES),
		       LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 ) - RIVL1RES - RIVL2RES - RIVL3RES - RIVL4RES)
           + min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1RES - RIVL2RES  - RIVL3RES - RIVL4RES),
		       LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 ) - RIVL1RES - RIVL2RES - RIVL3RES - RIVL4RES))
                * (1 - positif(INDLOCNEUF + INDLOCRES));

RIVL6 = (max(min ( max ( 0, INVLOCNEUF - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1 - RIVL2 - RIVL3 - RIVL4 - RIVL5 ),
		     LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 )-RIVL1-RIVL2-RIVL3-RIVL4 - RIVL5 ), 0)
        + max( min ( max ( 0, INVLOCRES - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVL1 - RIVL2 - RIVL3 - RIVL4 - RIVL5),
		       LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6 ) - RIVL1 - RIVL2 - RIVL3 - RIVL4 - RIVL5), 0))
     * positif(INDLOCNEUF + INDLOCRES);

BREPNEUF = min (INVLOCNEUF , arr( LIMLOC * (1+BOOL_0AM)) ) * positif(INDLOCRES + INDLOCNEUF);
BRNEUF = max(0,BREPNEUF - BILNEUF)* positif(INDLOCRES + INDLOCNEUF);
REPNEUF = arr(BRNEUF /6) * positif(INDLOCNEUF + INDLOCRES);
BREPRES = min (INVLOCRES , arr( LIMLOC * (1+BOOL_0AM) ) ) * positif(INDLOCRES + INDLOCNEUF);
BRRES = max(0,BREPRES - BILRES)* positif(INDLOCRES + INDLOCNEUF);
REPRES = arr(BRRES /6) * positif(INDLOCNEUF + INDLOCRES);

RIVLHOT1 = min ( max ( 0 , INVLOCHOT 
				 - arr(LIMLOC*(1+BOOL_0AM)/6)),
              arr(LIMLOC * (1+BOOL_0AM) / 6 )); 
RIVLHOT2 = min ( max ( 0 , INVLOCHOT 
				 - arr(LIMLOC*(1+BOOL_0AM)/6) - RIVLHOT1),
              arr(LIMLOC * (1+BOOL_0AM) / 6 )); 
RIVLHOT3 = min ( max ( 0 , INVLOCHOT 
				 -arr( LIMLOC*(1+BOOL_0AM)/6) - RIVLHOT1 - RIVLHOT2),
              arr(LIMLOC * (1+BOOL_0AM) / 6 ));
RIVLHOT4 =  min ( max ( 0, INVLOCHOT 
				- arr(LIMLOC*(1+BOOL_0AM)/6) - RIVLHOT1 - RIVLHOT2 - RIVLHOT3 ),
		arr(LIMLOC * (1+BOOL_0AM) / 6) );
RIVLHOT5 =  min ( max ( 0, INVLOCHOT 
				- arr(LIMLOC*(1+BOOL_0AM)/6) - RIVLHOT1 - RIVLHOT2 - RIVLHOT3 - RIVLHOT4),
		LIMLOC*(1+BOOL_0AM)-arr(LIMLOC * (1+BOOL_0AM) / 6)- RIVLHOT1 - RIVLHOT2 - RIVLHOT3 - RIVLHOT4 );


DTOURNEUF = INVLOCNEUF ;
ATOURNEUF = BILNEUF  ;

DTOURHOT = INVLOCHOT;
ATOURHOT = BILHOT ;

DTOURTRA = INVLOCT1 + INVLOCT2;
ATOURTRA = (BILLOCT1 + BILLOCT2) ;

DTOURES = INVLOCRES;
ATOURES = BILRES ;

DTOURREP = REPINVLOCINV + RINVLOCINV ;
ATOURREP = REPINVLOCINV + RINVLOCINV ;

DTOUHOTR = INVLOCHOTR1 + INVLOCHOTR ;
ATOUHOTR = (INVLOCHOTR1 + INVLOCHOTR) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));

DTOUREPA = REPINVLOCREA + RINVLOCREA ;
ATOUREPA = REPINVLOCREA + RINVLOCREA ;

regle 10040791 :
application : pro ,   oceans , iliad , batch  ;

RTOURNEUF = max( min( RILNEUF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
		-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO
		-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM ) , 0 );

RTOURHOT = max( min( RILHOT , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
	 -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP
	 -RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF ) , 0 );

RTOURTRA = max( min( RILTRA, IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
	 -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP
	 -RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT ) , 0 );

RTOURES = max( min( RILRES , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
	 -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP
	 -RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA ) , 0 );

RTOURREP = max( min( arr(ATOURREP * TX_REDIL25 / 100) , IDOM11-DEC11
         -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
	 -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR
	 -RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES) , 0 );

RTOUHOTR = max( min( RIHOTR , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
	 -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP
	 -RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP ) , 0 )
	 * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));

RTOUREPA = max( min( arr(ATOUREPA * TX_REDIL20 / 100) , IDOM11-DEC11
         -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
	 -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR
	 -RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR) , 0 );

RTOUR = RTOURNEUF + RTOURREP ;

regle 407011 :
application : pro ,   oceans , iliad , batch  ;
BADCRE = min (CREAIDE, min((LIM_AIDOMI * (1 - positif(PREMAIDE)) + LIM_PREMAIDE * positif(PREMAIDE) 
		           + MAJSALDOM * ( positif_ou_nul(V_ANREV-V_0DA-65)
				         + positif_ou_nul(V_ANREV-V_0DB-65)
						     * BOOL_0AM
				         + V_0CF + V_0DJ + V_0DN 
				         + (V_0CH + V_0DP)/2
				         ) 
		           ),LIM_AIDOMI3 * (1 - positif(PREMAIDE)) + LIM_PREMAIDE2 * positif(PREMAIDE) ) * (1-positif(INAIDE + 0))
                    +  LIM_AIDOMI2 * positif(INAIDE + 0));
BADPLAF = min((LIM_AIDOMI * (1 - positif(PREMAIDE)) + LIM_PREMAIDE * positif(PREMAIDE) 
		           + MAJSALDOM * ( positif_ou_nul(V_ANREV-V_0DA-65)
				         + positif_ou_nul(V_ANREV-V_0DB-65)
						     * BOOL_0AM
				         + ASCAPA 
				         + V_0CF + V_0DJ + V_0DN 
				         + (V_0CH + V_0DP)/2
				         ) 
		          ),LIM_AIDOMI3 * (1 - positif(PREMAIDE)) + LIM_PREMAIDE2 * positif(PREMAIDE) ) * (1-positif(INAIDE + 0))
                    +  LIM_AIDOMI2 * positif(INAIDE + 0);
BADPLAFIMPUT =  max(0,BADPLAF-BADCRE);
BAD =  min (RVAIDE, BADPLAFIMPUT);

RAD = arr (BAD * TX_AIDOMI /100) * (1 - V_CNR) ;

DAIDE = RVAIDE;
AAIDE = BAD * (1-V_CNR) ;
RAIDE = max( min( RAD , IDOM11-DEC11-RREPA-RSYND-RFIPC) , 0 );
DAIDC = CREAIDE;
AAIDC = BADCRE * (1-V_CNR) ;
CIADCRE = arr (BADCRE * TX_AIDOMI /100) * (1 - V_CNR) ;

regle 4071 :
application : pro ,   oceans , iliad , batch  ;
BPATNAT = (min(PATNAT,LIM_PATNAT)) * (1 - V_CNR);
RAPATNAT = arr (BPATNAT * TX_PATNAT/100) ;
DPATNAT = PATNAT;
APATNAT = BPATNAT;
regle 20004071 :
application : pro ,   oceans , iliad , batch  ;
RPATNAT = max( min( RAPATNAT , IDOM11-DEC11
           -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE
	   -RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT
	   -RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1
	   -RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU
	   -RMEUBLE-RREDMEUB-RNOUV) , 0 );

REPNATR6 = max(RAPATNAT - RPATNAT,0)*(1-V_CNR); 

PROTPAT = RPATNAT ;
REPPROTPAT = REPNATR6 ; 

regle 40704 :
application : pro ,   oceans , iliad , batch  ;

RRI1 = IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
       -RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV ;

regle 40705 :
application : pro ,   oceans , iliad , batch  ;

NRTOURNEUF = max( min( RILNEUF , RRI1-NRLOGDOM ) , 0 );

NRTOURHOT = max( min( RILHOT , RRI1-NRLOGDOM-NRTOURNEUF ) , 0 );

NRTOURTRA = max( min( RILTRA, RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT ) , 0 );

NRTOURES = max( min( RILRES , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA ) , 0 );

NRTOURREP = max( min( arr(ATOURREP * TX_REDIL25 / 100) , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA-NRTOURES) , 0 );

NRTOUHOTR = max( min( RIHOTR , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA-NRTOURES-NRTOURREP ) , 0 )
	        * (1-positif(null(2-V_REGCO)+null(4-V_REGCO)));

NRTOUREPA = max( min( arr(ATOUREPA * TX_REDIL20 / 100) , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA-NRTOURES
							 -NRTOURREP-NRTOUHOTR) , 0 );

NRCREAT = max( min( RCREATEUR + RCREATEURHANDI , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA-NRTOURES-NRTOURREP
						 -NRTOUHOTR-NRTOUREPA ) , 0 );

NRCOMP = max( min( RFC , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA-NRTOURES-NRTOURREP-NRTOUHOTR-NRTOUREPA
			   -NRCREAT ) , 0 );

NRRETU = max( min( RETUD , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA-NRTOURES-NRTOURREP-NRTOUHOTR-NRTOUREPA
			   -NRCOMP-NRCREAT ) , 0 );

NRDONS = max( min( RON , RRI1-NRLOGDOM-NRTOURNEUF-NRTOURHOT-NRTOURTRA-NRTOURES-NRTOURREP-NRTOUHOTR-NRTOUREPA
                        -NRCOMP-NRCREAT-NRRETU) , 0 );

NRRI2 = NRTOURNEUF+NRTOURHOT+NRTOURTRA+NRTOURES+NRTOURREP+NRTOUHOTR+NRTOUREPA+NRCOMP+NRCREAT+NRRETU+NRDONS ;

regle 40706 :
application : pro ,   oceans , iliad , batch  ;

NRCELDO = (max( min( RCELDOM , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1) , 0 )) * (1 - V_CNR) ;

NRCELDOP = (max( min( RCELD2 , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO) , 0 )) * (1 - V_CNR) ;

NRCELREPDOP9 = (max( min( REPCELD09 , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP) , 0 )) * (1 - V_CNR) ;

NRCELMET = (max( min( RCEL , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9) , 0 )) * (1 - V_CNR) ;

NRCELNP = (max( min( RCELM2 , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET) , 0 )) * (1 - V_CNR) ;

NRCELREPNP9 = (max( min( REPCELM09 , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET-NRCELNP) , 0 )) * (1 - V_CNR) ;

NRCELRRED09 = (max( min( CELRRED09 , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET-NRCELNP-NRCELREPNP9) , 0 )) * (1 - V_CNR) ;

NRRESINEUV = max( min( RETRESINEUV , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET-NRCELNP-NRCELREPNP9-NRCELRRED09) , 0 );

NRRESIVIEU = max( min( RETRESIVIEU , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET-NRCELNP-NRCELREPNP9-NRCELRRED09
		       -NRRESINEUV) , 0 );

NRMEUBLE = max( min( MEUBLERET , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET-NRCELNP-NRCELREPNP9-NRCELRRED09-NRRESINEUV-NRRESIVIEU) , 0 );

NRREDMEUB = max( min( AREDMEUB , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET-NRCELNP-NRCELREPNP9-NRCELRRED09
				 -NRRESINEUV-NRRESIVIEU-NRMEUBLE) , 0 );

NRNOUV = max( min( RSN , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET
                         -NRCELNP-NRCELREPNP9-NRCELRRED09-NRRESINEUV-NRRESIVIEU-NRMEUBLE-NRREDMEUB) , 0 );

NRPATNAT = max( min( RAPATNAT , RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET
		-NRCELNP-NRCELREPNP9-NRCELRRED09-NRRESINEUV-NRRESIVIEU-NRMEUBLE-NRREDMEUB-NRNOUV) , 0 );

NPLAFDOMPRO1 = max(0, RRI1-NRLOGDOM-NRRI2-NRLOGSOC-NRDOMSOC1-NRCELDO-NRCELDOP-NRCELREPDOP9-NRCELMET
		      -NRCELNP-NRCELREPNP9-NRCELRRED09-NRRESINEUV-NRRESIVIEU-NRMEUBLE-NRREDMEUB-NRNOUV-NRPATNAT);

NRIDOMPROE5 =  min(REPINVDOMPRO1,NPLAFDOMPRO1) * (1 - V_CNR);

NPLAFDOMPRO2 = positif(NPLAFDOMPRO1 - REPINVDOMPRO1) * (NPLAFDOMPRO1 - REPINVDOMPRO1) * (1 -V_CNR) ; 
 
NRIDOMPROE4 = min(REPINVDOMPRO2,NPLAFDOMPRO2) * (1 - V_CNR);
                  
NPLAFDOMPRO3 = positif(NPLAFDOMPRO2 - REPINVDOMPRO2) * (NPLAFDOMPRO2 - REPINVDOMPRO2) * (1 -V_CNR) ; 

NRIDOMPROE3 = min(REPINVDOMPRO3,NPLAFDOMPRO3) * (1 - V_CNR);

NPLAFDOMPRO4 = positif(NPLAFDOMPRO3 - REPINVDOMPRO3) * (NPLAFDOMPRO3 - REPINVDOMPRO3) * (1 -V_CNR) ; 

NRIDOMPROE2 = min(REPINVDOMPRO4,NPLAFDOMPRO4) * (1 - V_CNR);

NRIDOMPROTOT = NRIDOMPROE2 + NRIDOMPROE3 + NRIDOMPROE4 + NRIDOMPROE5 ;

NRRI3 = NRCELDO+NRCELDOP+NRCELREPDOP9+NRCELMET+NRCELNP+NRCELREPNP9+NRCELRRED09+NRRESINEUV+NRRESIVIEU+NRMEUBLE+NRREDMEUB+NRNOUV+NRPATNAT+NRIDOMPROTOT ;

regle 4070111 :
application : pro ,   oceans , iliad , batch  ;
BAH = (min (RVCURE,LIM_CURE) + min(RCCURE,LIM_CURE)) * (1 - V_CNR);
RAH = arr (BAH * TX_CURE /100) ;
DHEBE = RVCURE + RCCURE;
AHEBE = BAH ;
RHEBE = max( min( RAH , IDOM11-DEC11
           -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR ) , 0 );
regle 407012:
application : batch, iliad, pro, oceans ;

EM7 = somme (i=0..7: min (1 , max(0 , V_0Fi + AG_LIMFG - V_ANREV)))
      + (1 - positif(somme(i=0..7:V_0Fi) + 0)) * V_0CF ;

EM7QAR = somme (i=0..5: min (1 , max(0 , V_0Hi + AG_LIMFG - V_ANREV)))
         + somme (j=0..3: min (1 , max(0 , V_0Pj + AG_LIMFG - V_ANREV)))
         + (1 - positif(somme(i=0..5: V_0Hi) + somme(j=0..3: V_0Pj) + 0)) * (V_0CH + V_0DP) ;

regle 4070122:
application : pro , oceans , iliad  , batch;
BRFG = min(RDGARD1,PLAF_REDGARD) + min(RDGARD2,PLAF_REDGARD)
       + min(RDGARD3,PLAF_REDGARD) + min(RDGARD4,PLAF_REDGARD)
       + min(RDGARD1QAR,PLAF_REDGARDQAR) + min(RDGARD2QAR,PLAF_REDGARDQAR)
       + min(RDGARD3QAR,PLAF_REDGARDQAR) + min(RDGARD4QAR,PLAF_REDGARDQAR)
       ;
RFG = arr ( (BRFG) * TX_REDGARD /100 ) * (1 -V_CNR);
DGARD = somme(i=1..4:RDGARDi)+somme(i=1..4:RDGARDiQAR);
AGARD = (BRFG) * (1-V_CNR) ;
CIGARD = RFG;
regle 4070121:
application : pro ,   oceans , iliad , batch  ;
RP = somme (i=V,C: TSNNi + TSNN2i + BICIMPi + BICNPi + BNNi +  max(0,BANi) + BAEi)
           + (min (0,BANV) + min (0,BANC)) * 
    (1 - positif(1 + SEUIL_IMPDEFBA - SHBA - GLN1 - somme(i=2..4 : REVi) - REVRF
    - (REVTP - BA1)  ))
	   + max(0 , ANOCEP - (DNOCEP + DABNCNP6+DABNCNP5+DABNCNP4+DABNCNP3+DABNCNP2+DABNCNP1) ) + somme(i=1..3:GLNi) ;

regle 407013:
application : pro ,  oceans , iliad , batch  ;

BAA = min( RDFREP , PLAF_REDREPAS );
RAA = arr( (TX_REDREPAS) / 100 * BAA ) * (1 - V_CNR);
DREPA = RDREP;
AREPA = BAA * (1-V_CNR) ;
RREPA = max(min( RAA , IDOM11-DEC11) , 0 );

regle 407014:
application : pro ,  oceans , iliad , batch  ;
BSN = min ( RDSNO+REPSNO1+REPSNO2+REPSNO3 , LIM_SOCNOUV2 * (1+BOOL_0AM) );
RSN = arr ( TX_REDSOCNOUV/100 * BSN ) * (1 - V_CNR);
DNOUV = RDSNO+REPSNO1+REPSNO2+REPSNO3;
ANOUV = BSN * (1-V_CNR)  ;
regle 200407014:
application : pro ,  oceans , iliad , batch  ;
RNOUV = max( min( RSN , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE
			      -RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT
			      -RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1
			      -RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB) , 0 );

REPINVPME3 = max(0 , REPSNO3 - (LIM_SOCNOUV2*(1+BOOL_0AM))) * (1-V_CNR) ; 


REPINVPME2 = (REPSNO2 * positif(REPINVPME3)
	      + max(0 , REPSNO3 + REPSNO2 - (LIM_SOCNOUV2*(1+BOOL_0AM))) * (1 - positif(REPINVPME3))) 
	      * (1-V_CNR) ;


REPINVPME1 = (REPSNO1 * positif(REPSNO3 + REPSNO2 - (LIM_SOCNOUV2*(1+BOOL_0AM)))
	      + max(0 , REPSNO3 + REPSNO2 + REPSNO1 - (LIM_SOCNOUV2*(1+BOOL_0AM))) 
		  * (1 -positif(REPSNO3 + REPSNO2 - (LIM_SOCNOUV2*(1+BOOL_0AM)))))
	      * (1-V_CNR) ;


REPINVPME = max(0 , max(0 , DNOUV - (LIM_SOCNOUV2*(1+BOOL_0AM))) - REPINVPME3 - REPINVPME2 - REPINVPME1) ;

regle 407000:
application : pro ,  oceans , iliad , batch  ;

DTITPRISE = PETIPRISE ;

ATITPRISE = min (PETIPRISE, ((LIM_TITPRISE * (1 + BOOL_0AM)) - min ( RDSNO+REPSNO1+REPSNO2+REPSNO3 , LIM_SOCNOUV2 * (1+BOOL_0AM))) )
		   * (1-V_CNR) ; 

RETPETIPRISE = arr ( TX_TITPRISE/100 * ATITPRISE ) * (1-V_CNR) ;

RTITPRISE = max( min( RETPETIPRISE , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RCINE) , 0 );

regle 407010:
application : pro ,  oceans , iliad , batch  ;

DRESINEUV = LOCRESINEUV + MEUBLENP ;

DRESIVIEU = RESIVIEU ;

ARESINEUV = arr(min(PLAF_RESINEUV , DRESINEUV) / 9) * (1 - V_CNR) ;

ARESIVIEU = arr(min(PLAF_RESINEUV , DRESIVIEU) / 9) * (1 - V_CNR) ;

RETRESINEUV = arr( TX_RESINEUV * ARESINEUV / 100 ) * (1-V_CNR) ;

RETRESIVIEU = arr( TX_RESINEUV * ARESIVIEU / 100 ) * (1-V_CNR) ;

regle 30407010:
application : pro ,  oceans , iliad , batch  ;

RRESINEUV = max( min( RETRESINEUV , IDOM11-DEC11 -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE
	   -RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	   -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09) , 0 );

regle 35407010:
application : pro ,  oceans , iliad , batch  ;

RRESIVIEU = max( min( RETRESIVIEU , IDOM11-DEC11 -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE
	   -RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
	   -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV) , 0 );

regle 36407010:
application : pro ,  oceans , iliad , batch  ;

REPRESINEUV = (RETRESINEUV - RRESINEUV) * positif(LOCRESINEUV) ;

MEUBLEREP = (RETRESINEUV - RRESINEUV) * positif(MEUBLENP) ;

REPRESIVIEU = RETRESIVIEU - RRESIVIEU ;

RESINEUV1 = arr(min ( LOCRESINEUV ,PLAF_RESINEUV) / 9 ) ;
RESINEUV2 = arr(min ( LOCRESINEUV ,PLAF_RESINEUV) / 9 ) ;
RESINEUV3 = arr(min ( LOCRESINEUV ,PLAF_RESINEUV) / 9 ) ;
RESINEUV4 = arr(min ( LOCRESINEUV ,PLAF_RESINEUV) / 9 ) ;
RESINEUV5 = arr(min ( LOCRESINEUV ,PLAF_RESINEUV) / 9 ) ;
RESINEUV6 = arr(min ( LOCRESINEUV ,PLAF_RESINEUV) / 9 ) ;
RESINEUV7 = arr(min ( LOCRESINEUV ,PLAF_RESINEUV) / 9 ) ;
RESINEUV8 = max(0,min(LOCRESINEUV ,PLAF_RESINEUV)-RESINEUV1-RESINEUV2-RESINEUV3-RESINEUV4-RESINEUV5-RESINEUV6-RESINEUV6-RESINEUV7) ;

REPINVLOCNP = RESINEUV1 + RESINEUV2 + RESINEUV3 + RESINEUV4 + RESINEUV5 + RESINEUV6 + RESINEUV7 + RESINEUV8 ;

RRESINEUV1 = arr(min ( MEUBLENP ,PLAF_RESINEUV) / 9 ) ;
RRESINEUV2 = arr(min ( MEUBLENP ,PLAF_RESINEUV) / 9 ) ;
RRESINEUV3 = arr(min ( MEUBLENP ,PLAF_RESINEUV) / 9 ) ;
RRESINEUV4 = arr(min ( MEUBLENP ,PLAF_RESINEUV) / 9 ) ;
RRESINEUV5 = arr(min ( MEUBLENP ,PLAF_RESINEUV) / 9 ) ;
RRESINEUV6 = arr(min ( MEUBLENP ,PLAF_RESINEUV) / 9 ) ;
RRESINEUV7 = arr(min ( MEUBLENP ,PLAF_RESINEUV) / 9 ) ;
RRESINEUV8 = max(0,min(MEUBLENP ,PLAF_RESINEUV)-RRESINEUV1-RRESINEUV2-RRESINEUV3-RRESINEUV4-RRESINEUV5-RRESINEUV6-RRESINEUV6-RRESINEUV7) ;

REPINVMEUBLE = RRESINEUV1 + RRESINEUV2 + RRESINEUV3 + RRESINEUV4 + RRESINEUV5 + RRESINEUV6 + RRESINEUV7 + RRESINEUV8 ;

RESIVIEU1 = arr(min ( DRESIVIEU ,PLAF_RESINEUV) / 9 ) ;
RESIVIEU2 = arr(min ( DRESIVIEU ,PLAF_RESINEUV) / 9 ) ;
RESIVIEU3 = arr(min ( DRESIVIEU ,PLAF_RESINEUV) / 9 ) ;
RESIVIEU4 = arr(min ( DRESIVIEU ,PLAF_RESINEUV) / 9 ) ;
RESIVIEU5 = arr(min ( DRESIVIEU ,PLAF_RESINEUV) / 9 ) ;
RESIVIEU6 = arr(min ( DRESIVIEU ,PLAF_RESINEUV) / 9 ) ;
RESIVIEU7 = arr(min ( DRESIVIEU ,PLAF_RESINEUV) / 9 ) ;
RESIVIEU8 = max(0,min(DRESIVIEU ,PLAF_RESINEUV)-RESIVIEU1-RESIVIEU2-RESIVIEU3-RESIVIEU4-RESIVIEU5-RESIVIEU6-RESIVIEU6-RESIVIEU7) ;

REPINVIEU = RESIVIEU1 + RESIVIEU2 + RESIVIEU3 + RESIVIEU4 + RESIVIEU5 + RESIVIEU6 + RESIVIEU7 + RESIVIEU8 ;

regle 467034:
application : pro ,  oceans , iliad , batch  ;

DMEUBLE = REPMEUBLE ;

AMEUBLE = DMEUBLE * (1 - V_CNR) ;

MEUBLERET = arr(DMEUBLE * TX25 / 100) * (1 - V_CNR) ;

regle 477034:
application : pro ,  oceans , iliad , batch  ;
RMEUBLE = max(min( MEUBLERET , IDOM11-DEC11 -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE
		               -RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT
			       -RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1
			       -RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU) , 0) ;

regle 487034:
application : pro ,  oceans , iliad , batch  ;

DREDMEUB = REDMEUBLE ;

AREDMEUB = DREDMEUB * (1 - V_CNR) ;

regle 497034:
application : pro ,  oceans , iliad , batch  ;
RREDMEUB = max(min( AREDMEUB , IDOM11-DEC11 -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE
		               -RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT
			       -RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1
			       -RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE) , 0) ;

MEUBLERED = REDMEUBLE - RREDMEUB ;

REPRESILOC = REPRESINEUV + MEUBLERED ;

REPRETREP = REPRESIVIEU + MEUBLEREP + MEUBLERET - RMEUBLE ;

REPRESI = REPRETREP ;

regle 407034:
application : pro ,  oceans , iliad , batch  ;
BSOCREP = min ( RSOCREPRISE , LIM_SOCREPR *(1+BOOL_0AM) );
RSOCREP = arr ( TX_SOCREPR/100 * BSOCREP ) * (1 - V_CNR);
DSOCREPR = RSOCREPRISE;
ASOCREPR = BSOCREP * (1-V_CNR)  ;
RSOCREPR = max( min( RSOCREP , IDOM11-DEC11
           -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE ) , 0 );
regle 407015:
application : pro ,  oceans , iliad , batch  ;
BCOS = somme(i=V,C: max(0 , min(COSBi+0,arr(TX_BASECOTSYN/100*
                   (TSBi*IND_10i 
                            - BPCOSAi + EXPRi ))))) +
                 min(COSBP+0,arr(TX_BASECOTSYN/100*
                    (somme(i=1..4:TSBi *IND_10i + EXPRi))))  ;
regle 4070151:
application : pro ,  oceans , iliad , batch  ;
RCOS = arr (TX_REDCOTSYN/100 * BCOS) * (1 - V_CNR);
DSYND = RDSYVO + RDSYCJ + RDSYPP ;
ASYND = BCOS * (1-V_CNR)  ;
RSYND = max (min (RCOS , IDOM11-DEC11-RREPA) , 0) ;

regle 4070153:
application : pro ,  oceans , iliad , batch  ;

DRESTIMO = RESTIMOPPAU + RESTIMOSAUV ;

ARESTIMO = (min (RESTIMOPPAU , LIM_RESTIMO - min(RESTIMOSAUV , LIM_RESTIMO)) + min(RESTIMOSAUV , LIM_RESTIMO)) * (1 - V_CNR) ;

RETRESTIMO = arr((min(RESTIMOSAUV , LIM_RESTIMO) * TX_RESTIMO2/100) 
	         + (min (RESTIMOPPAU , LIM_RESTIMO - min(RESTIMOSAUV , LIM_RESTIMO)) * TX_RESTIMO1/100)) 
		     * (1 - V_CNR) ;

RRESTIMO = max (min (RETRESTIMO , IDOM11-DEC11-RREPA-RSYND-RFIPC-RAIDE-RDIFAGRI-RFORET) , 0) ;
regle 4070155:
application : pro ,  oceans , iliad , batch  ;

DPECHE = SOFIPECHE ;

APECHE = min(DPECHE, min(arr(SOFIRNG * TXLIM_PECHE/100) , LIM_PECHE * (1 + BOOL_0AM))) * (1 - V_CNR) ;

RETPECHE = arr (TX_PECHE/100 * APECHE) ;

RPECHE = max ( min (RETPECHE , IDOM11-DEC11-RREPA-RSYND-RFIPC-RAIDE-RDIFAGRI-RFORET-RRESTIMO) , 0) ;

regle 4070161:
application : pro ,  oceans , iliad , batch  ;
REVDON = max(0,RBL+TOTALQUO-SDD-SDC1) ;
BUP = arr (min (RDFDOU+REPDON03+REPDON04+REPDON05+REPDON06+REPDON07,REVDON *(TX_BASEDUP)/100));
BON = BUP;
REPDON = max(RDFDOU + REPDON03 + REPDON04 + REPDON05 + REPDON06 + REPDON07 - arr(REVDON * (TX_BASEDUP)/100),0)*(1-V_CNR);

REPDONR5 = max(REPDON03 - arr(REVDON * (TX_BASEDUP)/100),0)*(1-V_CNR);

REPDONR4 = (positif_ou_nul(REPDON03 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON04
	  + (1 - positif_ou_nul(REPDON03 - arr(REVDON * (TX_BASEDUP)/100))) 
	   * max(REPDON04 + (REPDON03 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR3 = (positif_ou_nul(REPDON03 + REPDON04 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON05 
          + (1 - positif_ou_nul(REPDON03 + REPDON04 - arr(REVDON * (TX_BASEDUP)/100)))
	  * max(REPDON05 + (REPDON03 + REPDON04 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR2 = (positif_ou_nul(REPDON03 + REPDON04 + REPDON05 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON06
	  + (1 - positif_ou_nul(REPDON03 + REPDON04 + REPDON05 - arr(REVDON * (TX_BASEDUP)/100)))
	  * max(REPDON06 + (REPDON03 + REPDON04 + REPDON05 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR1 = (positif_ou_nul(REPDON03 + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * (TX_BASEDUP)/100)) * REPDON07
	  + (1 - positif_ou_nul(REPDON03 + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * (TX_BASEDUP)/100)))
	  * max(REPDON07 + (REPDON03 + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * (TX_BASEDUP)/100)),0))
	   * (1 - V_CNR);

REPDONR = max(REPDON - REPDONR1 - REPDONR2 - REPDONR3 - REPDONR4 - REPDONR5,0)*(1-V_CNR);

regle 407016:
application : pro ,  oceans , iliad , batch  ;
RON = arr( BUP *(TX_REDDON)/100 ) *(1 - V_CNR);

DDONS = RDFDOU + REPDON03 + REPDON04 + REPDON05 + REPDON06 + REPDON07 ;
ADONS = BON * (1-V_CNR) ;
regle 33407016:
application : pro ,  oceans , iliad , batch  ;

RDONS = max( min( RON , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET
			-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
                        -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
                        -RCOMP-RCREAT-RRETU) , 0 );

regle 4082 :
application : pro, oceans, iliad, batch ;



DLOGDOM = INVLOG2008 + INVLGDEB2009 + INVLGDEB + INVLGAUTRE + INVLGDEB2010 + INVLOG2009 ;


DDOMSOC1 = INVSOCNRET ;

DLOGSOC = INVSOC2010 + INVLOGSOC ;


DLOCENT = INVENDEB2009 + INVRETRO1 + INVRETRO2 + INVINIT + INVAUTRE + INVDOMRET50 + INVDOMRET60 + INVDIRENT + INVAUTEN2009 ;

DCOLENT = INVOMREP + NRETROC50 + NRETROC40 + INVENDI + AUTRENT ;

regle 4000 :
application : pro, oceans, iliad, batch ;



TOTALPLAF = INVRETQN + INVRETQK + INVRETKG + INVRETQP + INVRETQG + INVRETMA + INVRETQO + INVRETQF + INVRETLG 
	    + INVRETQR + INVRETQI + INVRETKS + INVRETQS + INVRETQJ + INVRETLS + INVRETQL + INVRETQM + INVRETQD 
	    + INVRETQNR + INVRETQKR + INVRETKGR + INVRETQPR + INVRETQGR + INVRETMAR + INVRETQOR + INVRETQFR 
	    + INVRETLGR
	     ;

RNIDOM = arr((RNG + TTPVQ) * TX15/100) ;

INDPLAF = positif(RNIDOM - TOTALPLAF) * positif(OPTPLAF15) ;


INVRETQNA = min(arr(NINVRETQN * TX35 / 100) , RNIDOM) * (1 - V_CNR) ;

INVRETQKA = min(arr(NINVRETQK * TX35 / 100) , max(0 , RNIDOM - INVRETQNA)) * (1 - V_CNR) ;

INVRETKGA = min(arr(NINVRETKG * TX35 / 100) , max(0 , RNIDOM - INVRETQNA - INVRETQKA)) * (1 - V_CNR) ;

INVRETQPA = min(arr(NINVRETQP * TX40 / 100) , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA)) * (1 - V_CNR) ;

INVRETQGA = min(arr(NINVRETQG * TX40 / 100) , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA)) * (1 - V_CNR) ;

INVRETMAA = min(arr(NINVRETMA * TX40 / 100) , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA)) * (1 - V_CNR) ;

INVRETQOA = min(arr(NINVRETQO * TX50 / 100) , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA)) * (1 - V_CNR) ;

INVRETQFA = min(arr(NINVRETQF * TX50 / 100) , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA)) * (1 - V_CNR) ;

INVRETLGA = min(arr(NINVRETLG * TX50 / 100) , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA)) * (1 - V_CNR) ;

INVRETQRA = min(NINVRETQR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA)) * (1 - V_CNR) ;

INVRETQIA = min(NINVRETQI , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA)) * (1 - V_CNR) ;

INVRETKSA = min(NINVRETKS , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA)) * (1 - V_CNR) ;

INVRETQSA = min(NINVRETQS , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA)) * (1 - V_CNR) ;

INVRETQJA = min(NINVRETQJ , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA)) * (1 - V_CNR) ;

INVRETLSA = min(NINVRETLS , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA)) * (1 - V_CNR) ;

INVRETQLA = min(NINVRETQL , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA)) * (1 - V_CNR) ;

INVRETQMA = min(NINVRETQM , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				   - INVRETQLA)) * (1 - V_CNR) ;

INVRETQDA = min(NINVRETQD , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				   - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				   - INVRETQLA - INVRETQMA)) * (1 - V_CNR) ;

INVRETQNRA = min(NINVRETQNR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA)) * (1 - V_CNR) ;

INVRETQKRA = min(NINVRETQKR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA)) * (1 - V_CNR) ;

INVRETKGRA = min(NINVRETKGR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA - INVRETQKRA)) * (1 - V_CNR) ;

INVRETQPRA = min(NINVRETQPR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA - INVRETQKRA - INVRETKGRA)) * (1 - V_CNR) ;

INVRETQGRA = min(NINVRETQGR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA - INVRETQKRA - INVRETKGRA - INVRETQPRA)) * (1 - V_CNR) ;

INVRETMARA = min(NINVRETMAR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA - INVRETQKRA - INVRETKGRA - INVRETQPRA - INVRETQGRA)) * (1 - V_CNR) ;

INVRETQORA = min(NINVRETQOR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA - INVRETQKRA - INVRETKGRA - INVRETQPRA - INVRETQGRA
				     - INVRETMARA)) * (1 - V_CNR) ;

INVRETQFRA = min(NINVRETQFR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA - INVRETQKRA - INVRETKGRA - INVRETQPRA - INVRETQGRA
				     - INVRETMARA - INVRETQORA)) * (1 - V_CNR) ;

INVRETLGRA = min(NINVRETLGR , max(0 , RNIDOM - INVRETQNA - INVRETQKA - INVRETKGA - INVRETQPA - INVRETQGA - INVRETMAA - INVRETQOA
				     - INVRETQFA - INVRETLGA - INVRETQRA - INVRETQIA - INVRETKSA - INVRETQSA - INVRETQJA - INVRETLSA
				     - INVRETQLA - INVRETQMA - INVRETQDA - INVRETQNRA - INVRETQKRA - INVRETKGRA - INVRETQPRA - INVRETQGRA
				     - INVRETMARA - INVRETQORA - INVRETQFRA)) * (1 - V_CNR) ;


ALOGDOM = (INVLOG2008 + INVLGDEB2009 + INVLGDEB + (INVRETQL * (1 - INDPLAF) + INVRETQLA * INDPLAF 
				                + INVRETQM * (1 - INDPLAF) + INVRETQMA * INDPLAF
					        + INVRETQD * (1 - INDPLAF) + INVRETQDA * INDPLAF)) * (1 - V_CNR) ;

ALOGSOC = ((INVRETQN + INVRETQK + INVRETQNR + INVRETQKR) * (1 - INDPLAF) + (INVRETQNA + INVRETQKA + INVRETQNRA + INVRETQKRA) * INDPLAF) * (1 - V_CNR) * (1 - V_INDTEO)
        + ((INVRETQN + INVRETQK + INVRETQNR + INVRETQKR) * (1 - INDPLAF) + (INVRETQNA + INVRETQKA + INVRETQNRA + INVRETQKRA) * INDPLAF) * (1 - V_CNR) *(TX65/100)* (V_INDTEO) ;

ADOMSOC1 = ((INVRETKG + INVRETKGR) * (1 - INDPLAF) + (INVRETKGA + INVRETKGRA) * INDPLAF) * (1 - V_CNR) * (1 - V_INDTEO) 
         + ((INVRETKG + INVRETKGR) * (1 - INDPLAF) + (INVRETKGA + INVRETKGRA) * INDPLAF) * (1 - V_CNR) * (TX65/100)* (V_INDTEO) ;

ALOCENT = (INVENDEB2009 + (INVRETQO + INVRETQOR + INVRETQP + INVRETQPR + INVRETQF + INVRETQFR + INVRETQG + INVRETQGR + INVRETQR + INVRETQS + (INVRETQI + INVRETQJ) 
			   * (1 - V_INDTEO)) * (1 - INDPLAF)
          + (INVRETQOA + INVRETQORA + INVRETQPA + INVRETQPRA + INVRETQFA + INVRETQFRA + INVRETQGA + INVRETQGRA + INVRETQRA + INVRETQSA + (INVRETQIA + INVRETQJA) 
			   * (1 - V_INDTEO)) * INDPLAF) 
           * (1 - V_CNR) ;

ACOLENT = (INVOMREP + (INVRETLG + INVRETLGR + INVRETMA + INVRETMAR + INVRETKS + INVRETLS) * (1 - INDPLAF) 
		    + (INVRETLGA + INVRETLGRA + INVRETMAA + INVRETMARA + INVRETKSA + INVRETLSA) * INDPLAF)
	   * (1 - V_CNR) ;

regle 4083:
application : pro, oceans, iliad, batch ;

NINVRETQB = max(min(INVLOG2008 , RRI1) , 0) * (1 - V_CNR) ;

NINVRETQC = max(min(INVLGDEB2009 , RRI1-INVLOG2008) , 0) * (1 - V_CNR) ;

NINVRETQT = max(min(INVLGDEB , RRI1-INVLOG2008-INVLGDEB2009) , 0) * (1 - V_CNR) ;

NINVRETQL = max(min(INVLGAUTRE , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB) , 0) * (1 - V_CNR) ;

NINVRETQM = max(min(INVLGDEB2010 , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-NINVRETQL) , 0) * (1 - V_CNR) ;

NINVRETQD = max(min(INVLOG2009 , RRI1-INVLOG2008-INVLGDEB2009-INVLGDEB-NINVRETQL-NINVRETQM) , 0) * (1 - V_CNR) ;

NRLOGDOM = (INVLOG2008 + INVLGDEB2009 + INVLGDEB + NINVRETQL + NINVRETQM + NINVRETQD) * (1 - V_CNR) ;

regle 14084:
application : pro, oceans, iliad, batch ;

NINVRETKG = max(min(INVSOCNRET , RRI1-NRLOGDOM-NRRI2) , 0) * (1 - V_CNR) ;

NINVRETQN = max(min(INVSOC2010 , RRI1-NRLOGDOM-NRRI2-NINVRETKG) , 0) * (1 - V_CNR) ;

NINVRETQK = max(min(INVLOGSOC , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN) , 0) * (1 - V_CNR) ;

NINVRETQNR = (NINVRETQN - arr(NINVRETQN * TX35 / 100)) * (1 - V_CNR) ;

NINVRETQKR = (NINVRETQK - arr(NINVRETQK * TX35 / 100)) * (1 - V_CNR) ;

NINVRETKGR = (NINVRETKG - arr(NINVRETKG * TX35 / 100)) * (1 - V_CNR) ;

NRDOMSOC1 = NINVRETKG ;

NRLOGSOC = NINVRETQN + NINVRETQK ;

regle 4084:
application : pro, oceans, iliad, batch ;

INVRETQN = min(arr(NINVRETQN * TX35 / 100) , PLAF_INVDOM) * (1 - V_CNR) ;

INVRETQK = min(arr(NINVRETQK * TX35 / 100) , max(0 , PLAF_INVDOM - INVRETQN)) * (1 - V_CNR) ;

INVRETKG = min(arr(NINVRETKG * TX35 / 100) , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK)) * (1 - V_CNR) ;

INVRETQNR = min(arr(INVRETQN * 13 / 7) , max(0 , NINVRETQN - INVRETQN)) * (1 - V_CNR) ;

INVRETQKR = min(min(arr(INVRETQK * 13 / 7) , max(0 , NINVRETQK - INVRETQK)) , max(0 , PLAF_INVDOM1 - INVRETQNR)) * (1 - V_CNR) ;

INVRETKGR = min(min(arr(INVRETKG * 13 / 7) , max(0 , NINVRETKG - INVRETKG)) , max(0 , PLAF_INVDOM1 - INVRETQNR - INVRETQKR)) * (1 - V_CNR) ;

regle 4084111:
application : pro, oceans, iliad, batch ;

RSOC5 = arr(max(min(INVRETKG * (1 - INDPLAF) + INVRETKGA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
			     -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
			     -RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS) , 0)) * (1 - V_CNR) ;

RSOC6 = arr(max(min(INVRETKGR * (1 - INDPLAF) + INVRETKGRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
			     -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
			     -RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RSOC5) , 0)) * (1 - V_CNR) ;

RDOMSOC1 =  (1 - V_CNR) * ((1 - V_INDTEO) * (RSOC5 + RSOC6)
           + (V_INDTEO) * arr((V_RSOC5 + V_RSOC6) * (TX65/100))) ;

RSOC1 =  arr(max(min(INVRETQN  * (1 - INDPLAF) + INVRETQNA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
			     -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
			     -RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RDOMSOC1) , 0)) * (1 - V_CNR) ;

RSOC2 =  arr(max(min(INVRETQK * (1 - INDPLAF) + INVRETQKA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
                             -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
			     -RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RDOMSOC1-RSOC1) , 0)) * (1 - V_CNR) ;

RSOC3 = arr(max(min(INVRETQNR * (1 - INDPLAF) + INVRETQNRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
			     -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
			     -RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RDOMSOC1-RSOC1-RSOC2) , 0)) * (1 - V_CNR) ;

RSOC4 =  arr(max(min(INVRETQKR * (1 - INDPLAF) + INVRETQKRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
                             -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
			     -RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RDOMSOC1-RSOC1-RSOC2-RSOC3) , 0)) * (1 - V_CNR) ;  

RLOGSOC = ((1 - V_INDTEO) * (RSOC1 + RSOC2 + RSOC3 + RSOC4) 
            + V_INDTEO * max (min (arr((V_RSOC2 + V_RSOC4) * (TX65/100)) + arr((V_RSOC1 + V_RSOC3) * (TX65/100)) , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
                                               -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
			                       -RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RDOMSOC1 ) , 0))
          * (1 - V_CNR) ;
			      
regle 4085:
application : pro, oceans, iliad, batch ;

NINVRETMM = max(min(INVOMREP , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3) , 0) 
	     * (1 - V_CNR) ;

NINVRETMA = max(min(NRETROC40 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP) , 0) 
	     * (1 - V_CNR) ;

NINVRETLG = max(min(NRETROC50 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA) , 0) 
	     * (1 - V_CNR) ;

NINVRETKS = max(min(INVENDI , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG) , 0) 
	     * (1 - V_CNR) ;

NINVRETLS = max(min(AUTRENT , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS) , 0) 
	     * (1 - V_CNR) ;

NINVRETQE = max(min(INVENDEB2009 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
				) , 0) * (1 - V_CNR) ;

NINVRETQP = max(min(INVRETRO2 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
				-INVENDEB2009) , 0) * (1 - V_CNR) ;

NINVRETQG = max(min(INVDOMRET60 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
				  -INVENDEB2009-NINVRETQP) , 0) * (1 - V_CNR) ;

NINVRETQO = max(min(INVRETRO1 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
				-INVENDEB2009-NINVRETQP-NINVRETQG) , 0) * (1 - V_CNR) ;

NINVRETQF = max(min(INVDOMRET50 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
				  -INVENDEB2009-NINVRETQP-NINVRETQG-NINVRETQO) , 0) * (1 - V_CNR) ;

NINVRETQR = max(min(INVIMP , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
			     -INVENDEB2009-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF) , 0) * (1 - V_CNR) ;

NINVRETQI = max(min(INVDIR2009 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
				 -INVENDEB2009-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR) , 0) * (1 - V_CNR) ;

NINVRETQS = max(min(INVAUTRE , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
			       -INVENDEB2009-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR-NINVRETQI) , 0) * (1 - V_CNR) ;

NINVRETQJ = max(min(INVAUTEN2009 , RRI1-NRLOGDOM-NRRI2-NINVRETKG-NINVRETQN-NINVRETQK-NRRI3-INVOMREP-NINVRETMA-NINVRETLG-NINVRETKS-NINVRETLS
				   -INVENDEB2009-NINVRETQP-NINVRETQG-NINVRETQO-NINVRETQF-NINVRETQR-NINVRETQI-NINVRETQS) , 0) * (1 - V_CNR) ;

NINVRETQPR = (NINVRETQP - arr(NINVRETQP * TX40 / 100)) * (1 - V_CNR) ;

NINVRETQGR = (NINVRETQG - arr(NINVRETQG * TX40 / 100)) * (1 - V_CNR) ;

NINVRETMAR = (NINVRETMA - arr(NINVRETMA * TX40 / 100)) * (1 - V_CNR) ;

NINVRETQOR = (NINVRETQO - arr(NINVRETQO * TX50 / 100)) * (1 - V_CNR) ;

NINVRETQFR = (NINVRETQF - arr(NINVRETQF * TX50 / 100)) * (1 - V_CNR) ;

NINVRETLGR = (NINVRETLG - arr(NINVRETLG * TX50 / 100)) * (1 - V_CNR) ;

regle 14083:
application : pro, oceans, iliad, batch ;

INVRETMM = NINVRETMM * (1 - V_CNR) ;

INVRETQE = NINVRETQE * (1 - V_CNR) ;

INVRETQP = min(arr(NINVRETQP * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG)) * (1 - V_CNR) ;

INVRETQPR = min(arr(INVRETQP * 3 / 2) , max(0 , NINVRETQP - INVRETQP)) * (1 - V_CNR) ;

INVRETQG = min(arr(NINVRETQG * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP)) * (1 - V_CNR) ;

INVRETQGR = min(min(arr(INVRETQG * 3 / 2) , max(0 , NINVRETQG - INVRETQG)) , max(0 , PLAF_INVDOMR - INVRETQPR)) * (1 - V_CNR) ;

INVRETMA = min(arr(NINVRETMA * TX40 / 100) , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG)) * (1 - V_CNR) ;

INVRETMAR = min(min(arr(INVRETMA * 3 / 2) , max(0 , NINVRETMA - INVRETMA)) , max(0 , PLAF_INVDOMR - INVRETQPR - INVRETQGR)) * (1 - V_CNR) ;

INVRETQO = min(arr(NINVRETQO * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA)) * (1 - V_CNR) ;

INVRETQOR = min(min(INVRETQO , max(0 , NINVRETQO - INVRETQO)) , max(0 , PLAF_INVDOMR - INVRETQPR - INVRETQGR - INVRETMAR)) * (1 - V_CNR) ;

INVRETQF = min(arr(NINVRETQF * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO)) * (1 - V_CNR) ;

INVRETQFR = min(min(INVRETQF , max(0 , NINVRETQF - INVRETQF)) , max(0 , PLAF_INVDOMR - INVRETQPR - INVRETQGR - INVRETMAR - INVRETQOR)) * (1 - V_CNR) ;

INVRETLG = min(arr(NINVRETLG * TX50 / 100) , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO - INVRETQF)) * (1 - V_CNR) ;

INVRETLGR = min(min(INVRETLG , max(0 , NINVRETLG - INVRETLG)) , max(0 , PLAF_INVDOMR - INVRETQPR - INVRETQGR - INVRETMAR - INVRETQOR - INVRETQFR)) * (1 - V_CNR) ;

INVRETQR = NINVRETQR * (1 - V_CNR) ;

INVRETQI = NINVRETQI * (1 - V_CNR) ;

INVRETKS = NINVRETKS * (1 - V_CNR) ; 

INVRETQS = min(NINVRETQS , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO - INVRETQF 
					       - INVRETLG)) * (1 - V_CNR) ;

INVRETQJ = min(NINVRETQJ , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO - INVRETQF 
					       - INVRETLG - INVRETQS)) * (1 - V_CNR) ;

INVRETLS = min(NINVRETLS , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO - INVRETQF 
					       - INVRETLG - INVRETQS - INVRETQJ)) * (1 - V_CNR) ;

regle 7714083:
application : pro, oceans, iliad, batch ;

RENT1 = max(min(INVRETQP * (1 - INDPLAF) + INVRETQPA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
				-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
				-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP
				-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT) , 0) * (1 - V_CNR) ;

RENT2 = max(min(INVRETQG * (1 - INDPLAF) + INVRETQGA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1) , 0) * (1 - V_CNR) ;

RENT3 = max(min(INVRETQO * (1 - INDPLAF) + INVRETQOA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
				-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
				-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP
				-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT
                                -RENT1-RENT2) , 0) * (1 - V_CNR) ;

RENT4 = max(min( INVRETQF * (1 - INDPLAF) + INVRETQFA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
		                 -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE
		                 -RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA
				 -RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP
				 -RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3) , 0) * (1 - V_CNR) ;

RENT5 = max(min( INVENDEB2009 , RRI1-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3-RENT4) , 0) * (1 - V_CNR) ;

RENT6 = max(min(INVRETQR * (1 - INDPLAF) + INVRETQRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3-RENT4-RENT5) , 0) * (1 - V_CNR) ;

RENT7 = max(min(INVRETQI * (1 - INDPLAF) + INVRETQIA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				 -RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				 -RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				 -RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				 -RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3
				 -RENT4-RENT5-RENT6) , 0) * (1 - V_CNR) ;

RENT8 = max(min(INVRETQS * (1 - INDPLAF) + INVRETQSA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				 -RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				 -RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				 -RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				 -RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3
				 -RENT4-RENT5-RENT6-RENT7) , 0) * (1 - V_CNR) ;

RENT9 = max(min(INVRETQJ * (1 - INDPLAF) + INVRETQJA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				 -RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				 -RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				 -RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				 -RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3
				 -RENT4-RENT5-RENT6-RENT7-RENT8) , 0) * (1 - V_CNR) ;

RENT10 = max(min(INVRETQPR * (1 - INDPLAF) + INVRETQPRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				 -RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				 -RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				 -RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				 -RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3
				 -RENT4-RENT5-RENT6-RENT7-RENT8-RENT9) , 0) * (1 - V_CNR) ;

RENT11 = max(min(INVRETQGR * (1 - INDPLAF) + INVRETQGRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				 -RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				 -RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				 -RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				 -RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3
				 -RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10) , 0) * (1 - V_CNR) ;

RENT12 = max(min(INVRETQOR * (1 - INDPLAF) + INVRETQORA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				 -RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				 -RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				 -RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				 -RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3
				 -RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11) , 0) * (1 - V_CNR) ;

RENT13 = max(min(INVRETQFR * (1 - INDPLAF) + INVRETQFRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				 -RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				 -RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				 -RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				 -RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT-RENT1-RENT2-RENT3
				 -RENT4-RENT5-RENT6-RENT7-RENT8-RENT9-RENT10-RENT11-RENT12) , 0) * (1 - V_CNR) ;

RLOCENT = ((1 - V_INDTEO) * (RENT1 + RENT2 + RENT3 + RENT4 + RENT5 + RENT6 + RENT7 + RENT8 + RENT9 + RENT10 + RENT11 + RENT12 + RENT13) 
           + V_INDTEO * max(min (arr((V_RENT3+V_RENT12)*(TX50/100)) + arr((V_RENT1 + V_RENT10)*(TX60/100)) 
			       + arr((V_RENT4 + V_RENT13)*(TX50/100)) + arr((V_RENT2 + V_RENT11)*(TX60/100))
			       + V_RENT5,
	                              IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
				      -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				      -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP
				      -RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RCOLENT) , 0))
          * (1 - V_CNR) ;


RIDOMENT = RLOCENT ;

regle 14085:
application : pro, oceans, iliad, batch ;

INVRETQB = NINVRETQB * (1 - V_CNR) ; 

INVRETQC = NINVRETQC * (1 - V_CNR) ; 

INVRETQT = NINVRETQT * (1 - V_CNR) ; 

INVRETQL = min(NINVRETQL , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO 
					       - INVRETQF - INVRETLG - INVRETQS - INVRETQJ - INVRETLS)) * (1 - V_CNR) ;

INVRETQM = min(NINVRETQM , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO 
					       - INVRETQF - INVRETLG - INVRETQS - INVRETQJ - INVRETLS - INVRETQL)) * (1 - V_CNR) ;

INVRETQD = min(NINVRETQD , max(0 , PLAF_INVDOM - INVRETQN - INVRETQK - INVRETKG - INVRETQP - INVRETQG - INVRETMA - INVRETQO 
					       - INVRETQF - INVRETLG - INVRETQS - INVRETQJ - INVRETLS - INVRETQL - INVRETQM)) * (1 - V_CNR) ;

regle 14086:
application : pro, oceans, iliad, batch ;

RLOG1 = max(min(INVLOG2008 , RRI1) , 0) * (1 - V_CNR) ;

RLOG2 = max(min(INVLGDEB2009 , RRI1-RLOG1) , 0) * (1 - V_CNR) ;

RLOG3 = max(min(INVLGDEB , RRI1-RLOG1-RLOG2) , 0) * (1 - V_CNR) ;

RLOG4 = max(min(INVRETQL * (1 - INDPLAF) + INVRETQLA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3) , 0) * (1 - V_CNR) ;

RLOG5 = max(min(INVRETQM * (1 - INDPLAF) + INVRETQMA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3-RLOG4) , 0) * (1 - V_CNR) ;

RLOG6 = max(min(INVRETQD * (1 - INDPLAF) + INVRETQDA * INDPLAF , RRI1-RLOG1-RLOG2-RLOG3-RLOG4-RLOG5) , 0) * (1 - V_CNR) ;

RLOGDOM = (RLOG1 + RLOG2 + RLOG3 + RLOG4 + RLOG5 + RLOG6) * (1 - V_CNR) ;

RINVDOMTOMLG = RLOGDOM ;

regle 4087:
application : pro, oceans, iliad, batch ;
RLOC1 = max(min(INVOMREP , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR
				-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA
				-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-RLOGSOC-RDOMSOC1
				-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU
				-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT) , 0) * (1 - V_CNR) ;

RLOC2 = max(min(INVRETLG * (1 - INDPLAF) + INVRETLGA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9
				-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RLOC1) , 0) * (1 - V_CNR) ;

RLOC3 = max(min(INVRETMA * (1 - INDPLAF) + INVRETMAA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RLOC1-RLOC2) , 0) * (1 - V_CNR) ;

RLOC4 = max(min(INVRETLGR * (1 - INDPLAF) + INVRETLGRA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RLOC1-RLOC2-RLOC3) , 0) * (1 - V_CNR) ;

RLOC5 = max(min(INVRETMAR * (1 - INDPLAF) + INVRETMARA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4) , 0) * (1 - V_CNR) ;

RLOC6 = max(min(INVRETKS * (1 - INDPLAF) + INVRETKSA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5) , 0) * (1 - V_CNR) ;

RLOC7 = max(min(INVRETLS * (1 - INDPLAF) + INVRETLSA * INDPLAF , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE
				-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV
				-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT-RRETU
				-RDONS-RLOGSOC-RDOMSOC1-RCELDO-RCELDOP-RCELREPDOP9-RCELMET-RCELNP-RCELREPNP9-RCELRRED09
				-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-RLOC1-RLOC2-RLOC3-RLOC4-RLOC5-RLOC6) , 0) * (1 - V_CNR) ;

RCOLENT = ((1-V_INDTEO) * (RLOC1 + RLOC2 + RLOC3 + RLOC4 + RLOC5 + RLOC6 + RLOC7)
          + (V_INDTEO) * (arr((V_RLOC2+V_RLOC4)*(TX50/100)) + arr((V_RLOC3+V_RLOC5)*(TX60/100)) + V_RLOC1))
	  * (1 - V_CNR);

regle 4086:
application : pro, oceans, iliad, batch ;

REPKG = max(0 , INVSOCNRET - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
				     -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				     -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS)) * (1 - V_CNR) ;

REPDOMSOC1 = REPKG * (1 - V_CNR) ;


REPQN = max(0 , INVSOC2010 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
				     -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				     -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET)) * (1 - V_CNR) ;

REPQK = max(0 , INVLOGSOC - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
				    -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
				    -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010)) * (1 - V_CNR) ;

REPDOMSOC = (REPQN + REPQK) * (1 - V_CNR) ;


REPMM = max(0 , INVOMREP - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                   -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                   -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9-RCELMET
				   -RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT)) * (1 - V_CNR) ;

REPMA = max(0 , NRETROC40 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                    -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                    -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                    -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP)) * (1 - V_CNR) ;

REPLG = max(0 , NRETROC50 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                    -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                    -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                    -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				    -NRETROC40)) * (1 - V_CNR) ;

REPKS = max(0 , INVENDI - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                  -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                  -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
				  -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				  -NRETROC40-NRETROC50)) * (1 - V_CNR) ;

REPLS = max(0 , AUTRENT - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                  -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                  -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                  -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				  -NRETROC40-NRETROC50-INVENDI)) * (1 - V_CNR) ;

REPDOMENTR1 = (REPMM + REPLG + REPMA + REPKS + REPLS) * (1 - V_CNR) ;


REPQE = max(0 , INVENDEB2009 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                       -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                       -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                       -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				       -NRETROC40-NRETROC50-INVENDI-AUTRENT)) * (1 - V_CNR) ;

REPQP = max(0 , INVRETRO2 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                    -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                    -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                    -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				    -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009)) * (1 - V_CNR) ;

REPQG = max(0 , INVDOMRET60 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                      -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                      -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                      -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				      -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009-INVRETRO2)) * (1 - V_CNR) ;

REPQO = max(0 , INVRETRO1 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                      -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                      -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                      -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				      -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009-INVRETRO2-INVDOMRET60)) * (1 - V_CNR) ;

REPQF = max(0 , INVDOMRET50 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                      -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                      -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                      -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				      -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009-INVRETRO2-INVDOMRET60-INVRETRO1)) * (1 - V_CNR) ;

REPQR = max(0 , INVIMP - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                 -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                 -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                 -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				 -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50)) * (1 - V_CNR) ;

REPQI = max(0 , INVDIR2009 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                     -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                     -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                     -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				     -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP)) * (1 - V_CNR) ;

REPQS = max(0 , INVAUTRE - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                   -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                   -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                   -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				   -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009)) * (1 - V_CNR) ;

REPQJ = max(0 , INVAUTEN2009 - max(0 , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP
                                       -RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-DLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR
                                       -RTOUREPA-RCOMP-RCREAT-RRETU-RDONS-INVSOCNRET-INVSOC2010-INVLOGSOC-RCELDO-RCELDOP-RCELREPDOP9
                                       -RCELMET-RCELNP-RCELREPNP9-RCELRRED09-RRESINEUV-RRESIVIEU-RMEUBLE-RREDMEUB-RNOUV-RPATNAT-RIDOMPROTOT-INVOMREP
				       -NRETROC40-NRETROC50-INVENDI-AUTRENT-INVENDEB2009-INVRETRO2-INVDOMRET60-INVRETRO1-INVDOMRET50-INVIMP-INVDIR2009-INVAUTRE)) * (1 - V_CNR) ;

REPDOMENTR = (REPQE + REPQP + REPQG + REPQO + REPQF + REPQR + REPQI + REPQS + REPQJ) * (1 - V_CNR) ;

regle 407018:
application : pro ,  oceans , iliad , batch  ;
SEUILRED1=arr((arr(RI1)+REVQUO) / NBPT);
regle 407020:
application:pro, oceans, iliad, batch;
RETUD = (1 - V_CNR) * arr((RDENS * MTRC) + (RDENL * MTRL) + (RDENU * MTRS) + (RDENSQAR * MTRC /2) + (RDENLQAR * MTRL /2) + (RDENUQAR * MTRS /2));
RNBE = RDENS + RDENL + RDENU + RDENSQAR + RDENLQAR + RDENUQAR ;
DNBE = RDENS + RDENL + RDENU + RDENSQAR + RDENLQAR + RDENUQAR ;
regle 100407020:
application:pro, oceans, iliad, batch;
RRETU = max( min( RETUD , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE
				-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV-RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF
				-RTOURHOT-RTOURTRA-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA-RCOMP-RCREAT ) , 0 );

regle 407022 :
application : pro ,  oceans , iliad , batch  ;
BFCPI = ( positif(BOOL_0AM) * min ( FCPI,PLAF_FCPI*2)
        + positif(1 - BOOL_0AM) * min ( FCPI,PLAF_FCPI) )
        * (1 - V_CNR);
RFCPI = arr (BFCPI * TX_FCPI /100) ;
RINNO = max( min( RFCPI , IDOM11-DEC11
           -RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP) , 0 );
regle 407023 :
application : pro ,  oceans , iliad , batch  ;

BPRESCOMP =(RDPRESREPORT 
	   + (1-positif(RDPRESREPORT+0)) * 
	   arr(
	         ((1 - present(SUBSTITRENTE)) * 
                  arr (
                 null(PRESCOMP2000 - PRESCOMPJUGE)
                   * min(PLAFPRESCOMP,PRESCOMP2000)
	         + positif(PRESCOMPJUGE - PRESCOMP2000)
                   * (positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE))
                   * PRESCOMP2000
	         + positif(PRESCOMPJUGE - PRESCOMP2000)
                    * (1 - positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE))
                    * PLAFPRESCOMP * PRESCOMP2000/PRESCOMPJUGE
                       )
	       +
             present(SUBSTITRENTE) *
                  arr (
                   null(PRESCOMP2000 - SUBSTITRENTE)
		   * 
		   (positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE)*SUBSTITRENTE
		   + 
		   positif(PRESCOMPJUGE-PLAFPRESCOMP)*arr(PLAFPRESCOMP*SUBSTITRENTE/PRESCOMPJUGE))
                 + 
		   positif(SUBSTITRENTE - PRESCOMP2000)
		   * (positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE)*PRESCOMP2000
		   + 
		   positif(PRESCOMPJUGE-PLAFPRESCOMP)*arr(PLAFPRESCOMP*(SUBSTITRENTE/PRESCOMPJUGE)*(PRESCOMP2000/SUBSTITRENTE)))
                       )
	           )
                )
              )
               *(1 - V_CNR);




RPRESCOMP = arr (BPRESCOMP * TX_PRESCOMP / 100) * (1 -V_CNR);
BPRESCOMP01 = max(0,(1 - present(SUBSTITRENTE)) * 
                   (  positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE)
                       * (PRESCOMPJUGE - BPRESCOMP)
                     + positif(PRESCOMPJUGE - PLAFPRESCOMP)
                       * (PLAFPRESCOMP - BPRESCOMP)
                   )
	       +
             present(SUBSTITRENTE) *
                   (  positif_ou_nul(PLAFPRESCOMP -PRESCOMPJUGE)
                       * (SUBSTITRENTE - PRESCOMP2000)
                     + positif(PRESCOMPJUGE - PLAFPRESCOMP)
		     *arr(PLAFPRESCOMP*(SUBSTITRENTE/PRESCOMPJUGE)*((SUBSTITRENTE-PRESCOMP2000)/SUBSTITRENTE))
                   )
		* (1 - V_CNR)
		);
DPRESCOMP = PRESCOMP2000 + RDPRESREPORT ;
APRESCOMP = BPRESCOMP * (1 - V_CNR);
RRPRESCOMP = max( min( RPRESCOMP , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR) , 0) ;
RPRESCOMPREP =  max( min( RPRESCOMP , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR) , 0) * positif(RDPRESREPORT);
RPRESCOMPAN =  RRPRESCOMP * (1-positif(RDPRESREPORT));
regle 408 :
application : pro ,  oceans , iliad , batch  ;
FORTRA = RDFORESTRA + REPFOR + REPSINFOR ;

DFOREST = RDFOREST + FORTRA + RDFORESTGES ;


AFOREST = ( min (RDFOREST, PLAF_FOREST * (1 + BOOL_0AM)) 
	   + min (FORTRA, PLAF_FOREST1 * (1 + BOOL_0AM)) 
	    + min (RDFORESTGES, PLAF_FOREST2 * (1 + BOOL_0AM)) ) * (1 - V_CNR) ;


RFOREST = arr (AFOREST  * TX_FOREST / 100 ) ;

RFOR = max( min( RFOREST , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC-RAIDE-RDIFAGRI
			    -RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV ) , 0 );


REPBON = max(0 , REPFOR - (PLAF_FOREST1 * (1 + BOOL_0AM))) * (1 - V_CNR) ;

REPSIN = max(0 , REPSINFOR - (PLAF_FOREST1 * (1 + BOOL_0AM))) * (1 - V_CNR) ; 

REPFOREST = max(0 , max(0 , FORTRA - (PLAF_FOREST1 * (1 + BOOL_0AM))) - (REPBON + REPSIN)) * (1 - positif(SINISFORET)) * (1 - V_CNR) ;

REPFORSIN = max(0 , max(0 , FORTRA - (PLAF_FOREST1 * (1 + BOOL_0AM))) - (REPBON + REPSIN)) * positif(SINISFORET) * (1 - V_CNR) ;

REPFORTOT = REPBON + REPFOREST ;

REPFORESTA = REPSIN + REPFORSIN ;
regle 4096:
application : pro ,  oceans , iliad , batch  ;


DCREAT = NBCREAT + NBCREAT1 + CONVCREA + NBCREAT2 ;

DCREATHANDI = NBCREATHANDI + NBCREATHANDI1 + CONVHAND + NBCREATHANDI2 ;


ACREAT = DCREAT * (1 - V_CNR) ;

ACREATHANDI = DCREATHANDI * (1 - V_CNR) ;


RCREATEUR = (NBCREAT + NBCREAT1/2 + CONVCREA/2 + NBCREAT2 ) * PLAF_CRENTR * (1 - V_CNR) ;

RCREATEURHANDI = (NBCREATHANDI + NBCREATHANDI1/2 + CONVHAND/2 + NBCREATHANDI2) * PLAF_CRENTRH * (1 - V_CNR) ;

regle 1004096:
application : pro ,  oceans , iliad , batch  ;

RCREAT = max( min( RCREATEUR + RCREATEURHANDI , IDOM11-DEC11-RREPA-RSYND-RRESTIMO-RPECHE-RFIPC
		                                -RAIDE-RDIFAGRI-RFORET-RTITPRISE-RCINE-RSOCREPR-RRPRESCOMP-RINNO-RSOUFIP-RRIRENOV
                                                -RFOR-RHEBE-RSURV-RLOGDOM-RTOURNEUF-RTOURHOT-RTOURTRA
						-RTOURES-RTOURREP-RTOUHOTR-RTOUREPA ) , 0 );

regle 4095:
application : pro ,  oceans , iliad , batch  ;
BDIFAGRI =   min ( INTDIFAGRI , LIM_DIFAGRI * ( 1 + BOOL_0AM))
           * ( 1 - V_CNR);
DDIFAGRI = INTDIFAGRI ;
ADIFAGRI = BDIFAGRI ;

RAGRI = arr (BDIFAGRI  * TX_DIFAGRI / 100 );
RDIFAGRI = max( min( RAGRI , IDOM11-DEC11
           -RREPA-RSYND-RFIPC-RAIDE) , 0 );

regle 422:
application : pro , oceans , iliad  , batch;
PREHAB = PREHABT + PREHABTN + PREHABT1 + PREHABT2;

BCIHP = max(( PLAFHABPRIN * (1 + BOOL_0AM) * (1+positif(V_0AP+V_0AF+V_0CG+V_0CI+V_0CR))
	         + (PLAFHABPRINENF/2) * (V_0CH + V_0DP)
         	 + PLAFHABPRINENF * (V_0CR + V_0CF + V_0DJ + V_0DN)
	          ) 
	     ,0);

BCIHABPRIN1 = min(BCIHP , PREHABT) * (1 - V_CNR) ;
BCIHABPRIN2 = min(max(0,BCIHP-BCIHABPRIN1),PREHABT1) * (1 - V_CNR);
BCIHABPRIN3 = min(max(0,BCIHP-BCIHABPRIN1-BCIHABPRIN2),PREHABTN) * (1 - V_CNR);
BCIHABPRIN4 = min(max(0,BCIHP-BCIHABPRIN1-BCIHABPRIN2-BCIHABPRIN3),PREHABT2) * (1 - V_CNR);

BCIHABPRIN = BCIHABPRIN1 + BCIHABPRIN2 + BCIHABPRIN3 + BCIHABPRIN4 ;
CIHABPRIN = arr((BCIHABPRIN1 * TX40/100)
		+ (BCIHABPRIN2 * TX40/100)
		+ (BCIHABPRIN3 * TX30/100)
                + (BCIHABPRIN4 * TX20/100))* (1 - V_CNR);

regle 430 :
application : pro , oceans , iliad , batch  ;
ITRED = min( RED , IDOM11-DEC11) ;


#*************************************************************************************************************************
#
#Copyright or © or Copr.[DGFIP][2017]
#
#Ce logiciel a été initialement développé par la Direction Générale des 
#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2012 
#au titre des revenus percus en 2011. La présente version a permis la 
#génération du moteur de calcul des chaînes de taxation des rôles d'impôt 
#sur le revenu de ce millésime.
#
#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français 
#et respectant les principes de diffusion des logiciels libres. Vous pouvez 
#utiliser, modifier et/ou redistribuer ce programme sous les conditions de 
#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur 
#le site "http://www.cecill.info".
#
#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris 
#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.
#
#**************************************************************************************************************************
regle corrective base_stratemajo 120:
application :  oceans, iliad ;
MAJOIR07TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPIR_A)) * MAJOIR07TARDIF_D 
		  + positif(PROPIR_A) * MAJOIR07TARDIF_P) ;
MAJOIR08TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPIR_A)) * MAJOIR08TARDIF_D 
		  + positif(PROPIR_A) * MAJOIR08TARDIF_P) ;
MAJOIR17_1TARD_DEF = FLAG_RETARD * 
		((1 - positif(PROPIR_A)) * MAJOIR17_1TARDIF_D 
		  + positif(PROPIR_A) * MAJOIR17_1TARDIF_P) ;
MAJOIR17_2TARD_DEF = FLAG_RETARD * 
		((1 - positif(PROPIR_A)) * MAJOIR17_2TARDIF_D 
		  + positif(PROPIR_A) * MAJOIR17_2TARDIF_P) ;
MAJOIRTARDIF_DEF = positif(FLAG_TRTARDIF) * positif(FLAG_RETARD) 
			* (somme(x = 07,08 : MAJOIR0xTARDIF_DEF)
		    + MAJOIR17_1TARD_DEF + MAJOIR17_2TARD_DEF)
		    + (1 - positif(FLAG_TRTARDIF) * positif(FLAG_RETARD))
		    * MAJOIRTARDIF_REF ;
MAJOCS07TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPCS_A)) * MAJOCS07TARDIF_D 
		  + positif(PROPCS_A) * MAJOCS07TARDIF_P) ;
MAJOCS08TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPCS_A)) * MAJOCS08TARDIF_D 
		  + positif(PROPCS_A) * MAJOCS08TARDIF_P) ;
MAJOCS17TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPCS_A)) * MAJOCS17TARDIF_D 
		  + positif(PROPCS_A) * MAJOCS17TARDIF_P) ;
MAJOCSTARDIF_DEF = somme(x = 07,08,17 : MAJOCSxTARDIF_DEF);
MAJOPS07TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPPS_A)) * MAJOPS07TARDIF_D 
		  + positif(PROPPS_A) * MAJOPS07TARDIF_P) ;
MAJOPS08TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPPS_A)) * MAJOPS08TARDIF_D 
		  + positif(PROPPS_A) * MAJOPS08TARDIF_P) ;
MAJOPS17TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPPS_A)) * MAJOPS17TARDIF_D 
		  + positif(PROPPS_A) * MAJOPS17TARDIF_P) ;
MAJOPSTARDIF_DEF = somme(x = 07,08,17 : MAJOPSxTARDIF_DEF);
MAJORD07TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPRD_A)) * MAJORD07TARDIF_D 
		  + positif(PROPRD_A) * MAJORD07TARDIF_P) ;
MAJORD08TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPRD_A)) * MAJORD08TARDIF_D 
		  + positif(PROPRD_A) * MAJORD08TARDIF_P) ;
MAJORD17TARDIF_DEF = FLAG_RETARD * 
		((1 - positif(PROPRD_A)) * MAJORD17TARDIF_D 
		  + positif(PROPRD_A) * MAJORD17TARDIF_P) ;
MAJORDTARDIF_DEF = somme(x = 07,08,17 : MAJORDxTARDIF_DEF);
MAJOSA07TARDIF_DEF = FLAG_RETARD * MAJOCSAL07TARDIF_D;

MAJOSA08TARDIF_DEF = FLAG_RETARD * MAJOCSAL08TARDIF_D;
MAJOSA17TARDIF_DEF = FLAG_RETARD * MAJOCSAL17TARDIF_D;
MAJOSATARDIF_DEF = somme(x = 07,08,17 : MAJOSAxTARDIF_DEF);
MAJOGA07TARDIF_DEF = FLAG_RETARD * MAJOGAIN07TARDIF_D;

MAJOGA08TARDIF_DEF = FLAG_RETARD * MAJOGAIN08TARDIF_D;
MAJOGA17TARDIF_DEF = FLAG_RETARD * MAJOGAIN17TARDIF_D;
MAJOGAINTARDIF_DEF = somme(x = 07,08,17 : MAJOGAxTARDIF_DEF);
MAJOCDIS07TARD_DEF = FLAG_RETARD * MAJOCDIS07TARDIF_D;
MAJOCDIS08TARD_DEF = FLAG_RETARD * MAJOCDIS08TARDIF_D;
MAJOCDIS17TARD_DEF = FLAG_RETARD * MAJOCDIS17TARDIF_D;
MAJOCDISTARDIF_DEF = somme(x = 07,08,17 : MAJOCDISxTARD_DEF);
MAJORSE107TARD_DEF = FLAG_RETARD * MAJORSE107TARDIF_D;
MAJORSE108TARD_DEF = FLAG_RETARD * MAJORSE108TARDIF_D;
MAJORSE117TARD_DEF = FLAG_RETARD * MAJORSE117TARDIF_D;
MAJORSE1TARDIF_DEF = somme(x = 07,08,17 : MAJORSE1xTARD_DEF);
MAJORSE207TARD_DEF = FLAG_RETARD * MAJORSE207TARDIF_D;
MAJORSE208TARD_DEF = FLAG_RETARD * MAJORSE208TARDIF_D;
MAJORSE217TARD_DEF = FLAG_RETARD * MAJORSE217TARDIF_D;
MAJORSE2TARDIF_DEF = somme(x = 07,08,17 : MAJORSE2xTARD_DEF);
MAJORSE307TARD_DEF = FLAG_RETARD * MAJORSE307TARDIF_D;
MAJORSE308TARD_DEF = FLAG_RETARD * MAJORSE308TARDIF_D;
MAJORSE317TARD_DEF = FLAG_RETARD * MAJORSE317TARDIF_D;
MAJORSE3TARDIF_DEF = somme(x = 07,08,17 : MAJORSE3xTARD_DEF);
MAJORSE407TARD_DEF = FLAG_RETARD * MAJORSE407TARDIF_D;
MAJORSE408TARD_DEF = FLAG_RETARD * MAJORSE408TARDIF_D;
MAJORSE417TARD_DEF = FLAG_RETARD * MAJORSE417TARDIF_D;
MAJORSE4TARDIF_DEF = somme(x = 07,08,17 : MAJORSE4xTARD_DEF);
MAJOTA07TARDIF_DEF = FLAG_RETARD * MAJOTAXA07TARDIF_D;
MAJOTA08TARDIF_DEF = FLAG_RETARD * MAJOTAXA08TARDIF_D;
MAJOTA17_1TARD_DEF = FLAG_RETARD * MAJOTA17_1TARDIF_D; 
MAJOTA17_2TARD_DEF = FLAG_RETARD * MAJOTA17_2TARDIF_D; 
MAJOTAXATARDIF_DEF = somme(x = 07,08 : MAJOTA0xTARDIF_DEF)
		+ MAJOTA17_1TARD_DEF + MAJOTA17_2TARD_DEF;
MAJOHR07TARDIF_DEF = FLAG_RETARD * MAJOHR07TARDIF_D;
MAJOHR08TARDIF_DEF = FLAG_RETARD * MAJOHR08TARDIF_D;
MAJOHR17_1TARD_DEF = FLAG_RETARD * MAJOHR17_1TARDIF_D; 
MAJOHR17_2TARD_DEF = FLAG_RETARD * MAJOHR17_2TARDIF_D; 
MAJOHRTARDIF_DEF = somme(x = 07,08 : MAJOHR0xTARDIF_DEF)
		+ MAJOHR17_1TARD_DEF + MAJOHR17_2TARD_DEF;
MAJOCP07TARDIF_DEF = FLAG_RETARD * MAJOCAP07TARDIF_D;
MAJOCP08TARDIF_DEF = FLAG_RETARD * MAJOCAP08TARDIF_D;
MAJOCP17_1TARD_DEF = FLAG_RETARD * MAJOCP17_1TARDIF_D; 
MAJOCP17_2TARD_DEF = FLAG_RETARD * MAJOCP17_2TARDIF_D; 
MAJOCAPTARDIF_DEF = somme(x = 07,08 : MAJOCP0xTARDIF_DEF)
		+ MAJOCP17_1TARD_DEF + MAJOCP17_2TARD_DEF;
PROPIR_DEF = PROPIR;
PROPCS_DEF = PROPCS;
PROPPS_DEF = PROPPS;
PROPRD_DEF = PROPRD;
IRBASE_DEF = positif(FLAG_TRTARDIF) * positif(FLAG_RETARD) * IRBASE
		+ (1 - positif(FLAG_TRTARDIF)) * IRBASE_REF;
IRNINTARDIF_DEF = max(0,FLAG_RETARD *
		  (FLAG_TRTARDIF * IRBASE
		  + FLAG_TRTARDIF_R * SUPIR[00]
                  + FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRBASE) 
		    * (positif(FLAG_RECTIF) * min(SUPIR[2],IRBASE)
		      + (1 - positif(FLAG_RECTIF)) * min(IRBASE,IRBASE_REF))
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRBASE))
		      * (positif(FLAG_RECTIF) * min(SUPIR[00],IRBASE)
                     + (1 - positif(FLAG_RECTIF)) * IRBASE_REF)
		      )
                  + (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
                            * (positif(FLAG_RECTIF) * SUPIR[00]
                               + (1 - positif(FLAG_RECTIF)) * IRNINTARDIF_A)
		  ));
CSGTARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * CSBASE
		+ FLAG_TRTARDIF_R * SUPCS[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPCS[2],CSG)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPCS[00],CSG)
		   + (1 - positif(FLAG_RECTIF)) * CSGTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
		          * (positif(FLAG_RECTIF) * SUPCS[00]
		            + (1 - positif(FLAG_RECTIF)) * CSGTARDIF_A)
		    ));
PRSTARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * PSBASE
		+ FLAG_TRTARDIF_R * SUPPS[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPPS[2],PRS)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPPS[00],PRS)
		    + (1 - positif(FLAG_RECTIF)) * PRSTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPPS[00]
			  + (1 - positif(FLAG_RECTIF)) * PRSTARDIF_A)
		));
RDSTARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * RDBASE
		+ FLAG_TRTARDIF_R * SUPRD[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPRD[2],RDSN)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPRD[00],RDSN)
		     + (1 - positif(FLAG_RECTIF)) * RDSTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPRD[00]
			  + (1 - positif(FLAG_RECTIF)) * RDSTARDIF_A)
		));
CSALTARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * CSALBASE
		+ FLAG_TRTARDIF_R * SUPCSAL[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPCSAL[2],CSAL)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPCSAL[00],CSAL)
		     + (1 - positif(FLAG_RECTIF)) * CSALTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPCSAL[00]
			  + (1 - positif(FLAG_RECTIF)) * CSALTARDIF_A)
		));
CDISTARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * CDISBASE
		+ FLAG_TRTARDIF_R * SUPCDIS[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPCDIS[2],CDIS)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPCDIS[00],CDIS)
		     + (1 - positif(FLAG_RECTIF)) * CDISTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPCDIS[00]
			  + (1 - positif(FLAG_RECTIF)) * CDISTARDIF_A)
		));
TAXATARDIF_DEF = max(0,FLAG_RETARD *
		  (FLAG_TRTARDIF * TAXABASE_MAJO
		+ FLAG_TRTARDIF_R * SUPTAXA[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(TAXATARDIF_A - TAXABASE_MAJO) * min(SUPTAXA[2],TAXASSUR)
		    + (1 - positif(TARDIFEVT2) * positif(TAXATARDIF_A - TAXABASE_MAJO)) 
		      * (positif(FLAG_RECTIF) * min(SUPTAXA[00],TAXASSUR)
		    + (1 - positif(FLAG_RECTIF)) * TAXATARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPTAXA[00]
			  + (1 - positif(FLAG_RECTIF)) * TAXATARDIF_A)
		  ));
GAINTARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * GAINBASE
		+ FLAG_TRTARDIF_R * SUPGAIN[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPGAIN[2],GAINSAL)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPGAIN[00],CSAL)
		     + (1 - positif(FLAG_RECTIF)) * GAINTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPGAIN[00]
			  + (1 - positif(FLAG_RECTIF)) * GAINTARDIF_A)
		));
CAPTARDIF_DEF = max(0,FLAG_RETARD *
		  (FLAG_TRTARDIF * CAPBASE_MAJO
		+ FLAG_TRTARDIF_R * SUPCAP[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(CAPTARDIF_A - CAPBASE_MAJO) * min(SUPCAP[2],IPCAPTAXT)
		    + (1 - positif(TARDIFEVT2) * positif(CAPTARDIF_A - CAPBASE_MAJO)) 
		      * (positif(FLAG_RECTIF) * min(SUPCAP[00], IPCAPTAXT)
		    + (1 - positif(FLAG_RECTIF)) * CAPTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPCAP[00]
			  + (1 - positif(FLAG_RECTIF)) * CAPTARDIF_A)
		  ));
HRTARDIF_DEF = max(0,FLAG_RETARD *
		  (FLAG_TRTARDIF * HRBASE_MAJO
		+ FLAG_TRTARDIF_R * SUPHR[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(HRTARDIF_A - HRBASE_MAJO) * min(SUPHR[2],IHAUTREVT)
		    + (1 - positif(TARDIFEVT2) * positif(HRTARDIF_A - HRBASE_MAJO)) 
		      * (positif(FLAG_RECTIF) * min(SUPHR[00],IHAUTREVT)
		    + (1 - positif(FLAG_RECTIF)) * HRTARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPHR[00]
			  + (1 - positif(FLAG_RECTIF)) * HRTARDIF_A)
		  ));
RSE1TARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * RSE1BASE
		+ FLAG_TRTARDIF_R * SUPRSE1[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPRSE1[2],RSE1)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPRSE1[00],RSE1)
		     + (1 - positif(FLAG_RECTIF)) * RSE1TARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPRSE1[00]
			  + (1 - positif(FLAG_RECTIF)) * RSE1TARDIF_A)
		));
RSE2TARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * RSE2BASE
		+ FLAG_TRTARDIF_R * SUPRSE2[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPRSE2[2],RSE2)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPRSE2[00],RSE2)
		     + (1 - positif(FLAG_RECTIF)) * RSE2TARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPRSE2[00]
			  + (1 - positif(FLAG_RECTIF)) * RSE1TARDIF_A)
		));
RSE3TARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * RSE3BASE
		+ FLAG_TRTARDIF_R * SUPRSE3[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPRSE3[2],RSE3)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPRSE3[00],RSE3)
		     + (1 - positif(FLAG_RECTIF)) * RSE3TARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPRSE3[00]
			  + (1 - positif(FLAG_RECTIF)) * RSE3TARDIF_A)
		));
RSE4TARDIF_DEF = max(0,FLAG_RETARD *
		(FLAG_TRTARDIF * RSE4BASE
		+ FLAG_TRTARDIF_R * SUPRSE4[00]
		+ FLAG_TRTARDIF_F *
                    (positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN) * min(SUPRSE4[2],RSE4)
		    + (1 - positif(TARDIFEVT2) * positif(IRNINTARDIF_A - IRNIN)) 
		      * (positif(FLAG_RECTIF) * min(SUPRSE4[00],RSE4)
		     + (1 - positif(FLAG_RECTIF)) * RSE4TARDIF_A)
		      )
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
			* (positif(FLAG_RECTIF) * SUPRSE4[00]
			  + (1 - positif(FLAG_RECTIF)) * RSE4TARDIF_A)
		));
IRNINMAJOP_DEF = max(IRNIN_MAJOP,IRNINMAJOP_A);
CSGMAJOP_DEF = max(CSG_MAJOP,CSGMAJOP_A);
RDSMAJOP_DEF =  max(RDS_MAJOP,RDSMAJOP_A);
PRSMAJOP_DEF =  max(PRS_MAJOP,PRSMAJOP_A);
regle corrective base_stratemajo 12000:
application :  iliad ;


MAJOISF07TARD_DEF = FLAG_RETARD * MAJOISF07TARDIF_D;
MAJOISF08TARD_DEF = FLAG_RETARD * MAJOISF08TARDIF_D;
MAJOISF17TARD_DEF = FLAG_RETARD * MAJOISF17TARDIF_D;
MAJOISFTARDIF_DEF = somme(x = 07,08,17 : MAJOISFxTARD_DEF);

ISFTARDIF_DEF = max(0,FLAG_RETARD *
                (FLAG_TRTARDIF * ISF4BASE
		+ FLAG_TRTARDIF_R * SUPISF[00]
		+ FLAG_TRTARDIF_F *
		(positif(TARDIFEVT2) * positif(ISFINTARDIF_A - ISFIN) * min(SUPISF[2],ISFNET)
		+ (1 - positif(TARDIFEVT2) * positif(ISFINTARDIF_A - ISFIN))
		* (positif(FLAG_RECTIF) * min(SUPISF[00],ISFNET)
		+ (1 - positif(FLAG_RECTIF)) * ISFTARDIF_A)
		)
		+ (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
		* (positif(FLAG_RECTIF) * SUPISF[00]
		+ (1 - positif(FLAG_RECTIF)) * ISFTARDIF_A)
		));

ISFBASE_DEF = positif(FLAG_TRTARDIF) * positif(FLAG_RETARD) * ISF4BASE
               + (1 - positif(FLAG_TRTARDIF)) * ISFBASE_REF;
ISFINTARDIF_DEF = max(0,FLAG_RETARD *
(FLAG_TRTARDIF * ISF4BASE
+ FLAG_TRTARDIF_R * SUPISF[00]
 + FLAG_TRTARDIF_F *
 (positif(TARDIFEVT2) * positif(ISFINTARDIF_A - ISF4BASE)
 * (positif(FLAG_RECTIF) * min(SUPISF[2],ISF4BASE)
 + (1 - positif(FLAG_RECTIF)) * min(ISF4BASE,ISFBASE_REF))
 + (1 - positif(TARDIFEVT2) * positif(ISFINTARDIF_A - ISF4BASE))
  * (positif(FLAG_RECTIF) * min(SUPISF[00],ISF4BASE)
  + (1 - positif(FLAG_RECTIF)) * ISFBASE_REF)
  )
  + (1 - positif(FLAG_TRTARDIF+FLAG_TRTARDIF_R+FLAG_TRTARDIF_F+FLAG_TRMAJOP))
  * (positif(FLAG_RECTIF) * SUPISF[00]
  + (1 - positif(FLAG_RECTIF)) * ISFINTARDIF_A)
    ));



regle corrective base_stratemajo 121:
application :  oceans, iliad ;
pour x = 07,08,11,31:
MAJOPIRx_DEF = max(MAJOIR_Px,MAJOPIRx_A);
MAJOPIR10_1DEF = max(MAJOIR_P10_1,MAJOPIR10_1A);
MAJOPIR10_2DEF = max(MAJOIR_P10_2,MAJOPIR10_2A);
MAJOPIR17_1DEF = max(MAJOIR_P17_1,MAJOPIR17_1A);
MAJOPIR17_2DEF = max(MAJOIR_P17_2,MAJOPIR17_2A);
MAJOPIR_DEF = max(MAJOPIR_TOT,MAJOPIR_A);
pour x = 07,08,10,11,17,31:
MAJOPCSx_DEF = max(MAJOCS_Px,MAJOPCSx_A);
MAJOPCS_DEF = max(MAJOPCS_TOT,MAJOPCS_A);
pour x = 07,08,10,11,17,31:
MAJOPRDx_DEF = max(MAJORD_Px,MAJOPRDx_A);
MAJOPRD_DEF = max(MAJOPRD_TOT,MAJOPRD_A);
pour x = 07,08,10,11,17,31:
MAJOPPSx_DEF = max(MAJOPS_Px,MAJOPPSx_A);
MAJOPPS_DEF = max(MAJOPPS_TOT,MAJOPPS_A);
regle corrective base_stratemajo 122:
application :  oceans, iliad ;
MAJOIRST_DEF = MAJOIR_ST ;
MAJOCSST_DEF = MAJOCS_ST;
MAJORDST_DEF = MAJORD_ST;
MAJOPSST_DEF = MAJOPS_ST;
MAJOCSALST_DEF = MAJOCSAL_ST;
MAJOCDISST_DEF = MAJOCDIS_ST;
MAJOTAXAST_DEF = MAJOTAXA_ST;


MAJOGAINST_DEF = MAJOGAIN_ST;
MAJORSE1ST_DEF = MAJORSE1_ST;
MAJORSE2ST_DEF = MAJORSE2_ST;
MAJORSE3ST_DEF = MAJORSE3_ST;
MAJORSE4ST_DEF = MAJORSE4_ST;
MAJOCAPST_DEF = MAJOCAP_ST;
MAJOHRST_DEF = MAJOHR_ST;
TNAPCR[X] = NAPCRINR;

TIRBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(IRBASE,TIRBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(IRBASE,IRNIN_P))
            + (1 - null(X)) * max(IRBASE,TIRBASE[FLAG_DERSTTR]);
TIRBASEDEF[X] = IRBASE;
TCSBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(CSBASE,TCSBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(CSBASE,CSG_P))
           + (1 - null(X)) * max(CSBASE,TCSBASE[FLAG_DERSTTR]);
TRDBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(RDBASE,TRDBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(RDBASE,RDS_P))
           + (1 - null(X)) * max(RDBASE,TRDBASE[FLAG_DERSTTR]);
TPSBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(PSBASE,TPSBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(PSBASE,PRS_P))
           + (1 - null(X)) * max(PSBASE,TPSBASE[FLAG_DERSTTR]);
TCSALBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(CSALBASE,TCSALBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(CSALBASE,CSAL_P))
           + (1 - null(X)) * max(CSALBASE,TCSALBASE[FLAG_DERSTTR]);
TGAINBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(GAINBASE,TGAINBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(GAINBASE,GAIN_P))
           + (1 - null(X)) * max(GAINBASE,TGAINBASE[FLAG_DERSTTR]);
TCDISBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(CDISBASE,TCDISBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(CDISBASE,CDIS_P))
           + (1 - null(X)) * max(CDISBASE,TCDISBASE[FLAG_DERSTTR]);
TRSE1BASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(RSE1BASE,TRSE1BASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(RSE1BASE,RSE1_P))
           + (1 - null(X)) * max(RSE1BASE,TRSE1BASE[FLAG_DERSTTR]);
TRSE2BASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(RSE2BASE,TRSE2BASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(RSE2BASE,RSE2_P))
           + (1 - null(X)) * max(RSE2BASE,TRSE2BASE[FLAG_DERSTTR]);
TRSE3BASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(RSE3BASE,TRSE3BASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(RSE3BASE,RSE3_P))
           + (1 - null(X)) * max(RSE3BASE,TRSE3BASE[FLAG_DERSTTR]);
TRSE4BASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(RSE4BASE,TRSE4BASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(RSE4BASE,RSE4_P))
           + (1 - null(X)) * max(RSE4BASE,TRSE4BASE[FLAG_DERSTTR]);
TPCAPBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(CAPBASE_MAJO,TPCAPBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(CAPBASE_MAJO,PCAPBRUT_P))
           + (1 - null(X)) * max(CAPBASE_MAJO,TPCAPBASE[FLAG_DERSTTR]);
TPCAPBASEDEF[X] = CAPBASE_MAJO;
TCHRBASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(HRBASE_MAJO,TCHRBASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(HRBASE_MAJO,CHRBRUT_P))
           + (1 - null(X)) * max(HRBASE_MAJO,TCHRBASE[FLAG_DERSTTR]);
TCHRBASEDEF[X] = HRBASE_MAJO;
TTAXABASE[X] = null(X) * 
	    ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(TAXABASE_MAJO,TTAXABASE[FLAG_DERSTTR]) 
	     + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(TAXABASE_MAJO,TAXABRUT_P))
           + (1 - null(X)) * max(TAXABASE_MAJO,TTAXABASE[FLAG_DERSTTR]);
TTAXABASEDEF[X] = TAXABASE_MAJO;
MAJOIR01 = TMAJOIR[22] * STR_TR22
	   + TMAJOIR[01] * null(CSTRATE1 - 1);
MAJOIR02_1 = TMAJOIR[20] * STR_TR20 
	   + TMAJOIR[01] * null(CSTRATE1 - 2);
MAJOIR02_1_NTL = T2MAJOIR[17] * STR_TR17
	   + T2MAJOIR[01] * null(CSTRATE1 - 2);
MAJOIR02_2_NTL = T2MAJOIR[18] * STR_TR18 * (1 - positif(TIRBASE[18]-TIRBASE[20]) * positif(TIRBASE[20])) * (1 - IND_RJLJ)
               + positif(TIRBASE[18] - TIRBASE[20]) * (1 - IND_RJLJ) * positif(TIRBASE[20])
                * arr(max(0,(TIRBASE[18] - TIRBASE[0] - (TIRBASE[18] - TIRBASEDEF[20]))) * TX1758A/100) * STR_TR18
               + T2MAJOIR[01] * null(CSTRATE1 - 2);
MAJOIR02_1_TL = T2MAJOIR[19] * STR_TR19;
MAJOIR02_2_TL = T2MAJOIR[20] * STR_TR20;
MAJOIR02_2 = MAJOIR02_2_TL + MAJOIR02_2_NTL;
MAJOIR03 = TMAJOIR[13] * STR_TR13 
	   + TMAJOIR[01] * null(CSTRATE1 - 3);
MAJOIR04 = TMAJOIR[08] * STR_TR08 
	   + TMAJOIR[01] * null(CSTRATE1 - 4);
MAJOIR05 = TMAJOIR[07] * STR_TR07 
	   + TMAJOIR[01] * null(CSTRATE1 - 5);
MAJOIR06 = TMAJOIR[03] * STR_TR03
	   + TMAJOIR[01] * null(CSTRATE1 - 6);
MAJOIR07 = TMAJOIR[16] * STR_TR16 
	   + TMAJOIR[01] * null(CSTRATE1 - 7)
	   + max(0,MAJOIR07TARDIF_DEF) ;
MAJOIR08 = TMAJOIR[11] * STR_TR11 
	   + TMAJOIR[01] * null(CSTRATE1 - 8)
	   + max(0,MAJOIR08TARDIF_DEF) ;
MAJOIR10_1 = TMAJOIR[14] * STR_TR14 
	   + TMAJOIR[01] * null(CSTRATE1 - 10);
MAJOIR10_2 = T2MAJOIR[14] * STR_TR14
	   + T2MAJOIR[01] * null(CSTRATE1 - 10);
MAJOIR11 = TMAJOIR[10] * STR_TR10 
	   + TMAJOIR[01] * null(CSTRATE1 - 11);
MAJOIR17_1 = TMAJOIR[15] * STR_TR15  
	   + TMAJOIR[01] * null(CSTRATE1 - 17)
	   + max(0,MAJOIR17_1TARD_DEF);
MAJOIR17_2 = T2MAJOIR[15] * STR_TR15
	   + T2MAJOIR[01] * null(CSTRATE1 - 17)
	   + max(0,MAJOIR17_2TARD_DEF);
MAJOIR22 = TMAJOIR[21] * STR_TR21 
	   + TMAJOIR[01] * null(CSTRATE1 - 22);
MAJOIR30 = TMAJOIR[09] * STR_TR09 
	   + TMAJOIR[01] * null(CSTRATE1 - 30);
MAJOIR31 = TMAJOIR[06] * STR_TR06 
	   + TMAJOIR[01] * null(CSTRATE1 - 31);
MAJOIR32 = TMAJOIR[05] * STR_TR05 
	   + TMAJOIR[01] * null(CSTRATE1 - 32);
MAJOIR55 = TMAJOIR[12] * STR_TR12
	   + TMAJOIR[01] * null(CSTRATE1 - 55);
MAJOIR99 = (TMAJOIR[00] * STR_TR00 
	   + TMAJOIR[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99)) ;
MAJOPS01 = TMAJOPS[22] * STR_TR22 
	   + TMAJOPS[01] * null(CSTRATE1 - 1);
MAJOPS02 = TMAJOPS[20] * STR_TR20 
	   + TMAJOPS[01] * null(CSTRATE1 - 2);
MAJOPS03 = TMAJOPS[13] * STR_TR13 
	   + TMAJOPS[01] * null(CSTRATE1 - 3);
MAJOPS04 = TMAJOPS[08] * STR_TR08 
	   + TMAJOPS[01] * null(CSTRATE1 - 4);
MAJOPS05 = TMAJOPS[07] * STR_TR07 
	   + TMAJOPS[01] * null(CSTRATE1 - 5);
MAJOPS06 = TMAJOPS[03] * STR_TR03
	   + TMAJOPS[01] * null(CSTRATE1 - 6);
MAJOPS07 = TMAJOPS[16] * STR_TR16 
	   + TMAJOPS[01] * null(CSTRATE1 - 7)
           + max(0,MAJOPS07TARDIF_DEF) ;
MAJOPS08 = TMAJOPS[11] * STR_TR11 
	   + TMAJOPS[01] * null(CSTRATE1 - 8)
           + max(0,MAJOPS08TARDIF_DEF) ;
MAJOPS10 = TMAJOPS[14] * STR_TR14 
	   + TMAJOPS[01] * null(CSTRATE1 - 10);
MAJOPS11 = TMAJOPS[10] * STR_TR10 
	   + TMAJOPS[01] * null(CSTRATE1 - 11);
MAJOPS17 = TMAJOPS[15] * STR_TR15 
	   + TMAJOPS[01] * null(CSTRATE1 - 17)
           + max(0,MAJOPS17TARDIF_DEF) ;
MAJOPS22 = TMAJOPS[21] * STR_TR21 
	   + TMAJOPS[01] * null(CSTRATE1 - 22);
MAJOPS30 = TMAJOPS[09] * STR_TR09 
	   + TMAJOPS[01] * null(CSTRATE1 - 30);
MAJOPS31 = TMAJOPS[06] * STR_TR06 
	   + TMAJOPS[01] * null(CSTRATE1 - 31);
MAJOPS55 = TMAJOPS[12] * STR_TR12 
	   + TMAJOPS[01] * null(CSTRATE1 - 55);
MAJOPS99 = (TMAJOPS[00] * STR_TR00 
	   + TMAJOPS[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJOCS01 = TMAJOCS[22] * STR_TR22 
	   + TMAJOCS[01] * null(CSTRATE1 - 1);
MAJOCS02 = TMAJOCS[20] * STR_TR20 
	   + TMAJOCS[01] * null(CSTRATE1 - 2);
MAJOCS03 = TMAJOCS[13] * STR_TR13 
	   + TMAJOCS[01] * null(CSTRATE1 - 3);
MAJOCS04 = TMAJOCS[08] * STR_TR08 
	   + TMAJOCS[01] * null(CSTRATE1 - 4);
MAJOCS05 = TMAJOCS[07] * STR_TR07 
	   + TMAJOCS[01] * null(CSTRATE1 - 5);
MAJOCS06 = TMAJOCS[03] * STR_TR03
	   + TMAJOCS[01] * null(CSTRATE1 - 6);
MAJOCS07 = TMAJOCS[16] * STR_TR16 
	   + TMAJOCS[01] * null(CSTRATE1 - 7)
           + max(0,MAJOCS07TARDIF_DEF) ;
MAJOCS08 = TMAJOCS[11] * STR_TR11 
	   + TMAJOCS[01] * null(CSTRATE1 - 8)
           + max(0,MAJOCS08TARDIF_DEF) ;
MAJOCS10 = TMAJOCS[14] * STR_TR14 
	   + TMAJOCS[01] * null(CSTRATE1 - 10);
MAJOCS11 = TMAJOCS[10] * STR_TR10 
	   + TMAJOCS[01] * null(CSTRATE1 - 11);
MAJOCS17 = TMAJOCS[15] * STR_TR15 
	   + TMAJOCS[01] * null(CSTRATE1 - 17)
           + max(0,MAJOCS17TARDIF_DEF) ;
MAJOCS22 = TMAJOCS[21] * STR_TR21 
	   + TMAJOCS[01] * null(CSTRATE1 - 22);
MAJOCS30 = TMAJOCS[09] * STR_TR09 
	   + TMAJOCS[01] * null(CSTRATE1 - 30);
MAJOCS31 = TMAJOCS[06] * STR_TR06 
	   + TMAJOCS[01] * null(CSTRATE1 - 31);
MAJOCS32 = TMAJOCS[05] * STR_TR05 
	   + TMAJOCS[01] * null(CSTRATE1 - 32);
MAJOCS55 = TMAJOCS[12] * STR_TR12 
	   + TMAJOCS[01] * null(CSTRATE1 - 55);
MAJOCS99 = (TMAJOCS[00] * STR_TR00 
	   + TMAJOCS[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJORD01 = TMAJORD[22] * STR_TR22 
	   + TMAJORD[01] * null(CSTRATE1 - 1);
MAJORD02 = TMAJORD[20] * STR_TR20 
	   + TMAJORD[01] * null(CSTRATE1 - 2);
MAJORD03 = TMAJORD[13] * STR_TR13 
	   + TMAJORD[01] * null(CSTRATE1 - 3);
MAJORD04 = TMAJORD[08] * STR_TR08 
	   + TMAJORD[01] * null(CSTRATE1 - 4);
MAJORD05 = TMAJORD[07] * STR_TR07 
	   + TMAJORD[01] * null(CSTRATE1 - 5);
MAJORD06 = TMAJORD[03] * STR_TR03
	   + TMAJORD[01] * null(CSTRATE1 - 6);
MAJORD07 = TMAJORD[16] * STR_TR16 
	   + TMAJORD[01] * null(CSTRATE1 - 7)
           + max(0,MAJORD07TARDIF_DEF) ;
MAJORD08 = TMAJORD[11] * STR_TR11 
	   + TMAJORD[01] * null(CSTRATE1 - 8)
           + max(0,MAJORD08TARDIF_DEF) ;
MAJORD10 = TMAJORD[14] * STR_TR14 
	   + TMAJORD[01] * null(CSTRATE1 - 10);
MAJORD11 = TMAJORD[10] * STR_TR10 
	   + TMAJORD[01] * null(CSTRATE1 - 11);
MAJORD17 = TMAJORD[15] * STR_TR15 
	   + TMAJORD[01] * null(CSTRATE1 - 17)
           + max(0,MAJORD17TARDIF_DEF) ;
MAJORD22 = TMAJORD[21] * STR_TR21 
	   + TMAJORD[01] * null(CSTRATE1 - 22);
MAJORD30 = TMAJORD[09] * STR_TR09 
	   + TMAJORD[01] * null(CSTRATE1 - 30);
MAJORD31 = TMAJORD[06] * STR_TR06 
	   + TMAJORD[01] * null(CSTRATE1 - 31);
MAJORD32 = TMAJORD[05] * STR_TR05 
	   + TMAJORD[01] * null(CSTRATE1 - 32);
MAJORD55 = TMAJORD[12] * STR_TR12 
	   + TMAJORD[01] * null(CSTRATE1 - 55);
MAJORD99 = (TMAJORD[00] * STR_TR00 
	   + TMAJORD[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJOCSAL01 = TMAJOCSAL[22] * STR_TR22 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 1);
MAJOCSAL02 = TMAJOCSAL[20] * STR_TR20 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 2);
MAJOCSAL03 = TMAJOCSAL[13] * STR_TR13 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 3);
MAJOCSAL04 = TMAJOCSAL[08] * STR_TR08 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 4);
MAJOCSAL05 = TMAJOCSAL[07] * STR_TR07 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 5);
MAJOCSAL06 = TMAJOCSAL[03] * STR_TR03
	   + TMAJOCSAL[01] * null(CSTRATE1 - 6);
MAJOCSAL07 = TMAJOCSAL[16] * STR_TR16 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 7)
           + max(0,MAJOSA07TARDIF_DEF) ;
MAJOCSAL08 = TMAJOCSAL[11] * STR_TR11 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 8)
           + max(0,MAJOSA08TARDIF_DEF) ;
MAJOCSAL10 = TMAJOCSAL[14] * STR_TR14 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 10);
MAJOCSAL11 = TMAJOCSAL[10] * STR_TR10 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 11);
MAJOCSAL17 = TMAJOCSAL[15] * STR_TR15 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 17)
           + max(0,MAJOSA17TARDIF_DEF) ;
MAJOCSAL22 = TMAJOCSAL[21] * STR_TR21 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 22);
MAJOCSAL30 = TMAJOCSAL[09] * STR_TR09 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 30);
MAJOCSAL31 = TMAJOCSAL[06] * STR_TR06 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 31);
MAJOCSAL55 = TMAJOCSAL[12] * STR_TR12 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 55);
MAJOCSAL99 = (TMAJOCSAL[00] * STR_TR00 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJOGAIN01 = TMAJOGAIN[22] * STR_TR22 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 1);
MAJOGAIN02 = TMAJOGAIN[20] * STR_TR20 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 2);
MAJOGAIN03 = TMAJOGAIN[13] * STR_TR13 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 3);
MAJOGAIN04 = TMAJOGAIN[08] * STR_TR08 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 4);
MAJOGAIN05 = TMAJOGAIN[07] * STR_TR07 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 5);
MAJOGAIN06 = TMAJOGAIN[03] * STR_TR03
	   + TMAJOGAIN[01] * null(CSTRATE1 - 6);
MAJOGAIN07 = TMAJOGAIN[16] * STR_TR16 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 7)
           + max(0,MAJOGA07TARDIF_DEF) ;
MAJOGAIN08 = TMAJOGAIN[11] * STR_TR11 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 8)
           + max(0,MAJOGA08TARDIF_DEF) ;
MAJOGAIN10 = TMAJOGAIN[14] * STR_TR14 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 10);
MAJOGAIN11 = TMAJOGAIN[10] * STR_TR10 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 11);
MAJOGAIN17 = TMAJOGAIN[15] * STR_TR15 
	   + TMAJOCSAL[01] * null(CSTRATE1 - 17)
           + max(0,MAJOGA17TARDIF_DEF) ;
MAJOGAIN22 = TMAJOGAIN[21] * STR_TR21 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 22);
MAJOGAIN30 = TMAJOGAIN[09] * STR_TR09 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 30);
MAJOGAIN31 = TMAJOGAIN[06] * STR_TR06 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 31);
MAJOGAIN55 = TMAJOGAIN[12] * STR_TR12 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 55);
MAJOGAIN99 = (TMAJOGAIN[00] * STR_TR00 
	   + TMAJOGAIN[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJOCDIS01 = TMAJOCDIS[22] * STR_TR22 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 1);
MAJOCDIS02 = TMAJOCDIS[20] * STR_TR20 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 2);
MAJOCDIS03 = TMAJOCDIS[13] * STR_TR13 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 3);
MAJOCDIS04 = TMAJOCDIS[08] * STR_TR08 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 4);
MAJOCDIS05 = TMAJOCDIS[07] * STR_TR07 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 5);
MAJOCDIS06 = TMAJOCDIS[03] * STR_TR03
	   + TMAJOCDIS[01] * null(CSTRATE1 - 6);
MAJOCDIS07 = TMAJOCDIS[16] * STR_TR16 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 7)
           + max(0,MAJOCDIS07TARD_DEF) ;
MAJOCDIS08 = TMAJOCDIS[11] * STR_TR11 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 8)
           + max(0,MAJOCDIS08TARD_DEF) ;
MAJOCDIS10 = TMAJOCDIS[14] * STR_TR14 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 10);
MAJOCDIS11 = TMAJOCDIS[10] * STR_TR10 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 11);
MAJOCDIS17 = TMAJOCDIS[15] * STR_TR15 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 17)
           + max(0,MAJOCDIS17TARD_DEF) ;
MAJOCDIS22 = TMAJOCDIS[21] * STR_TR21 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 22);
MAJOCDIS30 = TMAJOCDIS[09] * STR_TR09 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 30);
MAJOCDIS31 = TMAJOCDIS[06] * STR_TR06 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 31);
MAJOCDIS55 = TMAJOCDIS[12] * STR_TR12 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 55);
MAJOCDIS99 = (TMAJOCDIS[00] * STR_TR00 
	   + TMAJOCDIS[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJORSE101 = TMAJORSE1[22] * STR_TR22 
	   + TMAJORSE1[01] * null(CSTRATE1 - 1);
MAJORSE102 = TMAJORSE1[20] * STR_TR20 
	   + TMAJORSE1[01] * null(CSTRATE1 - 2);
MAJORSE103 = TMAJORSE1[13] * STR_TR13 
	   + TMAJORSE1[01] * null(CSTRATE1 - 3);
MAJORSE104 = TMAJORSE1[08] * STR_TR08 
	   + TMAJORSE1[01] * null(CSTRATE1 - 4);
MAJORSE105 = TMAJORSE1[07] * STR_TR07 
	   + TMAJORSE1[01] * null(CSTRATE1 - 5);
MAJORSE106 = TMAJORSE1[03] * STR_TR03
	   + TMAJORSE1[01] * null(CSTRATE1 - 6);
MAJORSE107 = TMAJORSE1[16] * STR_TR16 
	   + TMAJORSE1[01] * null(CSTRATE1 - 7)
           + max(0,MAJORSE107TARD_DEF) ;
MAJORSE108 = TMAJORSE1[11] * STR_TR11 
	   + TMAJORSE1[01] * null(CSTRATE1 - 8)
           + max(0,MAJORSE108TARD_DEF) ;
MAJORSE110 = TMAJORSE1[14] * STR_TR14 
	   + TMAJORSE1[01] * null(CSTRATE1 - 10);
MAJORSE111 = TMAJORSE1[10] * STR_TR10 
	   + TMAJORSE1[01] * null(CSTRATE1 - 11);
MAJORSE117 = TMAJORSE1[15] * STR_TR15 
	   + TMAJORSE1[01] * null(CSTRATE1 - 17)
           + max(0,MAJORSE117TARD_DEF) ;
MAJORSE122 = TMAJORSE1[21] * STR_TR21 
	   + TMAJORSE1[01] * null(CSTRATE1 - 22);
MAJORSE130 = TMAJORSE1[09] * STR_TR09 
	   + TMAJORSE1[01] * null(CSTRATE1 - 30);
MAJORSE131 = TMAJORSE1[06] * STR_TR06 
	   + TMAJORSE1[01] * null(CSTRATE1 - 31);
MAJORSE155 = TMAJORSE1[12] * STR_TR12 
	   + TMAJORSE1[01] * null(CSTRATE1 - 55);
MAJORSE199 = (TMAJORSE1[00] * STR_TR00 
	   + TMAJORSE1[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJORSE201 = TMAJORSE2[22] * STR_TR22 
	   + TMAJORSE2[01] * null(CSTRATE1 - 1);
MAJORSE202 = TMAJORSE2[20] * STR_TR20 
	   + TMAJORSE2[01] * null(CSTRATE1 - 2);
MAJORSE203 = TMAJORSE2[13] * STR_TR13 
	   + TMAJORSE2[01] * null(CSTRATE1 - 3);
MAJORSE204 = TMAJORSE2[08] * STR_TR08 
	   + TMAJORSE2[01] * null(CSTRATE1 - 4);
MAJORSE205 = TMAJORSE2[07] * STR_TR07 
	   + TMAJORSE2[01] * null(CSTRATE1 - 5);
MAJORSE206 = TMAJORSE2[03] * STR_TR03
	   + TMAJORSE2[01] * null(CSTRATE1 - 6);
MAJORSE207 = TMAJORSE2[16] * STR_TR16 
	   + TMAJORSE2[01] * null(CSTRATE1 - 7)
           + max(0,MAJORSE207TARD_DEF) ;
MAJORSE208 = TMAJORSE2[11] * STR_TR11 
	   + TMAJORSE2[01] * null(CSTRATE1 - 8)
           + max(0,MAJORSE208TARD_DEF) ;
MAJORSE210 = TMAJORSE2[14] * STR_TR14 
	   + TMAJORSE2[01] * null(CSTRATE1 - 10);
MAJORSE211 = TMAJORSE2[10] * STR_TR10 
	   + TMAJORSE2[01] * null(CSTRATE1 - 11);
MAJORSE217 = TMAJORSE2[15] * STR_TR15 
	   + TMAJORSE2[01] * null(CSTRATE1 - 17)
           + max(0,MAJORSE217TARD_DEF) ;
MAJORSE222 = TMAJORSE2[21] * STR_TR21 
	   + TMAJORSE2[01] * null(CSTRATE1 - 22);
MAJORSE230 = TMAJORSE2[09] * STR_TR09 
	   + TMAJORSE2[01] * null(CSTRATE1 - 30);
MAJORSE231 = TMAJORSE2[06] * STR_TR06 
	   + TMAJORSE2[01] * null(CSTRATE1 - 31);
MAJORSE255 = TMAJORSE2[12] * STR_TR12 
	   + TMAJORSE2[01] * null(CSTRATE1 - 55);
MAJORSE299 = (TMAJORSE2[00] * STR_TR00 
	   + TMAJORSE2[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJORSE301 = TMAJORSE3[22] * STR_TR22 
	   + TMAJORSE3[01] * null(CSTRATE1 - 1);
MAJORSE302 = TMAJORSE3[20] * STR_TR20 
	   + TMAJORSE3[01] * null(CSTRATE1 - 2);
MAJORSE303 = TMAJORSE3[13] * STR_TR13 
	   + TMAJORSE3[01] * null(CSTRATE1 - 3);
MAJORSE304 = TMAJORSE3[08] * STR_TR08 
	   + TMAJORSE3[01] * null(CSTRATE1 - 4);
MAJORSE305 = TMAJORSE3[07] * STR_TR07 
	   + TMAJORSE3[01] * null(CSTRATE1 - 5);
MAJORSE306 = TMAJORSE3[03] * STR_TR03
	   + TMAJORSE3[01] * null(CSTRATE1 - 6);
MAJORSE307 = TMAJORSE3[16] * STR_TR16 
	   + TMAJORSE3[01] * null(CSTRATE1 - 7)
           + max(0,MAJORSE307TARD_DEF) ;
MAJORSE308 = TMAJORSE3[11] * STR_TR11 
	   + TMAJORSE3[01] * null(CSTRATE1 - 8)
           + max(0,MAJORSE308TARD_DEF) ;
MAJORSE310 = TMAJORSE3[14] * STR_TR14 
	   + TMAJORSE3[01] * null(CSTRATE1 - 10);
MAJORSE311 = TMAJORSE3[10] * STR_TR10 
	   + TMAJORSE3[01] * null(CSTRATE1 - 11);
MAJORSE317 = TMAJORSE3[15] * STR_TR15 
	   + TMAJORSE3[01] * null(CSTRATE1 - 17)
           + max(0,MAJORSE317TARD_DEF) ;
MAJORSE322 = TMAJORSE3[21] * STR_TR21 
	   + TMAJORSE3[01] * null(CSTRATE1 - 22);
MAJORSE330 = TMAJORSE3[09] * STR_TR09 
	   + TMAJORSE3[01] * null(CSTRATE1 - 30);
MAJORSE331 = TMAJORSE3[06] * STR_TR06 
	   + TMAJORSE3[01] * null(CSTRATE1 - 31);
MAJORSE355 = TMAJORSE3[12] * STR_TR12 
	   + TMAJORSE3[01] * null(CSTRATE1 - 55);
MAJORSE399 = (TMAJORSE3[00] * STR_TR00 
	   + TMAJORSE3[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJORSE401 = TMAJORSE4[22] * STR_TR22 
	   + TMAJORSE4[01] * null(CSTRATE1 - 1);
MAJORSE402 = TMAJORSE4[20] * STR_TR20 
	   + TMAJORSE4[01] * null(CSTRATE1 - 2);
MAJORSE403 = TMAJORSE4[13] * STR_TR13 
	   + TMAJORSE4[01] * null(CSTRATE1 - 3);
MAJORSE404 = TMAJORSE4[08] * STR_TR08 
	   + TMAJORSE4[01] * null(CSTRATE1 - 4);
MAJORSE405 = TMAJORSE4[07] * STR_TR07 
	   + TMAJORSE4[01] * null(CSTRATE1 - 5);
MAJORSE406 = TMAJORSE4[03] * STR_TR03
	   + TMAJORSE4[01] * null(CSTRATE1 - 6);
MAJORSE407 = TMAJORSE4[16] * STR_TR16 
	   + TMAJORSE4[01] * null(CSTRATE1 - 7)
           + max(0,MAJORSE407TARD_DEF) ;
MAJORSE408 = TMAJORSE4[11] * STR_TR11 
	   + TMAJORSE4[01] * null(CSTRATE1 - 8)
           + max(0,MAJORSE408TARD_DEF) ;
MAJORSE410 = TMAJORSE4[14] * STR_TR14 
	   + TMAJORSE4[01] * null(CSTRATE1 - 10);
MAJORSE411 = TMAJORSE4[10] * STR_TR10 
	   + TMAJORSE4[01] * null(CSTRATE1 - 11);
MAJORSE417 = TMAJORSE4[15] * STR_TR15 
	   + TMAJORSE4[01] * null(CSTRATE1 - 17)
           + max(0,MAJORSE417TARD_DEF) ;
MAJORSE422 = TMAJORSE4[21] * STR_TR21 
	   + TMAJORSE4[01] * null(CSTRATE1 - 22);
MAJORSE430 = TMAJORSE4[09] * STR_TR09 
	   + TMAJORSE4[01] * null(CSTRATE1 - 30);
MAJORSE431 = TMAJORSE4[06] * STR_TR06 
	   + TMAJORSE4[01] * null(CSTRATE1 - 31);
MAJORSE455 = TMAJORSE4[12] * STR_TR12 
	   + TMAJORSE4[01] * null(CSTRATE1 - 55);
MAJORSE499 = (TMAJORSE4[00] * STR_TR00 
	   + TMAJORSE4[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJOTAXA01 = TMAJOTAXA[22] * STR_TR22
	   + TMAJOTAXA[01] * null(CSTRATE1 - 1);
MAJOTAXA02_1 = TMAJOTAXA[20] * STR_TR20 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 2);
MAJOTAXA02_1_NTL = T2MAJOTAXA[17] * STR_TR17
	     + T2MAJOTAXA[01] * null(CSTRATE1 - 2);
MAJOTAXA02_2_NTL = T2MAJOTAXA[18] * STR_TR18 * (1 - positif(TTAXABASE[18] - TTAXABASE[20]) * positif(TTAXABASE[20])) * (1 - IND_RJLJ)
               + positif(TTAXABASE[18] - TTAXABASE[20]) * (1 - IND_RJLJ) * positif(TTAXABASE[20])
               * arr(max(0,(TTAXABASE[18] - TTAXABASE[0] - (TTAXABASE[18] - TTAXABASEDEF[20]))) * TX1758A/100) * STR_TR18
               + T2MAJOTAXA[01] * null(CSTRATE1 - 2);
MAJOTAXA02_1_TL = T2MAJOTAXA[19] * STR_TR19
	     + T2MAJOTAXA[01] * null(CSTRATE1 - 2);
MAJOTAXA02_2_TL = T2MAJOTAXA[20] * STR_TR20
	     + T2MAJOTAXA[01] * null(CSTRATE1 - 2);
MAJOTAXA02_2 = MAJOTAXA02_2_TL + MAJOTAXA02_2_NTL;
MAJOTAXA03 = TMAJOTAXA[13] * STR_TR13 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 3);
MAJOTAXA04 = TMAJOTAXA[08] * STR_TR08 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 4);
MAJOTAXA05 = TMAJOTAXA[07] * STR_TR07 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 5);
MAJOTAXA06 = TMAJOTAXA[03] * STR_TR03
	   + TMAJOTAXA[01] * null(CSTRATE1 - 6);
MAJOTAXA07 = TMAJOTAXA[16] * STR_TR16
	   + TMAJOTAXA[01] * null(CSTRATE1 - 7)
           + max(0,MAJOTA07TARDIF_DEF) ;
MAJOTAXA08 = TMAJOTAXA[11] * STR_TR11 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 8)
           + max(0,MAJOTA08TARDIF_DEF) ;
MAJOTAXA10_1 = TMAJOTAXA[14] * STR_TR14 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 10);
MAJOTAXA10_2 = T2MAJOTAXA[14] * STR_TR14
	   + T2MAJOTAXA[01] * null(CSTRATE1 - 10);
MAJOTAXA11 = TMAJOTAXA[10] * STR_TR10 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 11);
MAJOTAXA17_1 = TMAJOTAXA[15] * STR_TR15
	   + TMAJOTAXA[01] * null(CSTRATE1 - 17)
           + max(0,MAJOTA17_1TARD_DEF) ;
MAJOTAXA17_2 = T2MAJOTAXA[15] * STR_TR15
	   + T2MAJOTAXA[01] * null(CSTRATE1 - 17)
           + max(0,MAJOTA17_2TARD_DEF) ;
MAJOTAXA22 = TMAJOTAXA[21] * STR_TR21 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 22);
MAJOTAXA30 = TMAJOTAXA[09] * STR_TR09 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 30);
MAJOTAXA31 = TMAJOTAXA[06] * STR_TR06 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 31);
MAJOTAXA55 = TMAJOTAXA[12] * STR_TR12 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 55);
MAJOTAXA99 = (TMAJOTAXA[00] * STR_TR00 
	   + TMAJOTAXA[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJOHR01 = TMAJOHR[22] * STR_TR22
	   + TMAJOHR[01] * null(CSTRATE1 - 1);
MAJOHR02_1 = TMAJOHR[20] * STR_TR20 
	   + TMAJOHR[01] * null(CSTRATE1 - 2);
MAJOHR02_1_NTL = T2MAJOHR[17] * STR_TR17
	     + T2MAJOHR[01] * null(CSTRATE1 - 2);
MAJOHR02_2_NTL = T2MAJOHR[18] * STR_TR18 * (1 - positif_ou_nul(TCHRBASE[18] - TCHRBASE[20]) * positif(TCHRBASE[20])) * (1 - IND_RJLJ)
               + positif_ou_nul(TCHRBASE[18] - TCHRBASE[20]) * (1 - IND_RJLJ) * positif(TCHRBASE[20])
               * arr(max(0,(TCHRBASE[18] - TCHRBASE[0] - (TCHRBASE[18] - TCHRBASEDEF[20]))) * TX1758A/100) * STR_TR18
               + T2MAJOHR[01] * null(CSTRATE1 - 2);
MAJOHR02_1_TL = T2MAJOHR[19] * STR_TR19
	     + T2MAJOHR[01] * null(CSTRATE1 - 2);
MAJOHR02_2_TL = T2MAJOHR[20] * STR_TR20
	     + T2MAJOHR[01] * null(CSTRATE1 - 2);
MAJOHR02_2 = MAJOHR02_2_TL + MAJOHR02_2_NTL;
MAJOHR03 = TMAJOHR[13] * STR_TR13 
	   + TMAJOHR[01] * null(CSTRATE1 - 3);
MAJOHR04 = TMAJOHR[08] * STR_TR08 
	   + TMAJOHR[01] * null(CSTRATE1 - 4);
MAJOHR05 = TMAJOHR[07] * STR_TR07 
	   + TMAJOHR[01] * null(CSTRATE1 - 5);
MAJOHR06 = TMAJOHR[03] * STR_TR03
	   + TMAJOHR[01] * null(CSTRATE1 - 6);
MAJOHR07 = TMAJOHR[16] * STR_TR16
	   + TMAJOHR[01] * null(CSTRATE1 - 7)
           + max(0,MAJOHR07TARDIF_DEF) ;
MAJOHR08 = TMAJOHR[11] * STR_TR11 
	   + TMAJOHR[01] * null(CSTRATE1 - 8)
           + max(0,MAJOHR08TARDIF_DEF) ;
MAJOHR10_1 = TMAJOHR[14] * STR_TR14 
	   + TMAJOHR[01] * null(CSTRATE1 - 10);
MAJOHR10_2 = T2MAJOHR[14] * STR_TR14
	   + T2MAJOHR[01] * null(CSTRATE1 - 10);
MAJOHR11 = TMAJOHR[10] * STR_TR10 
	   + TMAJOHR[01] * null(CSTRATE1 - 11);
MAJOHR17_1 = TMAJOHR[15] * STR_TR15
	   + TMAJOHR[01] * null(CSTRATE1 - 17)
           + max(0,MAJOHR17_1TARD_DEF) ;
MAJOHR17_2 = T2MAJOHR[15] * STR_TR15
	   + T2MAJOHR[01] * null(CSTRATE1 - 17)
           + max(0,MAJOHR17_2TARD_DEF) ;
MAJOHR22 = TMAJOHR[21] * STR_TR21 
	   + TMAJOHR[01] * null(CSTRATE1 - 22);
MAJOHR30 = TMAJOHR[09] * STR_TR09 
	   + TMAJOHR[01] * null(CSTRATE1 - 30);
MAJOHR31 = TMAJOHR[06] * STR_TR06 
	   + TMAJOHR[01] * null(CSTRATE1 - 31);
MAJOHR32 = TMAJOHR[05] * STR_TR05 
	   + TMAJOHR[01] * null(CSTRATE1 - 32);
MAJOHR55 = TMAJOHR[12] * STR_TR12 
	   + TMAJOHR[01] * null(CSTRATE1 - 55);
MAJOHR99 = (TMAJOHR[00] * STR_TR00 
	   + TMAJOHR[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJOCAP01 = TMAJOCAP[22] * STR_TR22
	   + TMAJOCAP[01] * null(CSTRATE1 - 1);
MAJOCAP02_1 = TMAJOCAP[20] * STR_TR20 
	   + TMAJOCAP[01] * null(CSTRATE1 - 2);
MAJOCAP02_1_NTL = T2MAJOCAP[17] * STR_TR17
	     + T2MAJOCAP[01] * null(CSTRATE1 - 2);
MAJOCAP02_2_NTL = T2MAJOCAP[18] * STR_TR18 * (1 - positif_ou_nul(TPCAPBASE[18] - TPCAPBASE[20]) * positif(TPCAPBASE[20])) * (1 - IND_RJLJ)
               + positif_ou_nul(TPCAPBASE[18] - TPCAPBASE[20]) * (1 - IND_RJLJ) * positif(TPCAPBASE[20])
               * arr(max(0,(TPCAPBASE[18] - TPCAPBASE[0] - (TPCAPBASE[18] - TPCAPBASEDEF[20]))) * TX1758A/100) * STR_TR18
               + T2MAJOCAP[01] * null(CSTRATE1 - 2);
MAJOCAP02_1_TL = T2MAJOCAP[19] * STR_TR19
	     + T2MAJOCAP[01] * null(CSTRATE1 - 2);
MAJOCAP02_2_TL = T2MAJOCAP[20] * STR_TR20
	     + T2MAJOCAP[01] * null(CSTRATE1 - 2);
MAJOCAP02_2 = MAJOCAP02_2_TL + MAJOCAP02_2_NTL;
MAJOCAP03 = TMAJOCAP[13] * STR_TR13 
	   + TMAJOCAP[01] * null(CSTRATE1 - 3);
MAJOCAP04 = TMAJOCAP[08] * STR_TR08 
	   + TMAJOCAP[01] * null(CSTRATE1 - 4);
MAJOCAP05 = TMAJOCAP[07] * STR_TR07 
	   + TMAJOCAP[01] * null(CSTRATE1 - 5);
MAJOCAP06 = TMAJOCAP[03] * STR_TR03
	   + TMAJOCAP[01] * null(CSTRATE1 - 6);
MAJOCAP07 = TMAJOCAP[16] * STR_TR16
	   + TMAJOCAP[01] * null(CSTRATE1 - 7)
           + max(0,MAJOCP07TARDIF_DEF) ;
MAJOCAP08 = TMAJOCAP[11] * STR_TR11 
	   + TMAJOCAP[01] * null(CSTRATE1 - 8)
           + max(0,MAJOCP08TARDIF_DEF) ;
MAJOCAP10_1 = TMAJOCAP[14] * STR_TR14 
	   + TMAJOCAP[01] * null(CSTRATE1 - 10);
MAJOCAP10_2 = T2MAJOCAP[14] * STR_TR14
	   + T2MAJOCAP[01] * null(CSTRATE1 - 10);
MAJOCAP11 = TMAJOCAP[10] * STR_TR10 
	   + TMAJOCAP[01] * null(CSTRATE1 - 11);
MAJOCAP17_1 = TMAJOCAP[15] * STR_TR15
	   + TMAJOCAP[01] * null(CSTRATE1 - 17)
           + max(0,MAJOCP17_1TARD_DEF) ;
MAJOCAP17_2 = T2MAJOCAP[15] * STR_TR15
	   + T2MAJOCAP[01] * null(CSTRATE1 - 17)
           + max(0,MAJOCP17_2TARD_DEF) ;
MAJOCAP22 = TMAJOCAP[21] * STR_TR21 
	   + TMAJOCAP[01] * null(CSTRATE1 - 22);
MAJOCAP30 = TMAJOCAP[09] * STR_TR09 
	   + TMAJOCAP[01] * null(CSTRATE1 - 30);
MAJOCAP31 = TMAJOCAP[06] * STR_TR06 
	   + TMAJOCAP[01] * null(CSTRATE1 - 31);
MAJOCAP55 = TMAJOCAP[12] * STR_TR12 
	   + TMAJOCAP[01] * null(CSTRATE1 - 55);
MAJOCAP99 = (TMAJOCAP[00] * STR_TR00 
	   + TMAJOCAP[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
MAJO1728IR = somme (x = 07,08,11,31 : MAJOIRx)
	     + MAJOIR10_1 + MAJOIR17_1
	     + somme (x = 07,08,11,31 : MAJOPIRx)
	     + MAJOPIR10_1 + MAJOPIR17_1;
MAJO1728TAXA = somme (x = 07,08,11,31 : MAJOTAXAx)
	     + MAJOTAXA10_1 + MAJOTAXA17_1;
MAJO1728RD = somme (x = 07,08,10,11,17,31 : MAJORDx)
	     + somme(x = 07,08,10,11,31 : MAJOPRDx);
MAJO1728CS = somme (x = 07,08,10,11,17,31 : MAJOCSx)
	     + somme(x = 07,08,10,11,31 : MAJOPCSx);
MAJO1728PS = somme (x = 07,08,10,11,17,31 : MAJOPSx)
	     + somme(x = 07,08,10,11,31 : MAJOPPSx);
MAJO1728GAIN = somme (x = 07,08,10,11,17,31 : MAJOGAINx);
MAJO1728CSAL = somme (x = 07,08,10,11,17,31 : MAJOCSALx);
MAJO1728CDIS = somme (x = 07,08,10,11,17,31 : MAJOCDISx);
MAJO1728RSE1 = somme (x = 07,08,10,11,17,31 : MAJORSE1x);
MAJO1728RSE2 = somme (x = 07,08,10,11,17,31 : MAJORSE2x);
MAJO1728RSE3 = somme (x = 07,08,10,11,17,31 : MAJORSE3x);
MAJO1728RSE4 = somme (x = 07,08,10,11,17,31 : MAJORSE4x);
MAJO1728PCAP = somme (x = 07,08,11,31 : MAJOCAPx)
	     + MAJOCAP10_1 + MAJOCAP17_1;
MAJO1728CHR = somme (x = 07,08,11,31 : MAJOHRx)
	     + MAJOHR10_1 + MAJOHR17_1;
MAJO1729IR = somme (x = 03..05,22,55 : MAJOIRx)
	     + MAJOIR02_1;
MAJO1729TAXA = somme (x = 03..05,22,55 : MAJOTAXAx)
		+ MAJOTAXA02_1;
MAJO1729RD = somme (x = 03..05,22,55 : MAJORDx);
MAJO1729CS = somme (x = 03..05,22,55 : MAJOCSx);
MAJO1729PS = somme (x = 03..05,22,55 : MAJOPSx);
MAJO1729GAIN = somme (x = 03..05,22,55 : MAJOGAINx);
MAJO1729CSAL = somme (x = 03..05,22,55 : MAJOCSALx);
MAJO1729CDIS = somme (x = 03..05,22,55 : MAJOCDISx);
MAJO1729RSE1 = somme (x = 03..05,22,55 : MAJORSE1x);
MAJO1729RSE2 = somme (x = 03..05,22,55 : MAJORSE2x);
MAJO1729RSE3 = somme (x = 03..05,22,55 : MAJORSE3x);
MAJO1729RSE4 = somme (x = 03..05,22,55 : MAJORSE4x);
MAJO1729PCAP = somme (x = 03..05,22,55 : MAJOCAPx)
		+ MAJOCAP02_1;
MAJO1729CHR = somme (x = 03..05,22,55 : MAJOHRx)
		+ MAJOHR02_1;
MAJO1732IR = MAJOIR06;
MAJO1732RD = MAJORD06;
MAJO1732CS = MAJOCS06;
MAJO1732PS = MAJOPS06;
MAJO1732CSAL = MAJOCSAL06;
MAJO1732CDIS = MAJOCDIS06;
MAJO1732TAXA = MAJOTAXA06;
MAJO1732GAIN = MAJOGAIN06;
MAJO1732RSE1 = MAJORSE106;
MAJO1732RSE2 = MAJORSE206;
MAJO1732RSE3 = MAJORSE306;
MAJO1732RSE4 = MAJORSE406;
MAJO1732PCAP = MAJOCAP06;
MAJO1732CHR = MAJOHR06;
MAJO1758IR = MAJOIR30 + MAJOIR32;
MAJO1758RD = MAJORD30 + MAJORD32;
MAJO1758CS = MAJOCS30 + MAJOCS32;
MAJO1758PS = MAJOPS30;
MAJO1758CSAL = MAJOCSAL30;
MAJO1758CDIS = MAJOCDIS30;
MAJO1758TAXA = MAJOTAXA30;
MAJO1758GAIN = MAJOGAIN30;
MAJO1758RSE1 = MAJORSE130;
MAJO1758RSE2 = MAJORSE230;
MAJO1758RSE3 = MAJORSE330;
MAJO1758RSE4 = MAJORSE430;
MAJO1758PCAP = MAJOCAP30;
MAJO1758CHR = MAJOHR30;

MAJO1758AIR = MAJOIR10_2 + MAJOIR17_2 + MAJOIR02_2_NTL + MAJOIR02_2_TL
		+ MAJOPIR10_2 + MAJOPIR17_2;
MAJO1758ATAXA = MAJOTAXA10_2 + MAJOTAXA17_2 
		+ MAJOTAXA02_2_NTL + MAJOTAXA02_2_TL ;

MAJO1758APCAP = MAJOCAP10_2 + MAJOCAP17_2 
		+ MAJOCAP02_2_NTL + MAJOCAP02_2_TL ;

MAJO1758ACHR = MAJOHR10_2 + MAJOHR17_2 
		+ MAJOHR02_2_NTL + MAJOHR02_2_TL ;
regle corrective base_stratemajo 1231:
application : iliad ;
MAJOISFST_DEF = MAJOISF_ST ;
TISF4BASE[X] = null(X) *
           ( positif(FLAG_RETARD) * positif(FLAG_RECTIF)* max(ISF4BASE,TISF4BASE[FLAG_DERSTTR])
	    + (1 - positif(FLAG_RETARD) * positif(FLAG_RECTIF)) * max(ISF4BASE,ISF_P))
           + (1 - null(X)) * max(ISF4BASE,TISF4BASE[FLAG_DERSTTR]);

MAJOISF01 = TMAJOISF[22] * STR_TR22
            + TMAJOISF[01] * null(CSTRATE1 - 1);

MAJOISF02 = TMAJOISF[20] * STR_TR20
            + TMAJOISF[01] * null(CSTRATE1 - 2);

MAJOISF07 = TMAJOISF[16] * STR_TR16
           + TMAJOISF[01] * null(CSTRATE1 - 7)
           + max(0,MAJOISF07TARD_DEF) ;

MAJOISF08 = TMAJOISF[11] * STR_TR11
           + TMAJOISF[01] * null(CSTRATE1 - 8)
           + max(0,MAJOISF08TARD_DEF) ;

MAJOISF17 = TMAJOISF[15] * STR_TR15
            + TMAJOISF[01] * null(CSTRATE1 - 17)
            + max(0,MAJOISF17TARD_DEF) ;

MAJOISF99 = (TMAJOISF[00] * STR_TR00
            + TMAJOISF[01] * null(CSTRATE1 - 99)) * (1 - positif(CSTRATE99));
	     
MAJO1728ISF = somme (x = 07,08,17 : MAJOISFx) ;




regle corrective base_MAJO 123:
application : oceans, iliad ;
PROPIR_A = PROPIR_DEF;
PROPCS_A = PROPCS_DEF;
PROPPS_A = PROPPS_DEF;
PROPRD_A = PROPRD_DEF;
IRNINMAJOP_A = IRNINMAJOP_DEF;
CSGMAJOP_A = CSGMAJOP_DEF;
RDSMAJOP_A = RDSMAJOP_DEF;
PRSMAJOP_A = PRSMAJOP_DEF;
pour x = 07,08,11,31:
MAJOPIRx_A = MAJOPIRx_DEF;
MAJOPIR10_1A = MAJOPIR10_1DEF;
MAJOPIR10_2A = MAJOPIR10_2DEF;
MAJOPIR17_1A = MAJOPIR17_1DEF;
MAJOPIR17_2A = MAJOPIR17_2DEF;
pour x = 07,08,10,11,17,31:
MAJOPCSx_A = MAJOPCSx_DEF;
pour x = 07,08,10,11,17,31:
MAJOPPSx_A = MAJOPPSx_DEF;
pour x = 07,08,10,11,17,31:
MAJOPRDx_A = MAJOPRDx_DEF;
MAJOPIR_A = MAJOPIR_DEF;
MAJOPCS_A = MAJOPCS_DEF;
MAJOPRD_A = MAJOPRD_DEF;
MAJOPPS_A = MAJOPPS_DEF;
MAJOPIR07 = MAJOPIR07_A;
MAJOPIR08 = MAJOPIR08_A;
MAJOPIR10_1 = MAJOPIR10_1A;
MAJOPIR10_2 = MAJOPIR10_2A;
MAJOPIR11 = MAJOPIR11_A;
MAJOPIR17_1 = MAJOPIR17_1A;
MAJOPIR17_2 = MAJOPIR17_2A;
MAJOPIR31 = MAJOPIR31_A;
MAJOPCS07 = MAJOPCS07_A;
MAJOPCS08 = MAJOPCS08_A;
MAJOPCS10 = MAJOPCS10_A;
MAJOPCS11 = MAJOPCS11_A;
MAJOPCS17 = MAJOPCS17_A;
MAJOPCS31 = MAJOPCS31_A;
MAJOPPS07 = MAJOPPS07_A;
MAJOPPS08 = MAJOPPS08_A;
MAJOPPS10 = MAJOPPS10_A;
MAJOPPS11 = MAJOPPS11_A;
MAJOPPS17 = MAJOPPS17_A;
MAJOPPS31 = MAJOPPS31_A;
MAJOPRD07 = MAJOPRD07_A;
MAJOPRD08 = MAJOPRD08_A;
MAJOPRD10 = MAJOPRD10_A;
MAJOPRD11 = MAJOPRD11_A;
MAJOPRD17 = MAJOPRD17_A;
MAJOPRD31 = MAJOPRD31_A;
MAJOPIR_TOT = somme (x = 07,08,11,31 : MAJOPIRx)
		+ MAJOPIR10_1 + MAJOPIR10_2
		+ MAJOPIR17_1 + MAJOPIR17_2;
MAJOPCS_TOT = somme (x = 07,08,10,11,17,31 : MAJOPCSx);
MAJOPPS_TOT = somme (x = 07,08,10,11,17,31 : MAJOPPSx);
MAJOPRD_TOT = somme (x = 07,08,10,11,17,31 : MAJOPRDx);
regle corrective base_anterieure 124:
application : oceans, iliad ;
MAJOIR07TARDIF_A = MAJOIR07TARDIF_DEF;
MAJOIR08TARDIF_A = MAJOIR08TARDIF_DEF;
MAJOIR17_1TARDIF_A = MAJOIR17_1TARD_DEF;
MAJOIR17_2TARDIF_A = MAJOIR17_2TARD_DEF;
MAJOIRTARDIF_A = somme(x = 07,08 : MAJOIR0xTARDIF_A)
		+ MAJOIR17_1TARDIF_A + MAJOIR17_2TARDIF_A;
MAJOPS07TARDIF_A = MAJOPS07TARDIF_DEF;
MAJOPS08TARDIF_A = MAJOPS08TARDIF_DEF;
MAJOPS17TARDIF_A = MAJOPS17TARDIF_DEF;
MAJOPSTARDIF_A = somme(x = 07,08,17 : MAJOPSxTARDIF_A);
MAJOCS07TARDIF_A = MAJOCS07TARDIF_DEF;
MAJOCS08TARDIF_A = MAJOCS08TARDIF_DEF;
MAJOCS17TARDIF_A = MAJOCS17TARDIF_DEF;
MAJOCSTARDIF_A = somme(x = 07,08,17 : MAJOCSxTARDIF_A);
MAJORD07TARDIF_A = MAJORD07TARDIF_DEF;
MAJORD08TARDIF_A = MAJORD08TARDIF_DEF;
MAJORD17TARDIF_A = MAJORD17TARDIF_DEF;
MAJORDTARDIF_A = somme(x = 07,08,17 : MAJORDxTARDIF_A);
MAJOCSAL07TARDIF_A = MAJOSA07TARDIF_DEF;
MAJOCSAL08TARDIF_A = MAJOSA08TARDIF_DEF;
MAJOCSAL17TARDIF_A = MAJOSA17TARDIF_DEF;
MAJOCSALTARDIF_A = somme(x = 07,08,17 : MAJOCSALxTARDIF_A);
MAJOCDIS07TARDIF_A = MAJOCDIS07TARD_DEF;
MAJOCDIS08TARDIF_A = MAJOCDIS08TARD_DEF;
MAJOCDIS17TARDIF_A = MAJOCDIS17TARD_DEF;
MAJOCDISTARDIF_A = somme(x = 07,08,17 : MAJOCDISxTARDIF_A);
MAJOGAIN07TARDIF_A = MAJOGA07TARDIF_DEF;
MAJOGAIN08TARDIF_A = MAJOGA08TARDIF_DEF;
MAJOGAIN17TARDIF_A = MAJOGA17TARDIF_DEF;
MAJOGAINTARDIF_A = somme(x = 07,08,17 : MAJOGAINxTARDIF_A);
MAJORSE107TARDIF_A = MAJORSE107TARD_DEF;
MAJORSE108TARDIF_A = MAJORSE108TARD_DEF;
MAJORSE117TARDIF_A = MAJORSE117TARD_DEF;
MAJORSE1TARDIF_A = somme(x = 07,08,17 : MAJORSE1xTARDIF_A);
MAJORSE207TARDIF_A = MAJORSE207TARD_DEF;
MAJORSE208TARDIF_A = MAJORSE208TARD_DEF;
MAJORSE217TARDIF_A = MAJORSE217TARD_DEF;
MAJORSE2TARDIF_A = somme(x = 07,08,17 : MAJORSE2xTARDIF_A);
MAJORSE307TARDIF_A = MAJORSE307TARD_DEF;
MAJORSE308TARDIF_A = MAJORSE308TARD_DEF;
MAJORSE317TARDIF_A = MAJORSE317TARD_DEF;
MAJORSE3TARDIF_A = somme(x = 07,08,17 : MAJORSE3xTARDIF_A);
MAJORSE407TARDIF_A = MAJORSE407TARD_DEF;
MAJORSE408TARDIF_A = MAJORSE408TARD_DEF;
MAJORSE417TARDIF_A = MAJORSE417TARD_DEF;
MAJORSE4TARDIF_A = somme(x = 07,08,17 : MAJORSE4xTARDIF_A);
MAJOTAXA07TARDIF_A = MAJOTA07TARDIF_DEF;
MAJOTAXA08TARDIF_A = MAJOTA08TARDIF_DEF;
MAJOTA17_1TARDIF_A = MAJOTA17_1TARD_DEF;
MAJOTA17_2TARDIF_A = MAJOTA17_2TARD_DEF;
MAJOTAXATARDIF_A = somme(x = 07,08 : MAJOTAXA0xTARDIF_A)
		+ MAJOTA17_1TARD_DEF + MAJOTA17_2TARD_DEF;
MAJOHR07TARDIF_A = MAJOHR07TARDIF_DEF;
MAJOHR08TARDIF_A = MAJOHR08TARDIF_DEF;
MAJOHR17_1TARDIF_A = MAJOHR17_1TARD_DEF;
MAJOHR17_2TARDIF_A = MAJOHR17_2TARD_DEF;
MAJOHRTARDIF_A = somme(x = 07,08 : MAJOHR0xTARDIF_A)
		+ MAJOHR17_1TARD_DEF + MAJOHR17_2TARD_DEF;
MAJOCAP07TARDIF_A = MAJOCP07TARDIF_DEF;
MAJOCAP08TARDIF_A = MAJOCP08TARDIF_DEF;
MAJOCP17_1TARDIF_A = MAJOCP17_1TARD_DEF;
MAJOCP17_2TARDIF_A = MAJOCP17_2TARD_DEF;
MAJOCAPTARDIF_A = somme(x = 07,08 : MAJOCAP0xTARDIF_A)
		+ MAJOCP17_1TARD_DEF + MAJOCP17_2TARD_DEF;
IRBASE_REF = IRBASE_DEF;
MAJOIRTARDIF_REF = MAJOIRTARDIF_DEF;
IRNINTARDIF_A = IRNINTARDIF_DEF;
NAPCRTARDIF_A = NAPCRINR;
CSGTARDIF_A = CSGTARDIF_DEF;
RDSTARDIF_A = RDSTARDIF_DEF;
PRSTARDIF_A = PRSTARDIF_DEF;
CSALTARDIF_A = CSALTARDIF_DEF;
CDISTARDIF_A = CDISTARDIF_DEF;
TAXATARDIF_A = TAXATARDIF_DEF;

HRTARDIF_A = HRTARDIF_DEF ;
GAINTARDIF_A = GAINTARDIF_DEF ;
CAPTARDIF_A = CAPTARDIF_DEF ;
RSE1TARDIF_A = RSE1TARDIF_DEF ;
RSE2TARDIF_A = RSE2TARDIF_DEF ;
RSE3TARDIF_A = RSE3TARDIF_DEF ;
RSE4TARDIF_A = RSE4TARDIF_DEF ;

MAJO1728_TOT = MAJO1728IR + 
	       MAJO1728CS + 
               MAJO1728RD + 
               MAJO1728PS + 
               MAJO1728CSAL + 
               MAJO1728CDIS + 
	       MAJO1728TAXA +
	       MAJO1728CHR +
	       MAJO1728PCAP +
	       MAJO1728GAIN +
	       MAJO1728RSE1 +
	       MAJO1728RSE2 +
	       MAJO1728RSE3 +
	       MAJO1728RSE4;
MAJO1729_TOT = MAJO1729IR + 
	       MAJO1729CS + 
               MAJO1729RD + 
               MAJO1729PS + 
               MAJO1729CSAL + 
               MAJO1729CDIS + 
	       MAJO1729TAXA +
	       MAJO1729CHR +
	       MAJO1729PCAP +
	       MAJO1729GAIN +
	       MAJO1729RSE1 +
	       MAJO1729RSE2 +
	       MAJO1729RSE3 +
	       MAJO1729RSE4;

MAJO1732_TOT = MAJO1732IR +
	       MAJO1732CS +
               MAJO1732RD +
	       MAJO1732PS +
	       MAJO1732CSAL +
	       MAJO1732CDIS +
	       MAJO1732TAXA +
	       MAJO1732CHR +
	       MAJO1732PCAP +
	       MAJO1732GAIN +
	       MAJO1732RSE1 +
	       MAJO1732RSE2 +
	       MAJO1732RSE3 +
	       MAJO1732RSE4;
MAJO1758_TOT = MAJO1758IR +
	       MAJO1758CS +
	       MAJO1758RD +
	       MAJO1758PS +
	       MAJO1758CSAL +
	       MAJO1758CDIS +
	       MAJO1758TAXA +
	       MAJO1758CHR +
	       MAJO1758PCAP +
	       MAJO1758GAIN +
	       MAJO1758RSE1 +
	       MAJO1758RSE2 +
	       MAJO1758RSE3 +
	       MAJO1758RSE4;


MAJO1758A_TOT = MAJO1758AIR +
	       MAJO1758ATAXA +
	       MAJO1758ACHR +
	       MAJO1758APCAP
	       ;
MAJOIR_TOT = MAJO1728IR + MAJO1729IR + MAJO1732IR + MAJO1758IR + MAJO1758AIR;
MAJOCS_TOT = MAJO1728CS + MAJO1729CS + MAJO1732CS + MAJO1758CS;
MAJOPS_TOT = MAJO1728PS + MAJO1729PS + MAJO1732PS + MAJO1758PS;
MAJORD_TOT = MAJO1728RD + MAJO1729RD + MAJO1732RD + MAJO1758RD;
MAJOGAIN_TOT = MAJO1728GAIN + MAJO1729GAIN + MAJO1732GAIN + MAJO1758GAIN ;
MAJOCSAL_TOT = MAJO1728CSAL + MAJO1729CSAL + MAJO1732CSAL + MAJO1758CSAL;
MAJOCDIS_TOT = MAJO1728CDIS + MAJO1729CDIS + MAJO1732CDIS + MAJO1758CDIS;
MAJOTAXA_TOT = MAJO1728TAXA + MAJO1729TAXA + MAJO1732TAXA + MAJO1758TAXA 
			  + MAJO1758ATAXA;
MAJORSE1_TOT = MAJO1728RSE1 + MAJO1729RSE1 + MAJO1732RSE1 + MAJO1758RSE1;
MAJORSE2_TOT = MAJO1728RSE2 + MAJO1729RSE2 + MAJO1732RSE2 + MAJO1758RSE2;
MAJORSE3_TOT = MAJO1728RSE3 + MAJO1729RSE3 + MAJO1732RSE3 + MAJO1758RSE3;
MAJORSE4_TOT = MAJO1728RSE4 + MAJO1729RSE4 + MAJO1732RSE4 + MAJO1758RSE4;
MAJOCHR_TOT = MAJO1728CHR + MAJO1729CHR + MAJO1732CHR + MAJO1758CHR 
			  + MAJO1758ACHR;
MAJOPCAP_TOT = MAJO1728PCAP + MAJO1729PCAP + MAJO1732PCAP + MAJO1758PCAP 
			  + MAJO1758APCAP;
MAJO_TOT = MAJOIR_TOT + MAJOCS_TOT + MAJOPS_TOT + MAJORD_TOT 
	   + MAJOGAIN_TOT + MAJOCSAL_TOT + MAJOCDIS_TOT + MAJOTAXA_TOT
	   + MAJORSE1_TOT + MAJORSE2_TOT + MAJORSE3_TOT + MAJORSE4_TOT
	   + MAJOCHR_TOT + MAJOPCAP_TOT ;
STRATIR01 = SUPIR[22] + null(CSTRATE1-1) * SUPIR[01] + null(CSTRATE1 - 1) * SUP2IR[01] ;
STRATIR02_1 = SUPIR[20] + null(CSTRATE1-2) * SUPIR[01] + null(CSTRATE1 - 2) * SUP2IR[01] ;
STRATIR02_1_NTL = SUP2IR[17] + null(CSTRATE1 - 2) * SUP2IR[01] ;
STRATIR02_2_NTL = SUP2IR[17] +
                 (SUP2IR[18] * STR_TR18 * (1 - positif_ou_nul(TIRBASE[18]-TIRBASE[20]) * positif(TIRBASE[20])) * (1 - IND_RJLJ)
                + positif_ou_nul(TIRBASE[18] - TIRBASE[20]) * (1 - IND_RJLJ) * positif(TIRBASE[20])
                     * max(0,(TIRBASE[18] - TIRBASE[0] - (TIRBASE[18] - TIRBASEDEF[20]))) * STR_TR18)
		     + null(CSTRATE1 - 2) * SUP2IR[01];
STRATIR02_1_TL = SUP2IR[19] + null(CSTRATE1 - 2) * SUP2IR[01];
STRATIR02_2_TL = SUP2IR[19]+SUP2IR[20] + null(CSTRATE1 - 2) * SUP2IR[01];
STRATIR03 = SUPIR[13] + null(CSTRATE1 - 3) * SUPIR[01];
STRATIR04 = SUPIR[08] + null(CSTRATE1 - 4) * SUPIR[01];
STRATIR05 = SUPIR[07] + null(CSTRATE1 - 5) * SUPIR[01];
STRATIR06 = SUPIR[03] + null(CSTRATE1 - 6) * SUPIR[01];
STRATIR07 = SUPIR[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPIR[0],IRNIN)
		     + (1 - positif(FLAG_RECTIF)) * min(IRNINTARDIF_A, IRNIN))
		     + null(CSTRATE1 - 7) * SUPIR[1];
STRATIR08 = SUPIR[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPIR[0],IRNIN)
		     + (1 - positif(FLAG_RECTIF)) * min(IRNINTARDIF_A, IRNIN));
STRATIR10_1 = SUPIR[14] + null(CSTRATE1-10) * SUPIR[01] + null(CSTRATE1 - 10) * SUP2IR[01] ;
STRATIR10_2 = SUP2IR[14] + null(CSTRATE1 - 10) * SUP2IR[01] ;
STRATIR11 = SUPIR[10] + null(CSTRATE1 - 11) * SUPIR[01];
STRATIR17_1 = SUPIR[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPIR[0],IRNIN)
		     + (1 - positif(FLAG_RECTIF)) * min(IRNINTARDIF_A, IRNIN))
		     + null(CSTRATE1-17) * SUPIR[01] + null(CSTRATE1 - 17) * SUP2IR[01] ;
STRATIR17_2 = SUP2IR[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPIR[0],IRNIN)
		     + (1 - positif(FLAG_RECTIF)) * min(IRNINTARDIF_A, IRNIN))
		     + null(CSTRATE1 - 17) * SUP2IR[01];
STRATIR22 = SUPIR[21] + null(CSTRATE1 - 22) * SUPIR[01] ;
STRATIR30 = SUPIR[09] + null(CSTRATE1 - 30) * SUPIR[01] + null(CSTRATE1 - 30) * SUP2IR[01] ;
STRATIR31 = SUPIR[06] + null(CSTRATE1 - 31) * SUPIR[01] ;
STRATIR32 = SUPIR[05] + null(CSTRATE1 - 32) * SUPIR[01] + null(CSTRATE1 - 32) * SUP2IR[01];
STRATIR55 = SUPIR[12] + null(CSTRATE1 - 55) * SUPIR[01] ;
STRATIR99 = SUPIR[00] + null(CSTRATE1 - 99) * SUPIR[01] ;
STRATCS01 = SUPCS[22] ;
STRATCS02 = SUPCS[20] ;
STRATCS03 = SUPCS[13] ;
STRATCS04 = SUPCS[08] ;
STRATCS05 = SUPCS[07] ;
STRATCS06 = SUPCS[03] ;
STRATCS07 = SUPCS[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPCS[0],CSBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CSGTARDIF_A, CSBASE));
STRATCS08 = SUPCS[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPCS[0],CSBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CSGTARDIF_A, CSBASE));
STRATCS10 = SUPCS[14] ;
STRATCS11 = SUPCS[10]  ;
STRATCS17 = SUPCS[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPCS[0],CSBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CSGTARDIF_A, CSBASE));
STRATCS22 = SUPCS[21] ;
STRATCS30 = SUPCS[09] ;
STRATCS31 = SUPCS[06] ;
STRATCS32 = SUPCS[05] ;
STRATCS55 = SUPCS[12] ;
STRATCS99 = SUPCS[00] + SUPCS[01] ;
STRATPS01 = SUPPS[22] ;
STRATPS02 = SUPPS[20] ;
STRATPS03 = SUPPS[13] ;
STRATPS04 = SUPPS[08] ;
STRATPS05 = SUPPS[07] ;
STRATPS06 = SUPPS[03] ;
STRATPS07 = SUPPS[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPPS[0],PSBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(PRSTARDIF_A, PSBASE));
STRATPS08 = SUPPS[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPPS[0],PSBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(PRSTARDIF_A, PSBASE));
STRATPS10 = SUPPS[14] ;
STRATPS11 = SUPPS[10]  ;
STRATPS17 = SUPPS[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPPS[0],PSBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(PRSTARDIF_A, PSBASE));
STRATPS22 = SUPPS[21] ;
STRATPS30 = SUPPS[09] ;
STRATPS31 = SUPPS[06] ;
STRATPS55 = SUPPS[12] ;
STRATPS99 = SUPPS[00] + SUPPS[01] ;
STRATRD01 = SUPRD[22] ;
STRATRD02 = SUPRD[20] ;
STRATRD03 = SUPRD[13] ;
STRATRD04 = SUPRD[08] ;
STRATRD05 = SUPRD[07] ;
STRATRD06 = SUPRD[03] ;
STRATRD07 = SUPRD[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPRD[0],RDBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RDSTARDIF_A, RDBASE));
STRATRD08 = SUPRD[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPRD[0],RDBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RDSTARDIF_A, RDBASE));
STRATRD10 = SUPRD[14] ;
STRATRD11 = SUPRD[10]  ;
STRATRD17 = SUPRD[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPRD[0],RDBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RDSTARDIF_A, RDBASE));
STRATRD22 = SUPRD[21] ;
STRATRD30 = SUPRD[09] ;
STRATRD31 = SUPRD[06] ;
STRATRD32 = SUPRD[05] ;
STRATRD55 = SUPRD[12] ;
STRATRD99 = SUPRD[00] + SUPRD[01] ;
STRATCSAL01 = SUPCSAL[22] ;
STRATCSAL02 = SUPCSAL[20] ;
STRATCSAL03 = SUPCSAL[13] ;
STRATCSAL04 = SUPCSAL[08] ;
STRATCSAL05 = SUPCSAL[07] ;
STRATCSAL06 = SUPCSAL[03] ;
STRATCSAL07 = SUPCSAL[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPCSAL[0],CSALBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CSALTARDIF_A, CSALBASE));
STRATCSAL08 = SUPCSAL[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPCSAL[0],CSALBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CSALTARDIF_A, CSALBASE));
STRATCSAL10 = SUPCSAL[14] ;
STRATCSAL11 = SUPCSAL[10]  ;
STRATCSAL17 = SUPCSAL[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPCSAL[0],CSALBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CSALTARDIF_A, CSALBASE));
STRATCSAL22 = SUPCSAL[21] ;
STRATCSAL30 = SUPCSAL[09] ;
STRATCSAL31 = SUPCSAL[06] ;
STRATCSAL55 = SUPCSAL[12] ;
STRATCSAL99 = SUPCSAL[00] + SUPCSAL[01] ;
STRATCDIS01 = SUPCDIS[22] ;
STRATCDIS02 = SUPCDIS[20] ;
STRATCDIS03 = SUPCDIS[13] ;
STRATCDIS04 = SUPCDIS[08] ;
STRATCDIS05 = SUPCDIS[07] ;
STRATCDIS06 = SUPCDIS[03] ;
STRATCDIS07 = SUPCDIS[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPCDIS[0],CDISBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CDISTARDIF_A, CDISBASE));
STRATCDIS08 = SUPCDIS[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPCDIS[0],CDISBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CDISTARDIF_A, CDISBASE));
STRATCDIS10 = SUPCDIS[14] ;
STRATCDIS11 = SUPCDIS[10]  ;
STRATCDIS17 = SUPCDIS[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPCDIS[0],CDISBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(CDISTARDIF_A, CDISBASE));
STRATCDIS22 = SUPCDIS[21] ;
STRATCDIS30 = SUPCDIS[09] ;
STRATCDIS31 = SUPCDIS[06] ;
STRATCDIS55 = SUPCDIS[12] ;
STRATCDIS99 = SUPCDIS[00] + SUPCDIS[01] ;
STRATGAIN01 = SUPGAIN[22] ;
STRATGAIN02 = SUPGAIN[20] ;
STRATGAIN03 = SUPGAIN[13] ;
STRATGAIN04 = SUPGAIN[08] ;
STRATGAIN05 = SUPGAIN[07] ;
STRATGAIN06 = SUPGAIN[03] ;
STRATGAIN07 = SUPGAIN[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPGAIN[0],GAINBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(GAINTARDIF_A, GAINBASE));
STRATGAIN08 = SUPGAIN[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPGAIN[0],GAINBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(GAINTARDIF_A, GAINBASE));
STRATGAIN10 = SUPGAIN[14] ;
STRATGAIN11 = SUPGAIN[10]  ;
STRATGAIN17 = SUPGAIN[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPGAIN[0],GAINBASE)
		     + (1 - positif(FLAG_RECTIF)) * min(GAINTARDIF_A, GAINBASE));
STRATGAIN22 = SUPGAIN[21] ;
STRATGAIN30 = SUPGAIN[09] ;
STRATGAIN31 = SUPGAIN[06] ;
STRATGAIN55 = SUPGAIN[12] ;
STRATGAIN99 = SUPGAIN[00] + SUPGAIN[01] ;
STRATRSE101 = SUPRSE1[22] ;
STRATRSE102 = SUPRSE1[20] ;
STRATRSE103 = SUPRSE1[13] ;
STRATRSE104 = SUPRSE1[08] ;
STRATRSE105 = SUPRSE1[07] ;
STRATRSE106 = SUPRSE1[03] ;
STRATRSE107 = SUPRSE1[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE1[0],RSE1BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE1TARDIF_A, RSE1BASE));
STRATRSE108 = SUPRSE1[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPRSE1[0],RSE1BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE1TARDIF_A, RSE1BASE));
STRATRSE110 = SUPRSE1[14] ;
STRATRSE111 = SUPRSE1[10]  ;
STRATRSE117 = SUPRSE1[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE1[0],RSE1BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE1TARDIF_A, RSE1BASE));
STRATRSE122 = SUPRSE1[21] ;
STRATRSE130 = SUPRSE1[09] ;
STRATRSE131 = SUPRSE1[06] ;
STRATRSE155 = SUPRSE1[12] ;
STRATRSE199 = SUPRSE1[00] + SUPRSE1[01] ;
STRATRSE201 = SUPRSE2[22] ;
STRATRSE202 = SUPRSE2[20] ;
STRATRSE203 = SUPRSE2[13] ;
STRATRSE204 = SUPRSE2[08] ;
STRATRSE205 = SUPRSE2[07] ;
STRATRSE206 = SUPRSE2[03] ;
STRATRSE207 = SUPRSE2[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE2[0],RSE2BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE2TARDIF_A, RSE2BASE));
STRATRSE208 = SUPRSE1[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPRSE2[0],RSE2BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE2TARDIF_A, RSE2BASE));
STRATRSE210 = SUPRSE2[14] ;
STRATRSE211 = SUPRSE2[10]  ;
STRATRSE217 = SUPRSE2[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE2[0],RSE2BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE2TARDIF_A, RSE2BASE));
STRATRSE222 = SUPRSE2[21] ;
STRATRSE230 = SUPRSE2[09] ;
STRATRSE231 = SUPRSE2[06] ;
STRATRSE255 = SUPRSE2[12] ;
STRATRSE299 = SUPRSE2[00] + SUPRSE2[01] ;
STRATRSE301 = SUPRSE3[22] ;
STRATRSE302 = SUPRSE3[20] ;
STRATRSE303 = SUPRSE3[13] ;
STRATRSE304 = SUPRSE3[08] ;
STRATRSE305 = SUPRSE3[07] ;
STRATRSE306 = SUPRSE3[03] ;
STRATRSE307 = SUPRSE3[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE3[0],RSE3BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE3TARDIF_A, RSE3BASE));
STRATRSE308 = SUPRSE3[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPRSE3[0],RSE3BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE3TARDIF_A, RSE3BASE));
STRATRSE310 = SUPRSE3[14] ;
STRATRSE311 = SUPRSE3[10]  ;
STRATRSE317 = SUPRSE3[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE3[0],RSE3BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE3TARDIF_A, RSE3BASE));
STRATRSE322 = SUPRSE3[21] ;
STRATRSE330 = SUPRSE3[09] ;
STRATRSE331 = SUPRSE3[06] ;
STRATRSE355 = SUPRSE3[12] ;
STRATRSE399 = SUPRSE3[00] + SUPRSE3[01] ;
STRATRSE401 = SUPRSE4[22] ;
STRATRSE402 = SUPRSE4[20] ;
STRATRSE403 = SUPRSE4[13] ;
STRATRSE404 = SUPRSE4[08] ;
STRATRSE405 = SUPRSE4[07] ;
STRATRSE406 = SUPRSE4[03] ;
STRATRSE407 = SUPRSE4[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE4[0],RSE4BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE4TARDIF_A, RSE4BASE));
STRATRSE408 = SUPRSE4[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPRSE4[0],RSE4BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE4TARDIF_A, RSE4BASE));
STRATRSE410 = SUPRSE4[14] ;
STRATRSE411 = SUPRSE4[10]  ;
STRATRSE417 = SUPRSE4[15] + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPRSE4[0],RSE4BASE)
		     + (1 - positif(FLAG_RECTIF)) * min(RSE4TARDIF_A, RSE4BASE));
STRATRSE422 = SUPRSE4[21] ;
STRATRSE430 = SUPRSE4[09] ;
STRATRSE431 = SUPRSE4[06] ;
STRATRSE455 = SUPRSE4[12] ;
STRATRSE499 = SUPRSE4[00] + SUPRSE4[01] ;
STRATTAXA01 = SUPTAXA[22] + null(CSTRATE1-1) * SUPTAXA[01] + null(CSTRATE1 - 1) * SUP2TAXA[01];
STRATTAXA02_1 = SUPTAXA[20] + null(CSTRATE1-2) * SUPTAXA[01] + null(CSTRATE1 - 2) * SUP2TAXA[01];
STRATTAXA02_1_NTL = SUP2TAXA[17] + null(CSTRATE1-2) * SUPTAXA[01] + null(CSTRATE1 - 2) * SUP2TAXA[01];
STRATTAXA02_2_NTL = SUP2TAXA[17]+
                    (SUP2TAXA[18] * STR_TR18 * (1 - positif_ou_nul(TTAXABASE[18] - TTAXABASE[20]) * positif(TTAXABASE[20])) * (1 - IND_RJLJ)
                 + positif_ou_nul(TTAXABASE[18] - TTAXABASE[20]) * (1 - IND_RJLJ) * positif(TTAXABASE[20])
                      * max(0,(TTAXABASE[18] - TTAXABASE[0] - (TTAXABASE[18] - TTAXABASEDEF[20]))) * STR_TR18)
		      + null(CSTRATE1 - 2) * SUP2TAXA[01] ;
STRATTAXA02_1_TL = SUP2TAXA[19]+ null(CSTRATE1 - 2) * SUP2TAXA[01] ;
STRATTAXA02_2_TL = SUP2TAXA[19]+SUP2TAXA[20] + null(CSTRATE1 - 2) * SUP2TAXA[01];
STRATTAXA03 = SUPTAXA[13] + null(CSTRATE1 - 3) * SUPTAXA[01];
STRATTAXA04 = SUPTAXA[08] + null(CSTRATE1 - 4) * SUPTAXA[01];
STRATTAXA05 = SUPTAXA[07] + null(CSTRATE1 - 5) * SUPTAXA[01];
STRATTAXA06 = SUPTAXA[03] + null(CSTRATE1 - 6) * SUPTAXA[01];
STRATTAXA07 = SUPTAXA[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPTAXA[0],TAXABASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(TAXATARDIF_A, TAXABASE_MAJO))
		    + null(CSTRATE1 - 3) * SUPTAXA[01] ;
STRATTAXA08 = SUPTAXA[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPTAXA[0],TAXABASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(TAXATARDIF_A, TAXABASE_MAJO))
		    + null(CSTRATE1 - 8) * SUPTAXA[01] ;
STRATTAXA10_1 = SUPTAXA[14] + null(CSTRATE1 - 10) * SUPTAXA[01];
STRATTAXA10_2 = SUP2TAXA[14] + null(CSTRATE1 - 10) * SUP2TAXA[01];
STRATTAXA11 = SUPTAXA[10]  + null(CSTRATE1 - 11) * SUPTAXA[01];
STRATTAXA17_1 = SUPTAXA[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPTAXA[0],TAXABASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(TAXATARDIF_A, TAXABASE_MAJO))
		    + null(CSTRATE1 - 17) * SUPTAXA[01] ;
STRATTAXA17_2 = SUP2TAXA[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPTAXA[0],TAXABASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(TAXATARDIF_A, TAXABASE_MAJO))
		    + null(CSTRATE1 - 17) * SUP2TAXA[01] ;
STRATTAXA22 = SUPTAXA[21] + null(CSTRATE1 - 22) * SUPTAXA[01];
STRATTAXA30 = SUPTAXA[09] + null(CSTRATE1 - 30) * SUPTAXA[01]+ null(CSTRATE1 - 30) * SUP2TAXA[01];
STRATTAXA31 = SUPTAXA[06] + null(CSTRATE1 - 31) * SUPTAXA[01];
STRATTAXA55 = SUPTAXA[12] + null(CSTRATE1 - 55) * SUPTAXA[01];
STRATTAXA99 = SUPTAXA[00] + null(CSTRATE1 - 99) * SUPTAXA[01];
STRATHR01 = SUPHR[22] + null(CSTRATE1-1) * SUPHR[01] + null(CSTRATE1 - 1) * SUP2HR[01];
STRATHR02_1 = SUPHR[20] + null(CSTRATE1-2) * SUPHR[01] + null(CSTRATE1 - 2) * SUP2HR[01];
STRATHR02_1_NTL = SUP2HR[17] + null(CSTRATE1-2) * SUPHR[01] + null(CSTRATE1 - 2) * SUP2HR[01];
STRATHR02_2_NTL = SUP2HR[17]+
                    (SUP2HR[18] * STR_TR18 * (1 - positif_ou_nul(TCHRBASE[18] - TCHRBASE[20]) * positif(TCHRBASE[20])) * (1 - IND_RJLJ)
                 + positif_ou_nul(TCHRBASE[18] - TCHRBASE[20]) * (1 - IND_RJLJ) * positif(TCHRBASE[20])
                      * max(0,(TCHRBASE[18] - TCHRBASE[0] - (TCHRBASE[18] - TCHRBASEDEF[20]))) * STR_TR18)
		      + null(CSTRATE1 - 2) * SUP2HR[01] ;
STRATHR02_1_TL = SUP2HR[19]+ null(CSTRATE1 - 2) * SUP2HR[01] ;
STRATHR02_2_TL = SUP2HR[19]+SUP2HR[20] + null(CSTRATE1 - 2) * SUP2HR[01];
STRATHR03 = SUPHR[13] + null(CSTRATE1 - 3) * SUPHR[01];
STRATHR04 = SUPHR[08] + null(CSTRATE1 - 4) * SUPHR[01];
STRATHR05 = SUPHR[07] + null(CSTRATE1 - 5) * SUPHR[01];
STRATHR06 = SUPHR[03] + null(CSTRATE1 - 6) * SUPHR[01];
STRATHR07 = SUPHR[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPHR[0], HRBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(HRTARDIF_A, HRBASE_MAJO))
		    + null(CSTRATE1 - 3) * SUPHR[01] ;
STRATHR08 = SUPHR[11] + null(CODE_2042 - 8) *
		    (positif(FLAG_RECTIF) *  min(SUPHR[0],HRBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(HRTARDIF_A, HRBASE_MAJO))
		    + null(CSTRATE1 - 8) * SUPHR[01] ;
STRATHR10_1 = SUPHR[14] + null(CSTRATE1 - 10) * SUPHR[01];
STRATHR10_2 = SUP2HR[14] + null(CSTRATE1 - 10) * SUP2HR[01];
STRATHR11 = SUPHR[10]  + null(CSTRATE1 - 11) * SUPHR[01];
STRATHR17_1 = SUPHR[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPHR[0],HRBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(HRTARDIF_A, HRBASE_MAJO))
		    + null(CSTRATE1 - 17) * SUPHR[01] ;
STRATHR17_2 = SUP2HR[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPHR[0],HRBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(HRTARDIF_A, HRBASE_MAJO))
		    + null(CSTRATE1 - 17) * SUP2HR[01] ;
STRATHR22 = SUPHR[21] + null(CSTRATE1 - 22) * SUPHR[01];
STRATHR30 = SUPHR[09] + null(CSTRATE1 - 30) * SUPHR[01]+ null(CSTRATE1 - 30) * SUP2HR[01];
STRATHR31 = SUPHR[06] + null(CSTRATE1 - 31) * SUPHR[01];
STRATHR32 = SUPHR[05] + null(CSTRATE1 - 32) * SUPHR[01] + null(CSTRATE1 - 32) * SUP2HR[01];
STRATHR55 = SUPHR[12] + null(CSTRATE1 - 55) * SUPHR[01];
STRATHR99 = SUPHR[00] + null(CSTRATE1 - 99) * SUPHR[01];
STRATCAP01 = SUPCAP[22] + null(CSTRATE1-1) * SUPCAP[01] + null(CSTRATE1 - 1) * SUP2CAP[01];
STRATCAP02_1 = SUPCAP[20] + null(CSTRATE1-2) * SUPCAP[01] + null(CSTRATE1 - 2) * SUP2CAP[01];
STRATCAP02_1_NTL = SUP2CAP[17] + null(CSTRATE1-2) * SUPCAP[01] + null(CSTRATE1 - 2) * SUP2CAP[01];
STRATCAP02_2_NTL = SUP2CAP[17]+
                    (SUP2CAP[18] * STR_TR18 * (1 - positif_ou_nul(TPCAPBASE[18] - TPCAPBASE[20]) * positif(TPCAPBASE[20])) * (1 - IND_RJLJ)
                 + positif_ou_nul(TPCAPBASE[18] - TPCAPBASE[20]) * (1 - IND_RJLJ) * positif(TPCAPBASE[20])
                      * max(0,(TPCAPBASE[18] - TPCAPBASE[0] - (TPCAPBASE[18] - TPCAPBASEDEF[20]))) * STR_TR18)
		      + null(CSTRATE1 - 2) * SUP2CAP[01] ;
STRATCAP02_1_TL = SUP2CAP[19]+ null(CSTRATE1 - 2) * SUP2CAP[01] ;
STRATCAP02_2_TL = SUP2CAP[19]+SUP2CAP[20] + null(CSTRATE1 - 2) * SUP2CAP[01];
STRATCAP03 = SUPCAP[13] + null(CSTRATE1 - 3) * SUPCAP[01];
STRATCAP04 = SUPCAP[08] + null(CSTRATE1 - 4) * SUPCAP[01];
STRATCAP05 = SUPCAP[07] + null(CSTRATE1 - 5) * SUPCAP[01];
STRATCAP06 = SUPCAP[03] + null(CSTRATE1 - 6) * SUPCAP[01];
STRATCAP07 = SUPCAP[16] + null(CODE_2042 - 7) * 
		    (positif(FLAG_RECTIF) *  min(SUPCAP[0], CAPBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(CAPTARDIF_A, CAPBASE_MAJO))
		    + null(CSTRATE1 - 3) * SUPCAP[01] ;
STRATCAP08 = SUPCAP[11] + null(CODE_2042 - 8) * 
		    (positif(FLAG_RECTIF) *  min(SUPCAP[0],CAPBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(CAPTARDIF_A, CAPBASE_MAJO))
		    + null(CSTRATE1 - 8) * SUPCAP[01] ;
STRATCAP10_1 = SUPCAP[14] + null(CSTRATE1 - 10) * SUPCAP[01];
STRATCAP10_2 = SUP2CAP[14] + null(CSTRATE1 - 10) * SUP2CAP[01];
STRATCAP11 = SUPCAP[10]  + null(CSTRATE1 - 11) * SUPCAP[01];
STRATCAP17_1 = SUPCAP[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPCAP[0],CAPBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(CAPTARDIF_A, CAPBASE_MAJO))
		    + null(CSTRATE1 - 17) * SUPCAP[01] ;
STRATCAP17_2 = SUP2CAP[15]  + null(CODE_2042 - 17) * 
		    (positif(FLAG_RECTIF) *  min(SUPCAP[0],CAPBASE_MAJO)
		     + (1 - positif(FLAG_RECTIF)) * min(CAPTARDIF_A, CAPBASE_MAJO))
		    + null(CSTRATE1 - 17) * SUP2CAP[01] ;
STRATCAP22 = SUPCAP[21] + null(CSTRATE1 - 22) * SUPCAP[01];
STRATCAP30 = SUPCAP[09] + null(CSTRATE1 - 30) * SUPCAP[01]+ null(CSTRATE1 - 30) * SUP2CAP[01];
STRATCAP31 = SUPCAP[06] + null(CSTRATE1 - 31) * SUPCAP[01];
STRATCAP55 = SUPCAP[12] + null(CSTRATE1 - 55) * SUPCAP[01];
STRATCAP99 = SUPCAP[00] + null(CSTRATE1 - 99) * SUPCAP[01];
regle corrective base_anterieure 12400 : 
application : iliad ;
MAJOISF07TARDIF_A = MAJOISF07TARD_DEF;
MAJOISF08TARDIF_A = MAJOISF08TARD_DEF;
MAJOISF17TARDIF_A = MAJOISF17TARD_DEF;
MAJOISFTARDIF_A = somme(x = 07,08,17 : MAJOISFxTARDIF_A);
ISFBASE_REF = ISFBASE_DEF;
MAJOISFTARDIF_REF = MAJOISFTARDIF_DEF;
ISFINTARDIF_A = ISFINTARDIF_DEF;
ISFTARDIF_A = ISFTARDIF_DEF;


STRATISF01 = SUPISF[22] ;

STRATISF02 = SUPISF[20] ;

STRATISF07 = SUPISF[16] + null(CODE_2042 - 7) *
                    (positif(FLAG_RECTIF) *  min(SUPISF[0],ISF4BASE)
                     + (1 - positif(FLAG_RECTIF)) * min(ISFTARDIF_A, ISF4BASE));

STRATISF08 = SUPISF[11] + null(CODE_2042 - 8) *
                    (positif(FLAG_RECTIF) *  min(SUPISF[0],ISFBRUT )
                     + (1 - positif(FLAG_RECTIF)) * min(ISFTARDIF_A, ISFBRUT));

STRATISF17 = SUPISF[15] + null(CODE_2042 - 17) *
 (positif(FLAG_RECTIF) *  min(SUPISF[0],ISF4BASE)
 + (1 - positif(FLAG_RECTIF)) * min(ISFTARDIF_A, ISF4BASE));

STRATISF99 = SUPISF[00] + null(CSTRATE1 - 99) * SUPISF[01] ;

regle corrective base_INITIAL 12700:
application : iliad ;
TISF4BASE[0] = ISF4 ; 
regle  corrective base_INITIAL 127:
application :  oceans, iliad ;
TIRBASE[0] = IRN ; 
TCSBASE[0] = CSG ;
TPSBASE[0] = PRS ;
TRDBASE[0] = RDSN ;
TCSALBASE[0] = CSAL ;
TCDISBASE[0] = CDIS ;
TNAPCR[0] = NAPCRINR ;
TTAXABASE[0] = TAXASSUR ;
TGAINBASE[0] = GAINSAL ;
TCHRBASE[0] = IHAUTREVT ; 
TPCAPBASE[0] = IPCAPTAXT ;
TRSE1BASE[0] = RSE1 ;
TRSE2BASE[0] = RSE2 ;
TRSE3BASE[0] = RSE3 ;
TRSE4BASE[0] = RSE4 ;
regle corrective base_TLNUNV 130:
application :  oceans ;
NURTOT_D = NURTOT ;
NUCTOT_D = NUCTOT ;
NUDTOT_D = NUDTOT ;
NUPTOT_D = NUPTOT ;
NUTOT_D = NUTOT ;
pour x=01..12,30,31,55:
NUPTOTx_D = NUPTOTx;
pour x=01..12,30,31,55:
NUCTOTx_D = NUCTOTx;
pour x=01..12,30,31,55:
NUDTOTx_D = NUDTOTx;
pour x=01..12,30,31,55:
NURTOTx_D = NURTOTx;
pour x=01..12,30,31,55:
NUTOTx_D = NUTOTx;
regle corrective base_TLNUNV 132 :
application : oceans;
pour x=01..12,30,31,55;i=RF,BA,LO,NC,CO:
NViDx_D = NViDx;
pour x=01..12,30,31,55;i=RF,BA,LO,NC,CO:
NUiNx_D = NUiNx ;
pour x=01..12,30,31,55:
NCCOx_D = NCCOx;
regle corrective base_anterieure 133 :
application : oceans;
RFCG_R = RFCG;
DRFRP_R = DRFRP;
BANOR_R = BANOR;
DEFBA_R = DEFBA;
BICNPF_R = BICNPF;
DLMRN_R = DLMRN;
BALNP_R = BALNP;
DALNP_R = DALNP;
RNI_R = RNI;
RNIDF_R = RNIDF;

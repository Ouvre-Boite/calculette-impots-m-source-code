#*************************************************************************************************************************
#
#Copyright or © or Copr.[DGFIP][2017]
#
#Ce logiciel a été initialement développé par la Direction Générale des 
#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2014 
#au titre des revenus perçus en 2013. La présente version a permis la 
#génération du moteur de calcul des chaînes de taxation des rôles d'impôt 
#sur le revenu de ce millésime.
#
#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français 
#et respectant les principes de diffusion des logiciels libres. Vous pouvez 
#utiliser, modifier et/ou redistribuer ce programme sous les conditions de 
#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur 
#le site "http://www.cecill.info".
#
#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris 
#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.
#
#**************************************************************************************************************************

regle  corrective base_INITIAL 1080:
application     : iliad ;
PRS_P = PRS;
CSG_P = CSG;
RDS_P = RDSN;
IRNIN_P = IRN ;
IRNIN_INR_P = IRNIN_INR;
CSREC_P = CSREC;
NAPCR_P = NAPCR;
TAXA_P = TAXABASE ;
CHR_P = CHRBASE ;
TAXABRUT_P = TAXASSUR ;
PCAPBRUT_P = IPCAPTAXT ;
CHRBRUT_P = IHAUTREVT ;
PCAP_P = PCAPBASE ;
RSE1_P = RSE1BASE ;
RSE2_P = RSE2BASE ;
RSE3_P = RSE3BASE ;
RSE4_P = RSE4BASE ;
CDIS_P = CDISBASE ;
VAR7WY_P = DEPCHOBAS;
VAR7WZ_P = DEPMOBIL;
VAR7WD_P = COD7WD;
ISF_P = ISF4BASE;

ACOTFOR_P = ACOTFOR ;
RCOTFOR_P = RCOTFOR ;
AREPA_P = AREPA ;
RREPA_P = RREPA ;
AAIDE_P = AAIDE ;
RAIDE_P = RAIDE ;
ADIFAGRI_P = ADIFAGRI ;
RDIFAGRI_P = RDIFAGRI ;
AFORET_P = AFORET ;
RFORET_P = RFORET ;
AFIPDOM_P = AFIPDOM ;
RFIPDOM_P = RFIPDOM ;
AFIPC_P = AFIPC ;
RFIPC_P = RFIPC ;
ACINE_P = ACINE ;
RCINE_P = RCINE ;
ARESTIMO_P = ARESTIMO ;
RRESTIMO_P = RRESTIMO ; 
ASOCREPR_P = ASOCREPR ;
RSOCREPR_P = RSOCREPR ;
APRESCOMP_P = APRESCOMP ;
RRPRESCOMP_P = RRPRESCOMP ;
AHEBE_P = AHEBE ;
RHEBE_P = RHEBE ;
ASURV_P = ASURV ;
RSURV_P = RSURV ;
BFCPI_P = BFCPI ;
RINNO_P = RINNO ;
ASOUFIP_P = ASOUFIP ; 
RSOUFIP_P = RSOUFIP ; 
ARIRENOV_P = ARIRENOV ; 
RRIRENOV_P = RRIRENOV ; 
ALOGDOM_P = ALOGDOM ;
RLOGDOM_P = RLOGDOM ;
ACREAT_P = ACREAT ;
RCREAT_P = RCREAT ;
ACOMP_P = ACOMP ;
RCOMP_P = RCOMP ;
RRETU_P = RRETU ;
ADONS_P = ADONS ;
RDONS_P = RDONS ;
ADUFLOGIH_P = ADUFLOGIH ;
RDUFLOGIH_P = RDUFLOGIH ;
ANOUV_P = ANOUV ;
RNOUV_P = RNOUV ;
AFOREST_P = AFOREST ;
RFOR_P = RFOR ;
ATOURREP_P = ATOURREP ;
RTOURREP_P = RTOURREP ;
ATOUHOTR_P = ATOUHOTR ;
RTOUHOTR_P = RTOUHOTR ;
ATOUREPA_P = ATOUREPA ;
RTOUREPA_P = RTOUREPA ;
ACELRREDLA_P = ACELRREDLA ; 
RCELRREDLA_P = RCELRREDLA ; 
ACELRREDLB_P = ACELRREDLB ;
RCELRREDLB_P = RCELRREDLB ;
ACELRREDLE_P = ACELRREDLE ;
RCELRREDLE_P = RCELRREDLE ;
ACELRREDLM_P = ACELRREDLM ;
RCELRREDLM_P = RCELRREDLM ;
ACELRREDLC_P = ACELRREDLC ;
RCELRREDLC_P = RCELRREDLC ;
ACELRREDLD_P = ACELRREDLD ;
RCELRREDLD_P = RCELRREDLD ;
ACELRREDLS_P = ACELRREDLS ;
RCELRREDLS_P = RCELRREDLS ;
ACELRREDLF_P = ACELRREDLF ;
RCELRREDLF_P = RCELRREDLF ;
ACELRREDLZ_P = ACELRREDLZ ;
RCELRREDLZ_P = RCELRREDLZ ;
ACELRREDMG_P = ACELRREDMG ;
RCELRREDMG_P = RCELRREDMG ;
ACELREPHS_P = ACELREPHS ;
RCELREPHS_P = RCELREPHS ;
ACELREPHR_P = ACELREPHR ;
RCELREPHR_P = RCELREPHR ;
ACELREPHU_P = ACELREPHU ;
RCELREPHU_P = RCELREPHU ;
ACELREPHT_P = ACELREPHT ;
RCELREPHT_P = RCELREPHT ;
ACELREPHZ_P = ACELREPHZ ;
RCELREPHZ_P = RCELREPHZ ;
ACELREPHX_P = ACELREPHX ;
RCELREPHX_P = RCELREPHX ;
ACELREPHW_P = ACELREPHW ;
RCELREPHW_P = RCELREPHW ;
ACELREPHV_P = ACELREPHV ;
RCELREPHV_P = RCELREPHV ;
ACELREPHF_P = ACELREPHF ;
RCELREPHF_P = RCELREPHF ;
ACELREPHE_P = ACELREPHE ;
RCELREPHE_P = RCELREPHE ;
ACELREPHD_P = ACELREPHD ;
RCELREPHD_P = RCELREPHD ;
ACELREPHH_P = ACELREPHH ;
RCELREPHH_P = RCELREPHH ;
ACELREPHG_P = ACELREPHG ;
RCELREPHG_P = RCELREPHG ;
ACELREPHB_P = ACELREPHB ;
RCELREPHB_P = RCELREPHB ;
ACELREPHA_P = ACELREPHA ;
RCELREPHA_P = RCELREPHA ;
ACELREPGU_P = ACELREPGU ;
RCELREPGU_P = RCELREPGU ;
ACELREPGX_P = ACELREPGX ;
RCELREPGX_P = RCELREPGX ;
ACELREPGT_P = ACELREPGT ;
RCELREPGT_P = RCELREPGT ;
ACELREPGS_P = ACELREPGS ;
RCELREPGS_P = RCELREPGS ;
ACELREPGW_P = ACELREPGW ;
RCELREPGW_P = RCELREPGW ;
ACELREPGP_P = ACELREPGP ;
RCELREPGP_P = RCELREPGP ;
ACELREPGL_P = ACELREPGL ;
RCELREPGL_P = RCELREPGL ;
ACELREPGV_P = ACELREPGV ;
RCELREPGV_P = RCELREPGV ;
ACELREPGK_P = ACELREPGK ;
RCELREPGK_P = RCELREPGK ;
ACELREPGJ_P = ACELREPGJ ;
RCELREPGJ_P = RCELREPGJ ;
ACELHM_P = ACELHM ;
RCELHM_P = RCELHM ;


ACELHL_P = ACELHL ;
RCELHL_P = RCELHL ;
ACELHNO_P = ACELHNO ;
RCELHNO_P = RCELHNO ;
ACELHJK_P = ACELHJK ;
RCELHJK_P = RCELHJK ;
ACELNQ_P = ACELNQ ;
RCELNQ_P = RCELNQ ;
ACELNBGL_P = ACELNBGL ;
RCELNBGL_P = RCELNBGL ;
ACELCOM_P = ACELCOM ;
RCELCOM_P = RCELCOM ;
ACEL_P = ACEL ;
RCEL_P = RCEL ;
ACELJP_P = ACELJP ;
RCELJP_P = RCELJP ;
ACELJBGL_P = ACELJBGL ;
RCELJBGL_P = RCELJBGL ;
ACELJOQR_P = ACELJOQR ; 
RCELJOQR_P = RCELJOQR ; 
ACEL2012_P = ACEL2012 ;
RCEL2012_P = RCEL2012 ;
ACELFD_P = ACELFD ; 
RCELFD_P = RCELFD ; 
ACELFABC_P = ACELFABC ;
RCELFABC_P = RCELFABC ;
AREDMEUB_P = AREDMEUB ; 
RREDMEUB_P = RREDMEUB ; 
AREDREP_P = AREDREP ;
RREDREP_P = RREDREP ;
AILMIX_P = AILMIX ; 
RILMIX_P = RILMIX ; 
AILMIY_P = AILMIY ;
RILMIY_P = RILMIY ;
AINVRED_P = AINVRED ; 
RINVRED_P = RINVRED ; 
AILMIH_P = AILMIH ;
RILMIH_P = RILMIH ;
AILMJC_P = AILMJC ;
RILMJC_P = RILMJC ;
AILMIZ_P = AILMIZ ;
RILMIZ_P = RILMIZ ;
AILMJI_P = AILMJI ;
RILMJI_P = RILMJI ;
AILMJS_P = AILMJS ;
RILMJS_P = RILMJS ;
AMEUBLE_P = AMEUBLE ;
RMEUBLE_P = RMEUBLE ;
APROREP_P = APROREP ;
RPROREP_P = RPROREP ;
AREPNPRO_P = AREPNPRO ; 
RREPNPRO_P = RREPNPRO ; 
AREPMEU_P = AREPMEU ; 
RREPMEU_P = RREPMEU ; 
AILMIC_P = AILMIC ;
RILMIC_P = RILMIC ;
AILMIB_P = AILMIB ; 
RILMIB_P = RILMIB ; 
AILMIA_P = AILMIA ; 
RILMIA_P = RILMIA ; 
AILMJY_P = AILMJY ;
RILMJY_P = RILMJY ;
AILMJX_P = AILMJX ;
RILMJX_P = RILMJX ;
AILMJW_P = AILMJW ; 
RILMJW_P = RILMJW ; 
AILMJV_P = AILMJV ; 
RILMJV_P = RILMJV ; 
ARESIMEUB_P = ARESIMEUB ;
RRESIMEUB_P = RRESIMEUB ;
RCODIW_P = RCODIW ;
RCODIM_P = RCODIM ;
RCODIL_P = RCODIL ;
RCODIN_P = RCODIN ;
RCODIV_P = RCODIV ;
RCODIJ_P = RCODIJ ;
RCODIE_P = RCODIE ;
RCODIF_P = RCODIF ;
RCODIG_P = RCODIG ;
RCODID_P = RCODID ;
RCODJU_P = RCODJU ;
RCODJT_P = RCODJT ; 
APATNAT1_P = APATNAT1 ;
RPATNAT1_P = RPATNAT1 ;
APATNAT2_P = APATNAT2 ;
RPATNAT2_P = RPATNAT2 ;
APATNAT3_P = APATNAT3 ;
RPATNAT3_P = RPATNAT3 ;
APATNAT_P = APATNAT ;
RPATNAT_P = RPATNAT ;
ADOMSOC1_P = ADOMSOC1 ; 
RDOMSOC1_P = RDOMSOC1 ; 
ALOGSOC_P = ALOGSOC ; 
RLOGSOC_P = RLOGSOC ; 
DIDOMPRO_P = DIDOMPRO ;
RIDOMPROE3_P = RIDOMPROE3 ;
ACOLENT_P = ACOLENT ;
RCOLENT_P = RCOLENT ;
ALOCENT_P = ALOCENT ;
RLOCENT_P = RLOCENT ;
RREVMOD_P = RREVMOD ;

ITRED_P = ITRED ; 
BICREV_P = BICREV;
BICREC_P = BICREC;
BICREP_P = BICREP;
BICHREV_P = BICHREV;
BICHREC_P = BICHREC;
BICHREP_P = BICHREP;
DNOCEP_P = DNOCEP;
DNOCEPC_P = DNOCEPC;
DNOCEPP_P = DNOCEPP;
BNCAADV_P = BNCAADV;
BNCAADC_P = BNCAADC;
BNCAADP_P = BNCAADP;
BAHDEV_P = VARBAHDEV;
BAHDEC_P = VARBAHDEC;
BAHDEP_P = VARBAHDEP;
BACDEV_P = VARBACDEV;
BACDEC_P = VARBACDEC;
BACDEP_P = VARBACDEP;
RCMFR_P = min(RCMAB + RTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM,RCMFR);
RCMFRNET_P = max(0,RCMFR - RCMAB - RTNC - RAVC - RCMNAB - RTCAR - RCMPRIVM);
TSNNV_P = abs(TSNNV) * min(0,TSNNV);
TSNNC_P = abs(TSNNC) * min(0,TSNNC);
TSNN1_P = abs(TSNN1) * min(0,TSNN1);
TSNN2_P = abs(TSNN2) * min(0,TSNN2);
TSNN3_P = abs(TSNN3) * min(0,TSNN3);
TSNN4_P = abs(TSNN4) * min(0,TSNN4);
TSNNT_P = abs(TSNNT) * min(0,TSNNT);
FRDV_P = FRDV;
FRDC_P = FRDC;
FRD1_P = FRD1;
FRD2_P = FRD2;
FRD3_P = FRD3;
FRD4_P = FRD4;
TFRDV_P = TFRDV;
TFRDC_P = TFRDC;
TFRD1_P = TFRD1;
TFRD2_P = TFRD2;
TFRD3_P = TFRD3;
TFRD4_P = TFRD4;
SOMMEBA_P = SOMMEBA;
SOMMEBIC_P = SOMMEBIC;
SOMMELOC_P = SOMMELOC;
SOMMEBNC_P = SOMMEBNC;
SOMMERF_P = SOMMERF;
SOMMERCM_P = SOMMERCM;
regle corrective base_anterieure_cor 11:
application : iliad ;
FRNRETENUANTV = FRNRETENUV * FLAG_RECTIF;
FRNRETENUANTC = FRNRETENUC ;
FRNRETENUANT1 = FRNRETENU1 ;
FRNRETENUANT2 = FRNRETENU2 ;
FRNRETENUANT3 = FRNRETENU3 ;
FRNRETENUANT4 = FRNRETENU4 ;
TFRNRETENUANTV = TFRNRETENUV ;
TFRNRETENUANTC = TFRNRETENUC ;
TFRNRETENUANT1 = TFRNRETENU1 ;
TFRNRETENUANT2 = TFRNRETENU2 ;
TFRNRETENUANT3 = TFRNRETENU3 ;
TFRNRETENUANT4 = TFRNRETENU4 ;
ANTINDIRPS = INDIRPS ;
ANTPPETOT = PPETOTX ;
ANTPPEREST2A = PPEREST2A ;
ANTPPEIMP2A = PPEIMP2A ;
DIFF7WY_A = DIFF7WY ; 
DIFF7WZ_A = DIFF7WZ ; 
DIFF7WD_A = DIFF7WD ; 
NATIMP_A = NATIMP ; 
PCSG_A = PCSG;
PRDS_A = PRDS;
PIR_A = PIR;
PTAXA_A=PTAXA;
PCHR_A=PHAUTREV;
PPCAP_A=PPCAP;
PRSE1_A=PRSE1;
PRSE2_A=PRSE2;
PRSE3_A=PRSE3;
PRSE4_A=PRSE4;
PTAXLOY_A=PTAXLOY;
PCVN_A=PCVN;
PGLOA_A=PGLOA;
PRSE5_A=PRSE5;
PCDIS_A=PCDIS;
PTOT_A = PTOT;
PPRS_A = PPRS;
RNI_A = RNI;
IREST_A = IREST;
IDEGR_A = IRDEG;
IRN_A = IRN;
IRNET_A = IRNET;
TAXANET_A = TAXANET;
TAXLOYNET_A = TAXLOYNET;
CHRNET_A = HAUTREVNET;
PCAPNET_A = PCAPNET;
RSE1NET_A = RSE1NET;
RSE2NET_A = RSE2NET;
RSE3NET_A = RSE3NET;
RSE4NET_A = RSE4NET;
CVNNET_A = CVNNET;
GLONET_A = CGLOANET;
CDISNET_A = CDISNET;
RSE5NET_A = RSE5NET;
IDCSG_A = IDCSG;
DCSGIM_A = DCSGIM;
IRANT_A = IRANT;
IRNIN_A = IRNIN;
IRNIN_INR_A = IRNIN_INR;
CSG_A = CSG;
RDS_A = RDSN;
PRS_A = PRS;
CDIS_A = CDIS;
CGLOA_A = CGLOA;
CVN_A = CVNSALC;
CICA_A = CICA;
TAXABASE_A = TAXABASE;
LOYBASE_A=LOYBASE;
CHRBASE_A = CHRBASE;
PCAPBASE_A = PCAPBASE;
RSE1BASE_A = RSE1BASE;
RSE2BASE_A = RSE2BASE;
RSE3BASE_A = RSE3BASE;
RSE4BASE_A = RSE4BASE;
CDISBASE_A = CDISBASE;
GLOBASE_A = GLOBASE;
CVNBASE_A = CVNBASE;
RSE5BASE_A = RSE5BASE;
IRNIN_R99R_A = IRNIN_R99R+(IRNIN_PA)*null(1-IND_PASSAGE);
IRNIN_R9901_A = IRNIN_R9901;
CSG_R9901_A = CSG_R9901;
RDS_R9901_A = RDS_R9901;
PRS_R9901_A = PRS_R9901;
CDIS_R9901_A = CDIS_R9901;
TAXA_R9901_A = TAXA_R9901;
CHR_R9901_A = CHR_R9901;
PCAP_R9901_A = PCAP_R9901;
RSE1_R9901_A = RSE1_R9901;
RSE2_R9901_A = RSE2_R9901;
RSE3_R9901_A = RSE3_R9901;
RSE4_R9901_A = RSE4_R9901;
LOY_R9901_A = LOY_R9901;
CVN_R9901_A = CVN_R9901;
GLO_R9901_A = GLO_R9901;
RSE5_R9901_A = RSE5_R9901;
CSG_R99R_A = CSG_R99R+CSG_PA*null(1-IND_PASSAGE);
RDS_R99R_A = RDS_R99R+CRDS_PA*null(1-IND_PASSAGE);
PRS_R99R_A = PRS_R99R+PRS_PA*null(1-IND_PASSAGE);
CDIS_R99R_A = CDIS_R99R+CDIS_PA*null(1-IND_PASSAGE);
TAXA_R99R_A = TAXA_R99R+TAXA_PA*null(1-IND_PASSAGE);
CHR_R99R_A = CHR_R99R+CHR_PA*null(1-IND_PASSAGE);
PCAP_R99R_A = PCAP_R99R+PCAP_PA*null(1-IND_PASSAGE);
RSE1_R99R_A = RSE1_R99R+RSE1_PA*null(1-IND_PASSAGE);
RSE2_R99R_A = RSE2_R99R+RSE2_PA*null(1-IND_PASSAGE);
RSE3_R99R_A = RSE3_R99R+RSE3_PA*null(1-IND_PASSAGE);
RSE4_R99R_A = RSE4_R99R+RSE4_PA*null(1-IND_PASSAGE);
LOY_R99R_A = LOY_R99R+LOY_PA*null(1-IND_PASSAGE);
CVN_R99R_A = CVN_R99R+CVN_PA*null(1-IND_PASSAGE);
GLO_R99R_A = GLO_R99R+GLO_PA*null(1-IND_PASSAGE);
RSE5_R99R_A = RSE5_R99R+RSE5_PA*null(1-IND_PASSAGE);
INRIR_R99R_A = INRIR_R99R+INRIR_R99RA;
INRCSG_R99R_A = INRCSG_R99R+INRCSG_R99RA;
INRCRDS_R99R_A = INRCRDS_R99R+INRCRDS_R99RA;
INRPRS_R99R_A = INRPRS_R99R+INRPRS_R99RA;
INRCDIS_R99R_A = INRCDIS_R99R+INRCDIS_R99RA;
INRTAXA_R99R_A = INRTAXA_R99R+INRTAXA_R99RA;
INRCHR_R99R_A = INRCHR_R99R+INRCHR_R99RA;
INRPCAP_R99R_A = INRPCAP_R99R+INRPCAP_R99RA;
INRRSE1_R99R_A = INRRSE1_R99R+INRRSE1_R99RA;
INRRSE2_R99R_A = INRRSE2_R99R+INRRSE2_R99RA;
INRRSE3_R99R_A = INRRSE3_R99R+INRRSE3_R99RA;
INRRSE4_R99R_A = INRRSE4_R99R+INRRSE4_R99RA;
INRLOY_R99R_A = INRLOY_R99R+INRLOY_R99RA;
INRCVN_R99R_A = INRCVN_R99R+INRCVN_R99RA;
INRGLO_R99R_A = INRGLO_R99R+INRGLO_R99RA;
INRRSE5_R99R_A = INRRSE5_R99R+INRRSE5_R99RA;
INRIR_R9901_A = INRIR_R9901+INRIR_R9901A;
INRCSG_R9901_A = INRCSG_R9901+INRCSG_R9901A;
INRCRDS_R9901_A = INRCRDS_R9901+INRCRDS_R9901A;
INRPRS_R9901_A = INRPRS_R9901+INRPRS_R9901A;
INRCDIS_R9901_A = INRCDIS_R9901+INRCDIS_R9901A;
INRTAXA_R9901_A = INRTAXA_R9901+INRTAXA_R9901A;
INRCHR_R9901_A = INRCHR_R9901+INRCHR_R9901A;
INRPCAP_R9901_A = INRPCAP_R9901+INRPCAP_R9901A;
INRRSE1_R9901_A = INRRSE1_R9901+INRRSE1_R9901A;
INRRSE2_R9901_A = INRRSE2_R9901+INRRSE2_R9901A;
INRRSE3_R9901_A = INRRSE3_R9901+INRRSE3_R9901A;
INRRSE4_R9901_A = INRRSE4_R9901+INRRSE4_R9901A;
INRLOY_R9901_A = INRLOY_R9901+INRLOY_R9901A;
INRCVN_R9901_A = INRCVN_R9901+INRCVN_R9901A;
INRGLO_R9901_A = INRGLO_R9901+INRGLO_R9901A;
INRRSE5_R9901_A = INRRSE5_R9901+INRRSE5_R9901A;
RECUP_INR_IR_A=RECUP_INR_IR;
RECUP_INR_CSG_A=RECUP_INR_CSG;
RECUP_INR_CRDS_A=RECUP_INR_CRDS;
RECUP_INR_PRS_A=RECUP_INR_PRS;
RECUP_INR_TAXA_A=RECUP_INR_TAXA;
RECUP_INR_LOY_A=RECUP_INR_LOY;
RECUP_INR_CDIS_A=RECUP_INR_CDIS;
RECUP_INR_PCAP_A=RECUP_INR_PCAP;
RECUP_INR_CVN_A=RECUP_INR_CVN;
RECUP_INR_GLO_A=RECUP_INR_GLO;
RECUP_INR_RSE1_A=RECUP_INR_RSE1;
RECUP_INR_RSE2_A=RECUP_INR_RSE2;
RECUP_INR_RSE3_A=RECUP_INR_RSE3;
RECUP_INR_RSE4_A=RECUP_INR_RSE4;
RECUP_INR_RSE5_A=RECUP_INR_RSE5;
RECUP_INR_CHR_A=RECUP_INR_CHR;
RECUP_INR_ISF_A=RECUP_INR_ISF;
IAR_A = IAR;
NAPIR_A=NAPIR;

FRDV_A = max(FRDV * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(FRDV_P,FRDV1731));
FRDC_A = max(FRDC * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(FRDC_P,FRDC1731));
FRD1_A = max(FRD1 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(FRD1_P,FRD11731));
FRD2_A = max(FRD2 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(FRD2_P,FRD21731));
FRD3_A = max(FRD3 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(FRD3_P,FRD31731));
FRD4_A = max(FRD4 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(FRD4_P,FRD41731));
TFRDV_A = max(TFRDV * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(TFRDV_P,TFRDV1731));
TFRDC_A = max(TFRDC * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(TFRDC_P,TFRDC1731));
TFRD1_A = max(TFRD1 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(TFRD1_P,TFRD11731));
TFRD2_A = max(TFRD2 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(TFRD2_P,TFRD21731));
TFRD3_A = max(TFRD3 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(TFRD3_P,TFRD31731));
TFRD4_A = max(TFRD4 * FLAGPREM * positif(FLAG_RETARD+FLAG_DEFAUT),max(TFRD4_P,TFRD41731));
IND_PASSAGE_A = IND_PASSAGE;
IND_PASSR9901_A = IND_PASSR9901;
IRNIN_RECT_A = IRNIN_RECT;
INRIR_RECT_A = INRIR_RECT;

IRNIN_REF_A = max(IRNIN_INR,IRNIN_P+IRNIN_PA)*positif(DO_INR_IR2)
	     + (IRNIN_REF * (1-positif(INDFLAGCIR)) + IRNIN_R * positif(INDFLAGCIR))
            * (1-positif(DO_INR_IR2));
CSG_REF_A = max(CSG,CSG_P+CSG_PA)*positif(DO_INR_CSG2)
	   + CSG_REF * (1-positif(INDFLAGCCSG)) + CSG_R * positif(INDFLAGCCSG);
RDS_REF_A = max(RDSN,RDS_P+CRDS_PA)*positif(DO_INR_CRDS2)
            + RDS_REF * (1-positif(INDFLAGCRDS)) + RDS_R * positif(INDFLAGCRDS);
PRS_REF_A = max(PRS,PRS_P+PRS_PA)*positif(DO_INR_PS2)
            + PRS_REF * (1-positif(INDFLAGCPRS)) + PRS_R * positif(INDFLAGCPRS);
CDIS_REF_A = max(CDIS,CDIS_P+CDIS_PA)*positif(DO_INR_CDIS2)
            + CDIS_REF * (1-positif(INDFLAGCCDIS)) + CDIS_R * positif(INDFLAGCCDIS);
TAXA_REF_A = max(TAXABASE,TAXA_P+TAXA_PA)*positif(DO_INR_TAXA2)
            + TAXA_REF * (1-positif(INDFLAGCTAXA)) + TAXA_R * positif(INDFLAGCTAXA);
CHR_REF_A = max(CHRBASE,CHR_P+CHR_PA)*positif(DO_INR_CHR2)
            + CHR_REF * (1-positif(INDFLAGCCHR)) + CHR_R * positif(INDFLAGCCHR);
PCAP_REF_A = max(PCAPBASE,PCAP_P+PCAP_PA)*positif(DO_INR_PCAP2)
            + PCAP_REF * (1-positif(INDFLAGCPCAP)) + PCAP_R * positif(INDFLAGCPCAP);
RSE1_REF_A = max(RSE1BASE,RSE1_P+RSE1_PA)*positif(DO_INR_RSE12)
            + RSE1_REF * (1-positif(INDFLAGCRSE1)) + RSE1_R * positif(INDFLAGCRSE1);
RSE2_REF_A = max(RSE2BASE,RSE2_P+RSE2_PA)*positif(DO_INR_RSE22)
            + RSE2_REF * (1-positif(INDFLAGCRSE2)) + RSE2_R * positif(INDFLAGCRSE2);
RSE3_REF_A = max(RSE3BASE,RSE3_P+RSE3_PA)*positif(DO_INR_RSE32)
            + RSE3_REF * (1-positif(INDFLAGCRSE3)) + RSE3_R * positif(INDFLAGCRSE3);
RSE4_REF_A = max(RSE4BASE,RSE4_P+RSE4_PA)*positif(DO_INR_RSE42)
            + RSE4_REF * (1-positif(INDFLAGCRSE4)) + RSE4_R * positif(INDFLAGCRSE4);
LOY_REF_A = max(LOYBASE,LOY_P+LOY_PA)*positif(DO_INR_LOY2)
            + LOY_REF * (1-positif(INDFLAGCLOY)) + LOY_R * positif(INDFLAGCLOY);
CVN_REF_A = max(CVNBASE,CVN_P+CVN_PA)*positif(DO_INR_CVN2)
            + CVN_REF * (1-positif(INDFLAGCCVN)) + CVN_R * positif(INDFLAGCCVN);
GLO_REF_A = max(GLOBASE,GLO_P+GLO_PA)*positif(DO_INR_GLO2)
            + GLO_REF * (1-positif(INDFLAGCGLO)) + GLO_R * positif(INDFLAGCGLO);
RSE5_REF_A = max(RSE5BASE,RSE5_P+RSE5_PA)*positif(DO_INR_RSE52)
            + RSE5_REF * (1-positif(INDFLAGCRSE5)) + RSE5_R * positif(INDFLAGCRSE5);

IRNIN_PA_A = IRNIN_PA;
CSG_PA_A = CSG_PA;
CRDS_PA_A = CRDS_PA;
PRS_PA_A = PRS_PA;
CDIS_PA_A = CDIS_PA;
TAXA_PA_A = TAXA_PA;
CHR_PA_A = CHR_PA;
PCAP_PA_A = PCAP_PA;
RSE1_PA_A = RSE1_PA;
RSE2_PA_A = RSE2_PA;
RSE3_PA_A = RSE3_PA;
RSE4_PA_A = RSE4_PA;
LOY_PA_A = LOY_PA;
CVN_PA_A = CVN_PA;
GLO_PA_A = GLO_PA;
RSE5_PA_A = RSE5_PA;


DO_INR_IR_A = DO_INR_IR + DO_INR_IRC;
DO_IR_A = DO_IR;
DO_INR_CSG_A = DO_INR_CSG+ DO_INR_CSGC;
DO_CSG_A = DO_CSG;
DO_INR_CRDS_A = DO_INR_CRDS+ DO_INR_CRDSC;
DO_CRDS_A = DO_CRDS;
DO_INR_PS_A = DO_INR_PS+ DO_INR_PSC;
DO_PS_A = DO_PS;
DO_INR_CDIS_A = DO_INR_CDIS+ DO_INR_CDISC;
DO_CDIS_A = DO_CDIS;
DO_INR_TAXA_A = DO_INR_TAXAGA+ DO_INR_TAXAC;
DO_TAXA_A = DO_TAXA;
DO_INR_CHR_A = DO_INR_CHR+ DO_INR_CHRC;
DO_CHR_A = DO_CHR;
DO_INR_PCAP_A = DO_INR_PCAP+ DO_INR_PCAPC;
DO_PCAP_A = DO_PCAP;
DO_INR_RSE1_A = DO_INR_RSE1+ DO_INR_RSE1C;
DO_RSE1_A = DO_RSE1;
DO_INR_RSE2_A = DO_INR_RSE2+ DO_INR_RSE2C;
DO_RSE2_A = DO_RSE2;
DO_INR_RSE3_A = DO_INR_RSE3+ DO_INR_RSE3C;
DO_RSE3_A = DO_RSE3;
DO_INR_RSE4_A = DO_INR_RSE4+ DO_INR_RSE4C;
DO_RSE4_A = DO_RSE4;
DO_INR_LOY_A = DO_INR_LOY+ DO_INR_LOYC;
DO_LOY_A = DO_LOY;
DO_INR_CVN_A = DO_INR_CVN+ DO_INR_CVNC;
DO_CVN_A = DO_CVN;
DO_INR_GLO_A = DO_INR_GLO+ DO_INR_GLOC;
DO_GLO_A = DO_GLO;
DO_INR_RSE5_A = DO_INR_RSE5+ DO_INR_RSE5C;
DO_RSE5_A = DO_RSE5;

INRIR_NTL_A= INRIR_NTLDEC+INRIR_NTLADEC;
INRCSG_NTL_A=INRCSG_NTLDEC+INRCSG_NTLADEC;
INRCRDS_NTL_A=INRCRDS_NTLDEC+INRCRDS_NTLADEC;
INRPRS_NTL_A=INRPRS_NTLDEC+INRPS_NTLADEC;
INRCDIS_NTL_A=INRCDIS_NTLDEC+INRCDIS_NTLADEC;
INRTAXA_NTL_A=INRTAXA_NTLDEC+INRTAXA_NTLADEC;
INRCHR_NTL_A=INRCHR_NTLDEC+INRCHR_NTLADEC;
INRPCAP_NTL_A=INRPCAP_NTLDEC+INRPCAP_NTLADEC;
INRRSE1_NTL_A=INRRSE1_NTLDEC+INRRSE1_NTLADEC;
INRRSE2_NTL_A=INRRSE2_NTLDEC+INRRSE2_NTLADEC;
INRRSE3_NTL_A=INRRSE3_NTLDEC+INRRSE3_NTLADEC;
INRRSE4_NTL_A=INRRSE4_NTLDEC+INRRSE4_NTLADEC;
INRLOY_NTL_A=INRLOY_NTLDEC+INRLOY_NTLADEC;
INRCVN_NTL_A=INRCVN_NTLDEC+INRCVN_NTLADEC;
INRGLO_NTL_A=INRGLO_NTLDEC+INRGLO_NTLADEC;
INRRSE5_NTL_A=INRRSE5_NTLDEC+INRRSE5_NTLADEC;
INRIR_NTL_1_A= INRIR_NTLDEC_1+INRIR_NTLADEC_1;
INRCSG_NTL_1_A=INRCSG_NTLDEC_1+INRCSG_NTLADEC_1;
INRCRDS_NTL_1_A=INRCRDS_NTLDEC_1+INRCRDS_NTLADEC_1;
INRPRS_NTL_1_A=INRPRS_NTLDEC_1+INRPS_NTLADEC_1;
INRCDIS_NTL_1_A=INRCDIS_NTLDEC_1+INRCDIS_NTLADEC_1;
INRTAXA_NTL_1_A=INRTAXA_NTLDEC_1+INRTAXA_NTLADEC_1;
INRCHR_NTL_1_A=INRCHR_NTLDEC_1+INRCHR_NTLADEC_1;
INRPCAP_NTL_1_A=INRPCAP_NTLDEC_1+INRPCAP_NTLADEC_1;
INRRSE1_NTL_1_A=INRRSE1_NTLDEC_1+INRRSE1_NTLADEC_1;
INRRSE2_NTL_1_A=INRRSE2_NTLDEC_1+INRRSE2_NTLADEC_1;
INRRSE3_NTL_1_A=INRRSE3_NTLDEC_1+INRRSE3_NTLADEC_1;
INRRSE4_NTL_1_A=INRRSE4_NTLDEC_1+INRRSE4_NTLADEC_1;
INRLOY_NTL_1_A=INRLOY_NTLDEC_1+INRLOY_NTLADEC_1;
INRCVN_NTL_1_A=INRCVN_NTLDEC_1+INRCVN_NTLADEC_1;
INRGLO_NTL_1_A=INRGLO_NTLDEC_1+INRGLO_NTLADEC_1;
INRRSE5_NTL_1_A=INRRSE5_NTLDEC_1+INRRSE5_NTLADEC_1;

INRIR_TL_1_A=INRIR_TLADEC_12+max(0,INRIR_TL_1_AD-arr(DO_INR_IR*INRIR_TL_1_AD/(INRIR_TL_1_AD+INRIR_TL_AD)));
INRCSG_TL_1_A=INRCSG_TLADEC_12+max(0,INRCSG_TL_1_AD-arr(DO_INR_CSG*INRCSG_TL_1_AD/(INRCSG_TL_AD+INRCSG_TL_1_AD)));
INRPRS_TL_1_A=INRPRS_TLADEC_12+max(0,INRPRS_TL_1_AD-arr(DO_INR_PS*INRPRS_TL_1_AD/(INRPRS_TL_AD+INRPRS_TL_1_AD)));
INRCRDS_TL_1_A=INRCRDS_TLADEC_12+max(0,INRCRDS_TL_1_AD-arr(DO_INR_CRDS*INRCRDS_TL_1_AD/(INRCRDS_TL_AD+INRCRDS_TL_1_AD)));
INRCDIS_TL_1_A=INRCDIS_TLADEC_12+max(0,INRCDIS_TL_1_AD-arr(DO_INR_CDIS*INRCDIS_TL_1_AD/(INRCDIS_TL_AD+INRCDIS_TL_1_AD)));
INRTAXA_TL_1_A=INRTAXA_TLADEC_12+max(0,INRTAXA_TL_1_AD -arr(DO_INR_TAXAGA*INRTAXA_TL_1_AD/(INRTAXA_TL_AD+INRTAXA_TL_1_AD)));
INRCHR_TL_1_A=INRCHR_TLADEC_12+max(0,INRCHR_TL_1_AD -arr(DO_INR_CHR*INRCHR_TL_1_AD/(INRCHR_TL_AD+INRCHR_TL_1_AD)));
INRPCAP_TL_1_A=INRPCAP_TLADEC_12+max(0,INRPCAP_TL_1_AD -arr(DO_INR_PCAP*INRPCAP_TL_1_AD/(INRPCAP_TL_AD+INRPCAP_TL_1_AD)));
INRRSE1_TL_1_A=INRRSE1_TLADEC_12+max(0,INRRSE1_TL_1_AD -arr(DO_INR_RSE1*INRRSE1_TL_1_AD/(INRRSE1_TL_AD+INRRSE1_TL_1_AD)));
INRRSE2_TL_1_A=INRRSE2_TLADEC_12+max(0,INRRSE2_TL_1_AD -arr(DO_INR_RSE2*INRRSE2_TL_1_AD/(INRRSE2_TL_AD+INRRSE2_TL_1_AD)));
INRRSE3_TL_1_A=INRRSE3_TLADEC_12+max(0,INRRSE3_TL_1_AD -arr(DO_INR_RSE3*INRRSE3_TL_1_AD/(INRRSE3_TL_AD+INRRSE3_TL_1_AD)));
INRRSE4_TL_1_A=INRRSE4_TLADEC_12+max(0,INRRSE4_TL_1_AD -arr(DO_INR_RSE4*INRRSE4_TL_1_AD/(INRRSE4_TL_AD+INRRSE4_TL_1_AD)));
INRLOY_TL_1_A=INRLOY_TLADEC_12+max(0,INRLOY_TL_1_AD -arr(DO_INR_LOY*INRLOY_TL_1_AD/(INRLOY_TL_AD+INRLOY_TL_1_AD)));
INRCVN_TL_1_A=INRCVN_TLADEC_12+max(0,INRCVN_TL_1_AD -arr(DO_INR_CVN*INRCVN_TL_1_AD/(INRCVN_TL_AD+INRCVN_TL_1_AD)));
INRGLO_TL_1_A=INRGLO_TLADEC_12+max(0,INRGLO_TL_1_AD -arr(DO_INR_GLO*INRGLO_TL_1_AD/(INRGLO_TL_AD+INRGLO_TL_1_AD)));
INRRSE5_TL_1_A=INRRSE5_TLADEC_12+max(0,INRRSE5_TL_1_AD -arr(DO_INR_RSE5*INRRSE5_TL_1_AD/(INRRSE5_TL_AD+INRRSE5_TL_1_AD)));

INRIR_TL_A=INRIR_TLADEC+max(0,INRIR_TL_AD-arr(DO_INR_IR*INRIR_TL_AD/(INRIR_TL_AD+INRIR_TL_1_AD)));
INRCSG_TL_A=INRCSG_TLADEC+max(0,INRCSG_TL_AD -arr(DO_INR_CSG*INRCSG_TL_AD/(INRCSG_TL_AD+INRCSG_TL_1_AD)));
INRPRS_TL_A=INRPRS_TLADEC+max(0,INRPRS_TL_AD -arr(DO_INR_PS*INRPRS_TL_AD/(INRPRS_TL_AD+INRPRS_TL_1_AD)));
INRCRDS_TL_A=INRCRDS_TLADEC+max(0,INRCRDS_TL_AD -arr(DO_INR_CRDS*INRCRDS_TL_AD/(INRCRDS_TL_AD+INRCRDS_TL_1_AD)));
INRCDIS_TL_A=INRCDIS_TLADEC+max(0,INRCDIS_TL_AD -arr(DO_INR_CDIS*INRCDIS_TL_AD/(INRCDIS_TL_AD+INRCDIS_TL_1_AD)));
INRTAXA_TL_A=INRTAXA_TLADEC+max(0,INRTAXA_TL_AD-arr(DO_INR_TAXAGA*INRTAXA_TL_AD/(INRTAXA_TL_AD+INRTAXA_TL_1_AD)));
INRCHR_TL_A=INRCHR_TLADEC+max(0,INRCHR_TL_AD-arr(DO_INR_CHR*INRCHR_TL_AD/(INRCHR_TL_AD+INRCHR_TL_1_AD)));
INRPCAP_TL_A=INRPCAP_TLADEC+max(0,INRPCAP_TL_AD-arr(DO_INR_PCAP*INRPCAP_TL_AD/(INRPCAP_TL_AD+INRPCAP_TL_1_AD)));
INRRSE1_TL_A=INRRSE1_TLADEC+max(0,INRRSE1_TL_AD-arr(DO_INR_RSE1*INRRSE1_TL_AD/(INRRSE1_TL_AD+INRRSE1_TL_1_AD)));
INRRSE2_TL_A=INRRSE2_TLADEC+max(0,INRRSE2_TL_AD-arr(DO_INR_RSE2*INRRSE2_TL_AD/(INRRSE2_TL_AD+INRRSE2_TL_1_AD)));
INRRSE3_TL_A=INRRSE3_TLADEC+max(0,INRRSE3_TL_AD-arr(DO_INR_RSE3*INRRSE3_TL_AD/(INRRSE3_TL_AD+INRRSE3_TL_1_AD)));
INRRSE4_TL_A=INRRSE4_TLADEC+max(0,INRRSE4_TL_AD-arr(DO_INR_RSE4*INRRSE4_TL_AD/(INRRSE4_TL_AD+INRRSE4_TL_1_AD)));
INRLOY_TL_A=INRLOY_TLADEC+max(0,INRLOY_TL_AD-arr(DO_INR_LOY*INRLOY_TL_AD/(INRLOY_TL_AD+INRLOY_TL_1_AD)));
INRCVN_TL_A=INRCVN_TLADEC+max(0,INRCVN_TL_AD-arr(DO_INR_CVN*INRCVN_TL_AD/(INRCVN_TL_AD+INRCVN_TL_1_AD)));
INRGLO_TL_A=INRGLO_TLADEC+max(0,INRGLO_TL_AD-arr(DO_INR_GLO*INRGLO_TL_AD/(INRGLO_TL_AD+INRGLO_TL_1_AD)));
INRRSE5_TL_A=INRRSE5_TLADEC+max(0,INRRSE5_TL_AD-arr(DO_INR_RSE5*INRRSE5_TL_AD/(INRRSE5_TL_AD+INRRSE5_TL_1_AD)));
TL_IR_A=TL_IR;
TL_CS_A=TL_CS;
TL_RD_A=TL_RD;
TL_PS_A=TL_PS;
TL_CDIS_A=TL_CDIS;
TL_TAXAGA_A=TL_TAXAGA;
TL_CHR_A=TL_CHR;
TL_CAP_A=TL_CAP;
TL_RSE1_A=TL_RSE1;
TL_RSE2_A=TL_RSE2;
TL_RSE3_A=TL_RSE3;
TL_RSE4_A=TL_RSE4;
TL_LOY_A=TL_LOY;
TL_CVN_A=TL_CVN;
TL_GLO_A=TL_GLO;
TL_RSE5_A=TL_RSE5;

INRIR_RETDEF_A = INRIR_RETDEF;
INRCSG_RETDEF_A = INRCSG_RETDEF;
INRCRDS_RETDEF_A = INRCRDS_RETDEF;
INRPRS_RETDEF_A = INRPRS_RETDEF;
INRCDIS_RETDEF_A = INRCDIS_RETDEF;
INRTAXA_RETDEF_A = INRTAXA_RETDEF;
INRCHR_RETDEF_A = INRCHR_RETDEF;
INRPCAP_RETDEF_A = INRPCAP_RETDEF;
INRRSE1_RETDEF_A = INRRSE1_RETDEF;
INRRSE2_RETDEF_A = INRRSE2_RETDEF;
INRRSE3_RETDEF_A = INRRSE3_RETDEF;
INRRSE4_RETDEF_A = INRRSE4_RETDEF;
INRLOY_RETDEF_A = INRLOY_RETDEF;
INRCVN_RETDEF_A = INRCVN_RETDEF;
INRGLO_RETDEF_A = INRGLO_RETDEF;
INRRSE5_RETDEF_A = INRRSE5_RETDEF;


INR_IR_TARDIF_A=INR_IR_TARDIF;
INR_CSG_TARDIF_A=INR_CSG_TARDIF;
INR_CRDS_TARDIF_A=INR_CRDS_TARDIF;
INR_CDIS_TARDIF_A=INR_CDIS_TARDIF;
INR_PS_TARDIF_A=INR_PS_TARDIF;
INR_TAXA_TARDIF_A=INR_TAXAGA_TARDIF;
INR_CHR_TARDIF_A=INR_CHR_TARDIF;
INR_PCAP_TARDIF_A=INR_PCAP_TARDIF;
INR_RSE1_TARDIF_A=INR_RSE1_TARDIF;
INR_RSE2_TARDIF_A=INR_RSE2_TARDIF;
INR_RSE3_TARDIF_A=INR_RSE3_TARDIF;
INR_RSE4_TARDIF_A=INR_RSE4_TARDIF;
INR_LOY_TARDIF_A=INR_LOY_TARDIF;
INR_CVN_TARDIF_A=INR_CVN_TARDIF;
INR_GLO_TARDIF_A=INR_GLO_TARDIF;
INR_RSE5_TARDIF_A=INR_RSE5_TARDIF;

INCIR_NET_A=INCIR_NET;
INCCS_NET_A=INCCS_NET;
INCPS_NET_A=INCPS_NET;
INCCDIS_NET_A=INCCDIS_NET;
INCRD_NET_A=INCRD_NET;
INCTAXA_NET_A=INCTAXA_NET;
INCCHR_NET_A=INCCHR_NET;
INCPCAP_NET_A=INCPCAP_NET;
INCRSE1_NET_A=INCRSE1_NET;
INCRSE2_NET_A=INCRSE2_NET;
INCRSE3_NET_A=INCRSE3_NET;
INCRSE4_NET_A=INCRSE4_NET;
INCLOY_NET_A=INCLOY_NET;
INCCVN_NET_A=INCCVN_NET;
INCGLO_NET_A=INCGLOA_NET;
INCRSE5_NET_A=INCRSE5_NET;

TXINR_A=TXINR;
TXINRRED_A=TXINRRED;
TXINRREDISF_A=TXINRREDISF;
TXINR_PA_A = TXINR_PA;
TXINRISF_PA_A = TXINRISF_PA;
TINR_A=TINR;
TXINRISF_A=TXINRISF;
RETXISF_A=RETXISF;
TINR_1_A=TINR_1;
NBREMOISCS2_A=NBREMOISCS2;
NBREMOISCS222_A=NBREMOISCS222;
NBREMOIS2_A=NBREMOIS2;
NBREMOIS222_A=NBREMOIS222;
NBREMOIS2ISF_A=NBREMOIS2ISF;
NBREMOIS222ISF_A=NBREMOIS222ISF;
INDACOINR_A=present(ACODELAISINR);
IND_PASSAGEISF_A = IND_PASSAGEISF;
IND_PASSR9901ISF_A = IND_PASSR9901ISF;
PISF_A=PISF;
ISFNET_A = ISFNET;
ISF4BASE_A = ISF4BASE;
ISF_R9901_A = ISF_R9901;
ISF_R99R_A = ISF_R99R+ISF_PA*null(1-IND_PASSAGEISF);
INRISF_R99R_A = INRISF_R99R+INRISF_R99RA;
INRISF_R9901_A = INRISF_R9901+INRISF_R9901A;
ISF_REF_A = max(ISF4BASE,ISF_P+ISF_PA)*positif(DO_INR_ISF2)
             + ISF_REF * (1-positif(INDFLAGCISF)) + ISF_R * positif(INDFLAGCISF);
ISF_PA_A = ISF_PA;
DO_INR_ISF_A = DO_INR_ISF+ DO_INR_ISFC;
DO_ISF_A = DO_ISF;
INRISF_NTL_A=INRISF_NTLDEC+INRISF_NTLADEC;
INRISF_RETDEF_A = INRISF_RETDEF;
INR_ISF_TARDIF_A=INR_ISF_TARDIF;
INCISF_NET_A=INCISF_NET;

